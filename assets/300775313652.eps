%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 9-Template_Glyph_055786427966.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 837 716
%%HiResBoundingBox: 0 0 836.6680 715.2735
%%CropBox: 0 0 836.6680 715.2735
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic Ui Elements 25 Solid Glyph icon pack including login. security. share. lock. up</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic Ui Elements 25 Solid Glyph icon pack including login. security. share. lock. up</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>chat</rdf:li>
               <rdf:li> chating</rdf:li>
               <rdf:li> massege</rdf:li>
               <rdf:li> mail</rdf:li>
               <rdf:li> arrow</rdf:li>
               <rdf:li> down</rdf:li>
               <rdf:li> downlod</rdf:li>
               <rdf:li> media</rdf:li>
               <rdf:li> share</rdf:li>
               <rdf:li> social </rdf:li>
               <rdf:li> sharing</rdf:li>
               <rdf:li> arrow</rdf:li>
               <rdf:li> up</rdf:li>
               <rdf:li> upload</rdf:li>
               <rdf:li> lock</rdf:li>
               <rdf:li> security</rdf:li>
               <rdf:li> locked</rdf:li>
               <rdf:li> login</rdf:li>
               <rdf:li> box</rdf:li>
               <rdf:li> check box</rdf:li>
               <rdf:li> unchecked</rdf:li>
               <rdf:li> world</rdf:li>
               <rdf:li> globe</rdf:li>
               <rdf:li> map</rdf:li>
               <rdf:li> ineternet</rdf:li>
               <rdf:li> check</rdf:li>
               <rdf:li> ok</rdf:li>
               <rdf:li> tick</rdf:li>
               <rdf:li> good</rdf:li>
               <rdf:li> alert</rdf:li>
               <rdf:li> danger</rdf:li>
               <rdf:li> warning</rdf:li>
               <rdf:li> sign</rdf:li>
               <rdf:li> add</rdf:li>
               <rdf:li> new</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T15:26:56+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T15:26:56+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T15:26:56+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>220</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA3AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWwrHcAkYEt8H/AJT92Ku4P/Kf&#xA;uxV3B/5T92KrcKHYq7FXYql+u67puh6e1/qDssIZY0WNHlkeRzRI0jjDMzMegAxUlIIfzL00Xtrb&#xA;appWqaKl9IsFndahbCOB5X+xHzjeXgzdg4XDSOJMPM3nKy0C7sLOWyvb+71ETNbQWEPrvxt+HqFh&#xA;yWgHqrgpJLWh+b/0tem1/Quq6fRC/r31r6MWxA48uTfEa7DGlBTbUr+Ows2upFZ0Vo0KrStZHWMd&#xA;fdsVSO88821vY6nfLavNbabcrYVSSLm9006W/AqWHpj1JF+JyPh+LpSrSLQ0X5l6Qy6OZLaeM6y/&#xA;ow14MqTi6W0MbOrMp+MsysPhZV2O4BNLxNL+ZenG51eE2Nwf0Ws7RlDC7XH1a4NpIFQPVD6wovqU&#xA;qN8aXiRI892guNDtpLSUT63JcRKqFGEMlq4jlWRqgbO1NvDx2wUtqMv5kaT+jdVvbW3nvG0q9NhJ&#xA;bQBXllfkFDRKpPIMahe5Iw0to8ebrV9VfSo7S5a9RigUxlULC1S64+qf3QakgXjyrXfpvgpNo7Qt&#xA;Yj1jTItRiglt4Zy3pJOoWQqpK8ioJoDTavbFQUwxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoqL+7GRL&#xA;JdgV2KuxVCv9tvmckhbhQ7FXYq7FWDfmrMt/p1l5StQJdW126gESDcwwW8yTTXL+CosdK+J2whEu&#xA;5d5ni1638+6Tq9los+rWtrp13Cot3t0KzzSxH4muJIlUcIzuN8Qp5pjpHniC71ldD1LTbvRNXlRp&#xA;ba3vBGUnVN39CaF5Y3KDdlrWm/TBS2n99A89q8SLEzmhUTp6kdVYMCy1WtKbb9cMavfkxyCXD6a4&#xA;vPl+hJx5dmkuJ5Lq30qVb7imon6kec8Yp8MjNI3LYbcgcuMsVbCXzH6nGjDUXuYV19J/4pbPoWq8&#xA;0jtU0mOzt+K2UL2TsYkidZIlHGZVHB0VhxAoQCMETjrcSv3j9Tm7Lv0FfpHLLbxaVHqF9yGq3H1J&#xA;uNwvRA4EoZqKSDzZsgTG9rpsxeHvxgn3ED9Bb07QbyExJdw6W1tbK31WK3s2iMbmRZarykcKPUQO&#xA;aD7QB6jIyIrbmzmcNekS+JH6lWPRrmMqY4tOQqI1UrakUWEs0QFJOkZdivhU0zC4dT/Oh/pT/wAU&#xA;yvB3T+Y/4lFy2Ev1n14UtVkLeoZGhJf1CgjL8gy78FC18NslkGe/SYAeYJ/3wa4nHW4PzH6layt5&#xA;LeERMIlRNo0gQxqo8ONWyzCMlesxPuBH3ksZ8P8ADfxRGXNbsVdirsVdirsVdirsVdirsVdirsVR&#xA;UX92MiWTyLSf+ckvL1/5j846M2kXsX+EbW9vJZxxkM8enuI5gEFPTJY/ByNCOpXpgVLI/wDnKjRW&#xA;/LCXz0dAuwI9UXR/0f6qEGVofXD+vxpw9MfyV5be+KvXPKfmO18y+WdL8wWsUkFtqltHdRQzDjIq&#xA;yqGAYdPpGx6jbFUY/wBtvmckhbhQ7FXYqxrz95407ydof6Rux6k00gt7K3rxEk7glQznZEABLMeg&#xA;99sQLQTTD/KHnL8udKe41bVvNNpqHmXUgDqF7VgiKN1t7dSvwQx9u7Hc+xIKAQzPU/zB8o6VeRWu&#xA;p362RuIkntridHS3kR604TEenXbpyrgpNhj8+t6f5w85eXx5eP12x0Kea81HVo1P1dOUDwpBHIRS&#xA;R3MlTx6AYUXZZZ5uu7+z8qa1eacSuoW1hczWbKodhNHCzRkIQwY8gNiN8AZF5ra/mX52sbeK3ms3&#xA;1Cd55wl1PbSek8HIrDItxDHbc1VvtEWgqPAkVlTHiKL8v/mJ5xvdVtku7L6taXbxJNczW04hiNZF&#xA;4RIhdqzFRwdn40+LvTBSglV1bzb5xh1OXTohcma3vrx7gLbUQWHwizIl9Pial9uJ5Ghr0xpbKl5n&#xA;8z+c7XzVqkVlLNcW1le2gs9Li4gyRGG2kcBVtebK8kjqXNyetPT25YgKSVbTfP8A5+vzAI9Os4+T&#xA;W0czvFc0DXU/o1pyFPS+0617dVrs0tlq2/Mbz1czLAujQW7yLYpGZkuKF7uS2jeYUI5RIbiQFeq8&#xA;Nz1AaWyor+Y3ndZmmlsEWKWeCKG1+qzPJ6XxxzSxEPGH/fJ9lmBC+PdpbL1bAydirsVdirsVdirs&#xA;VdirsVdirsVdiqKi/uxkSyQ8WlaXDc3F1FZwR3N5QXc6xorygCg9RgKvQeOBVL/D2gfo06X+jbX9&#xA;GE8jY+hH6BJblX0uPD7W/TriqOREjRY41CIgCoiigAGwAAxVDP8Abb5nJIW4UOxVxNATSvtiql60&#xA;n++H+9P+asaRbvWk/wB8P96f81Y0ttNI7Aq1u5UihB4UI/4LGltsSuAALdwBsACn/NWNLbvWk/3w&#xA;/wB6f81Y0tu9aT/fD/en/NWNLbvWk/3w/wB6f81Y0tu9aT/fD/en/NWNLbvWk/3w/wB6f81Y0tu9&#xA;aT/fD/en/NWNLbvWk/3w/wB6f81Y0tu9aT/fD/en/NWNLbvWk/3w/wB6f81Y0tu9aT/fD/en/NWN&#xA;LbvWk/3w/wB6f81Y0tu9aT/fD/en/NWNLbvWk/3w/wB6f81Y0tu9aT/fD/en/NWNLbvWk/3w/wB6&#xA;f81Y0tu9aT/fD/en/NWNLbvWk/3w/wB6f81Y0tu9aT/fD/en/NWNLbvWk/3w/wB6f81Y0tqiklQS&#xA;pU+BpX8K4pREcqBACd8iQld60fj+vGku9aPx/XjSu9aPx/XjSodjViR3OFDWFDsVbAqaeOKV/oSe&#xA;2C1p3oSe2NrTvQk9sbWmmidRU9BjarVUsaDqcVX+hJ7Y2tO9CT2xtad6Entja000bKKnpjatKhY0&#xA;GKrvQk9sbWnehJ7Y2tO9CT2xtaWujLSvfFXJGzVp2xtV3oSe2NrTvQk9sbWnehJ7Y2tLWQqaHFW1&#xA;jZhUdMbVv0JPbG1p3oSe2NrTvQk9sbWljKVND1GKrhC5AI6HG1b9CT2xtad6Entja070JPbG1pTI&#xA;oaeGFXYodiq5Ptr8xgSisilinmD81vy28vXbWes+ZLCzvEPGS1adWlQ/5cacmX6Riqb+X/NPlvzF&#xA;atd6DqlrqluhCySWkyTBGO4V+BPE+xxVMpf7s4QqhD/eD/PthKETkUvOrz/nIb8mbO7ntLjzPAlx&#xA;byNFMnpXDUdGKsKrGQaEdjirMfLXmfQfM+jw6zoN4l9plwXENygZQTGxRhRwrCjKRuMVTCf7H04Q&#xA;pWW/2z8sJQFfIpUb6+s7Czmvb2eO2s7ZGluLiVgkaIoqzMzUAAGKoLy75m8v+ZNNGp6DqEGpWDM0&#xA;f1i3cOodftKadGFRscVRtx+z9OEILdv0bEqFXAlLbTzLoF5rV7odrqEE2r6ckcl9Yo4MsSy/YLqO&#xA;lfw2r1GKpliqhcfbHyyQQV8H2PpwFISnzj5x0Dyf5eutf164+rafagcmALO7seKRxoN2Zj0H0nap&#xA;wK88/L3/AJye/Lrzr5hTQLZLzTL+4YrY/XkjWOcjcIrRyScZCP2W+QJO2KvXcVQ0394f8+2SCFeP&#xA;+7X5YClJ/Mfnbyh5Z9D/ABDrNnpRueX1cXcyRF+FOXEMQTSorgVA6N+aP5c63qMWm6T5k06+1Cev&#xA;o2sFxG8j8QWPFQamgFdsVZRiqFf7bfM5JC3Ch2Krk+2vzGBKQ/mjH5nk/LzX08rFxr7Wcn1AxGkv&#xA;KnxCIjf1CleFP2qZFL8150mSaRJ1ZZ1YiVXBDhwaMGB3rXrXFXqX/OMsHm2T83NGfy+JhBHJXWXT&#xA;l6Isip9UTEfDRgPg5ft0pvir78l/uzhCqEP94P8APthKED5vi8zS+WtQTyvPDbeYPS5adLcp6kPq&#xA;KQ3B1qNnAK8v2a1oaUyKX5q+ZrPWrPzDqNvrls9pq6XEhvreReDLKzFm28N6im1OmKvsb/nEbT/z&#xA;CtfJCtrKxW3lVlZ9CtWj43UpmkMj3DNX+6NSEqPi69KclXu8/wBj6cIUrLf7Z+WEoDEfzi80+bfK&#xA;/kK+1jyrpo1PV4GiVIDG8wSNnAklMUZV34r4HbqdhkUsP0PU189+Q5f+VqX36ClntZpdU8sD1NKE&#xA;dtGSBcyesxuZFKgSVD+mK8WUkHFU/wDyH8s/l7oHkuSHyLqr61pNzeSzT30kiu5n4ohRgqR8OKIu&#xA;3EePfFXoFx+z9OEILdv0bEqHl/8AzkJ+aWu+RPKZOg6ZcXep3ySKmorC72tlGtA00zgFefxj01ba&#xA;u52FCEvh/wAs+evNPlvzTH5o0u/kXWVkaWa4kYyev6hrIs9T+8WT9qvz674q/RH8u/Ntz5s8pWOt&#xA;XmmXOj3sylLvT7uN4njmQ8X4hwpZCd1am498VT24+2Plkggr4PsfTgKQ+Yv+c1PN15bxaD5W+rQT&#xA;afcFtTleT1RJ6sPOFFBR0HHjKxIIO9PDAr5o0nXLry/rWn6xbafbpe6dcxXVszGdlE1u6yKGAl7E&#xA;Dkta4q/Sby1qsmr+XNK1aSMRSahZ2908SklVaeJZCoJ7DliqJm/vD/n2yQQrx/3a/LAUviP/AJzK&#xA;Zj+bcAJJC6VbcR4fvZumBXmn5TEj81PJtP8Aq+ab/wBRceKv0pxVCv8Abb5nJIW4UOxVcn21+YwJ&#xA;RWRSwaz/ACR/K2CG4W58u2WpXN3PJdXl/qEMdzdSzTNzd2ldeS1Y/ZWi+2Ksr0jQtE0W1+qaNp9t&#xA;ptpXl9Xs4Y4I+XSvCMKtcVRkv92cIVQh/vB/n2wlCJyKWBeevyR8g+dvMel+YNcszJe6aQJFQ8Y7&#xA;qJalIrhafEquailPA1GKs7jjjijWONQkaAKiKAFVQKAADoBiq2f7H04QpWW/2z8sJQFfIpSbzf5Q&#xA;0LzboF1oet24nsrtGQtRfUjYigkiYhuDr2OKpV+WX5X+Wvy50GXRtBa4lhnna5uLi7dZJnkZQu5R&#xA;Y0ACoAAFH34qyi4/Z+nCEFu36NiVCU+dfK1r5s8qap5cupnt4NTgaB54gC6VoQwDbHcYEvB1/wCc&#xA;IfKnIcvMt+Vr8QEUIJHsd8VfSeKqFx9sfLJBBXwfY+nAUh4n/wA5CfkJ5h/MzV9Iv9J1G0s10+3k&#xA;gmS79UEl3DgqY1f8cCvJj/zhP+YBFDr2lEVJ63PU9f8AdWKvrfy1pUmkeXNK0mSQSyafZ29q8qgh&#xA;WaCJYywB7HjiqJm/vD/n2yQQrx/3a/LAUvN/zQ/5x/8AIn5j6nbaprT3lpqFtF6BubCWONpIgSyr&#xA;IJY5lPAsaEAHfeu2BUj8n/8AOKH5ZeV/Mljr9vPqd/dadIs9rDezQNCsyHlHIVhghYlGHJfipXti&#xA;r2bFUK/22+ZySFuFDsVbU0YHwOBKI9ePBSbd68eNLbvXjxpbWySoUIHU4gIUo2CuCemEqr+vHgpN&#xA;u9ePGlt3rx40trJZFZaDxxAQsiYKxJ8MJVW9ePBSbd68eNLbvXjxpbUpnVqU7YQhuGRVrXviQqp6&#xA;8eCk27148aW3evHjS2oysGYEeGEIXxSKq0PjgIVf68eNJt3rx40tu9ePGltQkYM5I6YQhVSZAgB6&#xA;jBSrvXjxpNu9ePGlt3rx40todjVifE4UNYUOxVsCpA8cUqv1c/zZG1p31c/zY2tO+rn+bG1ppoSq&#xA;k16YbWliLyYL0riqp9XP82C1p31c/wA2NrTvq5/mxtaWvFwWta4bVbGnM0rTviVVPq5/mwWtO+rn&#xA;+bG1p31c/wA2NrSySPhTetcIKujj513pTElV/wBXP82C1p31c/zY2tO+rn+bG1pTkTgaVr3whVyR&#xA;c1rWmNqu+rn+bBa076uf5sbWnfVz/Nja0pOvFiPDCqosBZQa9cbWm/q5/mwWtO+rn+bG1p31c/zY&#xA;2tKRFCR4ZJWsUOxVcn21+YwJRWRS8J80/wDOW3lDTNZuNO0bTZtbjtvXWS+WVYIHe1jMkghPGRnU&#xA;AU5EAEnao3xVmX5T/nf5T/MeOeCwD2Os2iLLc6XOys/pNSksTqaSJ8QB2BU7MBtVV6FL/dnCFUIf&#xA;7wf59sJQicilxIAqdgOpxVj3lj8wvJfmq91Gy8vatDqVxpTKl8sHIhC9eJDkBXU8T8SEjFU9n+x9&#xA;OEKVlv8AbPywlAV8il5Fqn55X9n+fFn+WaaRHLZ3AjEmoeqRKGktjccghHHivQitf1Yq9dxVRuP2&#xA;fpwhBbt+jYlQq4EvJ/JH57x+aPzb8weQBpBtk0Y3SRah63MyvZTrBJyj4rxDEkrRjir1jFVC4+2P&#xA;lkggr4PsfTgKQ8q1D88Lq0/PS1/LEaOjwXASuqeuQ452puKiLhTanH7WBWG6H/zlhqGp+RPNXmdv&#xA;LMcUnlyTT40tvrTMsv1+WSM8m9IcfT9Pw3r2xV7J+WfnGXzn5F0nzPLaCxk1KN5GtVcyBOErR7OV&#xA;SteFemKp9N/eH/PtkghXj/u1+WApauLiC3gkuLiRYbeFWkmmkYKiIoqzMxoAABUk4FYz5U/NL8vv&#xA;Nt9PYeXdcttRvbZS8tvGWV+APEuocLzUH9pajp44qynFUK/22+ZySFuFDsVXJ9tfmMCUs8+xajL5&#xA;G8xRaYJDqUmmXq2QhJEpnNu4j9MgH4udKbdcil8DWb+aOdt+51cEWN2JKyTf3gS4IDVT7VCtPo+l&#xA;V6D/AM48r5vk/NnyxSPUlt47e6bUWuZJDCIuNwP3oKCpJZONe/HFX2nL/dnCFUIf7wf59sJQlPn7&#xA;/Ff+DdXPlJlXzILZzphcIw9Ub0Ak+DkRULy2rSu2RS+OdX/Pz85fN2gQ/lsbdz5hurh7O/uYIzDe&#xA;3K14/VnjUIsVCG9VhSq7Gg5clX0n+QX5LW/5a+XZfrUi3HmPVAj6pOhJjQJUpBHXYrHyNWpVifCm&#xA;KvTp/sfThClZb/bPywlAV8il4nq35W+Zbn/nJ/R/PCWyP5ct7FmuLoso4zpby26x8a8i3KRHBpSl&#xA;fDFXtmKqNx+z9OEILdv0bEqHkv536Z+f93qmmv8AlpepBpggZb6ENbJJ6/OoYm4XdShAHE9jXAl8&#xA;teR7D85pvzY1u38s3Hp+fI5L79MTc7ZeTrcAXfxSD0TWb+X6MVfY/wCTFn+alr5Wmj/Mm5judZN0&#xA;7WxQxM623FQqyNCFjJ5hiKdup7BVm1x9sfLJBBXwfY+nAUh5BqS/mp/0MFaNb6xGnkWietphu7YO&#xA;f9EPL/RifWNZfi6e/TArB/L8X/OQn/KvfOAvvMkE2ueppp0a6Go2LiFfWk+tVlVuEXNeIHMitKDF&#xA;XuH5VDzKPy/0YeZrpb3XfSf69dJLHOrt6r8f3kRKNRKDbFWRTf3h/wA+2SCFeP8Au1+WApfAH5+/&#xA;mx5h86+dry3nD2GmaPLPYWenqzj4Y5WVpJlJp6r0+KgoAAO1SFYZ5C876x5I812XmbSFikvrH1Ak&#xA;VwGaF1ljaJ1dUZGI4uf2uuKv0b8l+YH8x+UdG1+S3Nq+q2UF29uTXgZow5UE0qN9j4Yqj3+23zOS&#xA;Qtwodiq5Ptr8xgSisil5F5s/5xg/LjzBrc+sRtd6TcXXrG5hsXjWB3uIzFLII5EkCOwap40FRWnX&#xA;FWU/lx+Ufk38vreddCgd7y6CpdahcsJLh0jFEj5AKFRR0VQPep3xVmUv92cIVQh/vB/n2wlCJyKU&#xA;lt/JXlS380XHmqDS4I/MN3CtvcaiF/eNGvQeAJ6FgKkAAmgGKp1iqnP9j6cIUrLf7Z+WEoCvkUsX&#xA;uvKOrz/mFZeaF8w3kWl2tlJaP5dUL9Wkkkavqsfx6cqgUbjVSqyjFVG4/Z+nCEFu36NiVCrgS808&#xA;o/kZonln80Nc8/W1/PNca167fUHVRHE93Ks07cx8TVdfhFBQHvir0vFVC4+2Plkggr4PsfTgKQ86&#xA;vfyQ0m7/ADgt/wAzG1K4W+t+FNPCJ6RKW5tx8X2uhrgViuj/APOKXl3TPJ/mPyzHrl5JB5iexkmu&#xA;GjiDxfUJHkQKBseXqkGuKvU/IHk618m+T9N8s2tw91BpqNGlxKArvzkaQkhdur4qm8394f8APtkg&#xA;hXj/ALtflgKWL6r+VX5a6vqE2o6n5Y027v7luVxcy20bSO1Kcmam598CoZPyX/KVHV18oaTyUhhW&#xA;0iIqN9wVIOKsyREjRY41CIgCoiigAGwAAxVDP9tvmckhbhQ7FW1NGB8DgSrfWF8Dgpbd9YXwONLb&#xA;vrC+BxpbaeZWUgA740tqaNxYHwwqq/WF8Dgpbd9YXwONLbvrC+BxpbWyShloBhAVbE4RqnwxKqn1&#xA;hfA4KW3fWF8DjS276wvgcaW1ksgelB0wgK6KQJWo64kKv+sL4HBS276wvgcaW3fWF8DjS2pyuHao&#xA;8MIVdHKFWhGJCrvrC+BwUtu+sL4HGlt31hfA40tqTtyYnxwqqJMoUAg7YKW2/rC+Bxpbd9YXwONL&#xA;bvrC+BxpbUWNWJ8TklaxQ7FW1FWA8TilW+rr4nI2tO+rr4nG1p31dfE42tNPCqqSCdsbWlNFDOAe&#xA;+Eqq/V18Tgtad9XXxONrTvq6+JxtaWyRBVqCcIKrYkDtQ+GJVU+rr4nBa076uvicbWnfV18Tja0s&#xA;ljCUoeuEFXRRh61PTElV/wBXXxOC1p31dfE42tO+rr4nG1pTlQI1B4YQq6OIMtSTiSq76uvicFrT&#xA;vq6+Jxtad9XXxONrSk68WI8MKqiQqVBqd8FrTf1dfE42tO+rr4nG1p31dfE42tKJFCR4ZJWsUOxV&#xA;cn21+YwJVbq5htbWa6mLCGBGlkKqztxQFjREDMxoOiipyKXzr56/5yugtNYu9I8qQDWVMljcafqF&#xA;irSE21UkvYZo5VqJOKsqlV2Db0ZcVZ5+Un59+XPP7y2/NLPU57udNN0hVlkuBZwRq4muWVTEhY8t&#xA;+XHooJbFXqMv92cIVQh/vB/n2wlCW+d/NEPlTylqvmOa3e7j0u3e4NtGQrPx6LyNeO/U9hkUsC/I&#xA;f89f+Vox6tHNpP6Lu9KMTNwl9aJ47gycKEqhVl9Oh8eo8Aq9YxVTn+x9OEKVlv8AbPywlAVZJI4o&#xA;2kkYJGgLO7EBVUCpJJ6AZFL5yvv+czvKsHnVbS30+4uPKaI8U1+qgXDT814zRoXoYQgb4TRjUHbp&#xA;ir6H07ULLUtPttRsJluLK8iS4tZ03V4pVDo6+zKa4quuP2fpwhBbt+jYlQl/mPzV5e8tWcN5rt9H&#xA;YW1xPHawSS1+OeY0RFABJJpX2FSdhgSxbRvPuqzfmR550TVI4rXy95YtbC4tb0o6krPbmed5JCSr&#xA;BdxsNuOKs10zU9P1TT7fUdOuI7uxu41ltrmJgyOjCoZSMVXXH2x8skEFfB9j6cBSFmoXMtrYXN1F&#xA;byXcsETyx2kPH1JWRSwjTmVXk5FBUgVwK8T8r/8AOS0wjtZvPPlm98u6df3c1rBrPBns4JEmeNYL&#xA;lmCsjoEozU3NTxUVoq9yVlZQykMrCqsNwQe4xVDzf3h/z7ZIIV4/7tflgKWAfmT+YHnLRS9j5M8p&#xA;3HmXUokEl3NURWsAbdUqaNNKQK+mm4BBPUDAryTRf+cy5rG7u9O89eVptOv7ZXqtoWVxMq1WKS3u&#xA;OLx8v5uZ+WKvo3y9qw1jQNN1cRegNRtYLsQ8ufD141k48qLXjypWmKqr/bb5nJIW4UOxVcn21+Yw&#xA;JUPMcVzLoV6tte3GnTCJmW8s4knuECfE3pRSJMrsQCAOBO+2+RS+Tfyg/MnQ/wApvNHmyHz7pupW&#xA;uqaw6XtpfXFsBdywsZJAssVR6bSlw2x48qhqccVTb8gpdY8xfm9rnnOwt9T0Hy5r11M9r9VtY5LK&#xA;4ML+o8F5KyyrEWQk8lpVyQrA0BVfVcv92cIVQh/vB/n2wlDeo6fZ6lp9zp19Es9leRPBcwt9l45F&#xA;Kup+anIpfJ9tcebv+cavN99HLYvrX5ea0/KC4UKsnNQ3pAy0okyDZlPwuu49lXsf5Hfnva/mj+lo&#xA;f0S+lXWlmNynq/WI3imZwh58I+LDhuD16jvRV6jP9j6cIUrLf7Z+WEoCUef2kXyJ5jMZIkGl3vAr&#xA;s3L6u9KU71yKX5s/4e1//q2Xf/IiT/mnFX6IfksrL+U3lNGBV49Mt0dTsVZECspHYqRQjFWXXH7P&#xA;04Qgt2/RsSoeOfn3cWum+dvyx17WqL5W07VLldTmkFYoriaOP6nJJ4BGjdq9qYEvUPMuu+WtL8tX&#xA;mra3cQJoYt2a5lkKtHJCyH4V/wB+cwaKo+1XbFWCf84x2eoWv5N6MLtHijme5uLCGSvJLWa4d4uv&#xA;UMDzB8Dir0y4+2Plkggr4PsfTgKQ841jz/quhfnjpvl3WLtLbyprukOdKLoiq2qxzjkhmIBr6I2X&#xA;lSrL3OBUT+fmpeW7D8pPMq64Y/SvLOW3s4XpykvZFP1b01PV1l4vt0pXtiqefljaapZ/lz5YtNVD&#xA;LqMGl2cd0j/bV1gUFX/yl6N74qns394f8+2SCFeP+7X5YCl8W+cP+cjPzX0r8ztb0t/MU1r5csdb&#xA;u7PjbWOnyzR2kF00ZWIzQ/G6xDbm3XrgVn3mny9/zj1+bXmGHzDcectSudX1IQ2llo1pJAkyU+FY&#xA;UtpLV5gOTMzMxKipblxxV9FaNpdvpOj2OlWzO9vp9vFawvIQXKQoI1LFQo5UXegGKrn+23zOSQtw&#xA;odiq5Ptr8xgSisilinmH8rvJOvyXk+oacj3d/cWd3d3X2pHewZDCtZOYWPinFkUAEFu5riqdaL5c&#xA;0TQxeLpNmlkl/cte3UcVQjXEiqjyBK8V5CMV4gAnfqTiqPl/uzhCqEP94P8APthKETkUofUNO0/U&#xA;rOWx1G2ivLKdeM1tOiyRuvgyMCpxVLPK/knyl5Vhnh8uaTbaXHdMHuBbRhDIy148m6njU0Hau2Kp&#xA;vP8AY+nCFKy3+2flhKA3eWdnfWk1newR3VpcIY57eZFkjkRhRldGBVlI6g5FLDX/ACP/ACjbWI9W&#xA;PlPTBcRwtAIBbRC1Ks3Lk1sF9BnHZynKnfFWX6ZpemaVYxWGl2kNhYQAiC0to0hhQMSx4RoFVasS&#xA;dhiq+4/Z+nCEFu36NiVCF13QNG1/SrjSdas4r/TbpeM9tMvJWHUH2YHcMNwdxgS80sP+cXPyjtL+&#xA;O5eyury2gf1LfS7q6lls42qTtGTVh4h2IPeuKvWI444o1jjUJGgCoigBVUCgAA6AYqpXH2x8skEF&#xA;fB9j6cBSEk86eRPKnnTSDpPmTT0v7QNzi5EpJE9Kc4pEKujfI79DtgVh/l7/AJxy/LbR9Yt9Wljv&#xA;NZu7I8rEatctdRwEEEGOMhV2ptyBp164q9PxVDTf3h/z7ZIIV4/7tflgKUj1ryD5J1vTpNO1XQ7K&#xA;6spJpLlongQfv5m5yzKVAZZJGNWcHke5wKgfKX5Ufl15Ru3vPLug21heOpQ3ShpJQp6qskrOyg9w&#xA;p3xVlmKoV/tt8zkkLcKHYq2DQg+GKVb6wP5cjS276wP5caW3fWB/LjS2tebkpFKVw0trEbiwPhiq&#xA;r9YH8uClt31gfy40tu+sD+XGltZJLzWlKYQFajfg1aV2piVVPrA/lwUtu+sD+XGlt31gfy40tqck&#xA;nOm1KYQFdHJwrtWuJCqn1gfy4KW3fWB/LjS276wP5caW1OR+bVpTamEK3HKEWhFcSFX/AFgeGClt&#xA;31geGNLbvrA8MaW1J25MT44VXpPxUClaY0trvrA/lwUtu+sD+XGlt31gfy40tqJNST45JWsUOxVt&#xA;RVgPE4Eoj0Y/D9eC0u9GPw/Xjau9GPw/XjarZIkCEgb4goUowGcA9MJVX9GPw/XgtLvRj8P142rv&#xA;Rj8P142qyWNFWoFDXEFC2FVZiCKimEqq+jH4frwWl3ox+H68bV3ox+H68bVTmRVpxFK1whBdCisD&#xA;yFaYlVT0Y/D9eC0u9GPw/Xjau9GPw/XjaqUyqrAAUFMIQuijRlqRU1wEqv8ARj8P142l3ox+H68b&#xA;V3ox+H68bVQkUK5A6YQhWSJCgJG5wWrfox+H68bS70Y/D9eNq70Y/D9eNqh2FGI8DhQ1hQ7FVyfb&#xA;X5jAlFZFLEI7Sx1e6u7zXdRZAs80Fjp8V5JbRRQwyFFkZYZI/Ukl4epyb7IIC03LKovy1cvDrGp6&#xA;Ml6dQsbaK2u7GeWX15kS4aaN4HkJZ5BG1vyDuS1HoSaVxVkUv92cIVQh/vB/n2wlDF/za/MO3/L/&#xA;AMjX3mKSIXFzHxgsLViQJbmU0jU034jdm/yQcil8YXv50fmnrGoJc6p5h1e0vL2cxWkNhcvYW8Io&#xA;Kf6PGoEtHdPtfshhWrclVe7/APOM/wCfPmDzRfyeTvODGXWEga50zUXQRvPHGaPFIoCguo+IMBuA&#xA;a7ipVfQs/wBj6cIUrLf7Z+WEoCVeeH1qPyjqs2iXq6fqkFu81tePEs6oYvjasbUVuSqV38cil8N3&#xA;P/OQv5mT+YLTzDLr1wNQtYjFbhbdEtyh9RSWtVkFvIf3jfEyE9N/hFFX2T+TGteYtd/LnSdb1++X&#xA;UL/Uka5Eywpb8Y2YhEKR/DVadcVZjcfs/ThCC3b9GxKhg/5ueZPPWiaTbN5Wi062jmMn6T8w6xcL&#xA;DZ6dGvEI7oSHkaQsQvEGhG4NcCXi1r+bfmBrhU0/87tK1DVATTTdR0I2OnuwP2DfeklF7cqjFX0R&#xA;5H1TzRqflu1u/M+lx6RrLcluLSCdLiIhWIWWORGccZF+ICpIxVN7j7Y+WSCCvg+x9OApDzT8y/zB&#xA;82Rea9N/L7yHBBL5q1KBr27v7wFrawslYp6zqv2mZgQAfbY8hgVjmu6p+ff5bWi+Zdd1m087+Wrd&#xA;lOt2sdpFZXdvCxAaaD0lVXCd+X3UqyqvadM1Gz1PTbTUrKQTWV7DHc20o6PFKodGFfFWBxV0394f&#xA;8+2SCFeP+7X5YClg/mf80P0H+ZfljyR+jPrH+JI5pP0h6/D0PRVmp6Xptzrw/nXAqR6t/wA5B+WY&#xA;/wAzdG8g6Ig1a8vLr6tql6j0gtjxb4EYBvUkDD4gNh0rWtFXq2KoV/tt8zkkLcKHYquT7a/MYEob&#xA;zS7x+WNXkjYo6WVwyOpoQRExBBGRS/MrTrJr2d0qPhAZqtxJBdUJrRunLkdugJxV6v8A84mTzR/n&#xA;VpiRyMiTW14kyqSA6i3ZwrAdRyUHfuMVfd8v92cIVQh/vB/n2wlDzD/nJnyvrWu/lsLjRoGur/Qb&#xA;6DV0tE5FpUgSSORV4FXqqTF/gIbb4TWmRS+G7HSE1ARTWtrcG1ilI1F1YOIogvqciwQCP4FkNWr9&#xA;n2OKvcf+cRtB1PVfPMOrW9q8Gg+XY7t3uZGZ/Uur6NIfSB+FK8E5fCuwHxHdcVfY8/2PpwhSst/t&#xA;n5YSgIHzZ/yius/8wNz/AMmWyKX5lXbo0FkFYEpCQwB6H1pDQ/QcVfoX+QP/AJJryn/zAr/xJsVZ&#xA;zcfs/ThCC3b9GxKhLfNvl2w8waBdabe2NrqKuvqQWt8pa2aeP4oTKFq3EOByp2wJeIaR5d/MPV/M&#xA;A8pa1qvk7WrXT2gfzF5QSyMa2lnPQ8rZ1hVvVVPsbjiStTuMVfQNpaW1naw2lrGsNtbxrFBCgoqR&#xA;oAqqo8ABTFVtx9sfLJBBXwfY+nAUh4X+bCP5M/M8+eNUsLi+8keYdGbQPMc9nz9azrJUTVjKuqMo&#xA;UVVh+1+1xqFef+b/ADr+R/lrybr9j+Wb3msa15g0+Sxu2Ml9NBbWcu0s0oufhUqp+Ehag+AxV9Mf&#xA;l5b2Nt5B8t2thdpf2VtpdnBb30deEyRQIiyKDQjkFrQ4qm8394f8+2SCFeP+7X5YCl4b+bnla91z&#xA;89fIam0u30hrO+t7+9tRKghWaKVN54/7pvi2NRgV51pP/OPPmf8AL788fK97YpLq3lZ9QDQajGhZ&#xA;4F4MeF0qj4Cv8/2W9j8IVfXOKoV/tt8zkkLcKHYquT7a/MYEq9xBDcQSW86CSGZWjljbcMrCjA/M&#xA;HIpeNSf84i/ky8jOLS9QMSQi3b8VqegqCaD54qyHyH/zj9+W3kfXRruh2k/6SSN4opbidpQiyCjl&#xA;VNBUjavhir0WX+7OEKoQ/wB4P8+2EoRORSwTWfyK/KPWdSk1LUPLFpJeSnlLJHzhDt1LMkLRoSe5&#xA;I374qy7R9F0fRdPi03SLKHT7CAUitbaNYo1r1PFQBU9z3xVEz/Y+nCFKy3+2flhKAqXEENxBJbzo&#xA;JIZlaOWNtwysKMD8wcil5cf+cXPyJJr/AIZ/6ftQ/wCyjFXo2h6JpWhaRaaPpNuLXTbGNYbW3Usw&#xA;RF6DkxZj8yanFURcfs/ThCC3b9GxKhVwJUY7Gyju5ryO3jS7uFRLi4VFEkix14K7gcmC8jxr0riq&#xA;tiqhcfbHyyQQV8H2PpwFIXsqspVgGVhRlO4IPY4FQcGiaNbwzwQWFtDDcqVuYo4Y1WRSCCHUCjAg&#xA;98VRFpaWtnbRWtpDHb2sChIYIlCRoiigVVUAKB4DFVOb+8P+fbJBCvH/AHa/LAUrsCuxV2KoV/tt&#xA;8zkkLcKHYq2DQg+GKVX6wf5cjS276wf5caW3fWD/AC40ttPMWUilK4aW1NG4sD4Yqq/WD/Lgpbd9&#xA;YP8ALjS276wf5caW1skpcUpTCAq2N+BrSvbEqqfWD/Lgpbd9YP8ALjS276wf5caW1kknOm1KYQFd&#xA;HJwrtWuJCr/rB/lwUtu+sH+XGlt31g/y40tqcj8zWlO2EKujl4LSlcSFXfWP8n8cFLbvrH+T+ONL&#xA;bvrH+T+ONLam7cmLdK4VXpMVUClaY0tt/WD/AC4KW3fWD/LjS276wf5caW1ImpJ8ckrWKHYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FV/7&#xA;n/K/DAl37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MV&#xA;d+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8&#xA;MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8&#xA;r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:F79F17FFAB77ED11AC5B90F9F6F049F2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F79F17FFAB77ED11AC5B90F9F6F049F2</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7397d4c2-47fe-c449-9446-ab3c955c227b</stRef:instanceID>
            <stRef:documentID>xmp.did:7397d4c2-47fe-c449-9446-ab3c955c227b</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:657668f3-1036-d04e-9cbc-e16a93514d13</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:45:09+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:49e9b3f8-53f5-9e41-8a4c-cd22ac3d3aca</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:45:59+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7397d4c2-47fe-c449-9446-ab3c955c227b</stEvt:instanceID>
                  <stEvt:when>2022-09-20T02:52:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.5 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F79F17FFAB77ED11AC5B90F9F6F049F2</stEvt:instanceID>
                  <stEvt:when>2022-12-09T15:26:56+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>836.667969</stDim:w>
            <stDim:h>715.273438</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -715.273 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 715.273 li
836.668 715.273 li
836.668 0 li
cp
clp
836.668 715.273 mo
0 715.273 li
0 0 li
836.668 0 li
836.668 715.273 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
177.334 307.637 mo
277.334 307.637 li
277.334 407.637 li
177.334 407.637 li
177.334 307.637 li
cp
1 1 1 rgb
f
304.667 307.637 mo
404.667 307.637 li
404.667 407.637 li
304.667 407.637 li
304.667 307.637 li
cp
f
50 307.637 mo
150 307.637 li
150 407.637 li
50 407.637 li
50 307.637 li
cp
f
559.334 436.455 mo
659.334 436.455 li
659.334 536.455 li
559.334 536.455 li
559.334 436.455 li
cp
f
432 436.455 mo
532 436.455 li
532 536.455 li
432 536.455 li
432 436.455 li
cp
f
304.667 436.455 mo
404.667 436.455 li
404.667 536.455 li
304.667 536.455 li
304.667 436.455 li
cp
f
177.334 436.455 mo
277.334 436.455 li
277.334 536.455 li
177.334 536.455 li
177.334 436.455 li
cp
f
50 436.455 mo
150 436.455 li
150 536.455 li
50 536.455 li
50 436.455 li
cp
f
559.334 178.818 mo
659.334 178.818 li
659.334 278.818 li
559.334 278.818 li
559.334 178.818 li
cp
f
432 178.818 mo
532 178.818 li
532 278.818 li
432 278.818 li
432 178.818 li
cp
f
304.667 178.818 mo
404.667 178.818 li
404.667 278.818 li
304.667 278.818 li
304.667 178.818 li
cp
f
177.334 178.818 mo
277.334 178.818 li
277.334 278.818 li
177.334 278.818 li
177.334 178.818 li
cp
f
50 178.818 mo
150 178.818 li
150 278.818 li
50 278.818 li
50 178.818 li
cp
f
50 148.358 mo
659.333 148.358 li
659.333 149.727 li
50 149.727 li
50 148.358 li
cp
.741176 .831373 .870588 rgb
f
686.668 178.818 mo
786.668 178.818 li
786.668 278.818 li
686.668 278.818 li
686.668 178.818 li
cp
1 1 1 rgb
f
432 307.637 mo
532 307.637 li
532 407.637 li
432 407.637 li
432 307.637 li
cp
f
559.334 307.637 mo
659.334 307.637 li
659.334 407.637 li
559.334 407.637 li
559.334 307.637 li
cp
f
686.668 307.637 mo
786.668 307.637 li
786.668 407.637 li
686.668 407.637 li
686.668 307.637 li
cp
f
686.668 50 mo
786.668 50 li
786.668 150 li
686.668 150 li
686.668 50 li
cp
f
559.334 565.273 mo
659.334 565.273 li
659.334 665.273 li
559.334 665.273 li
559.334 565.273 li
cp
f
559.334 436.455 mo
659.334 436.455 li
659.334 536.455 li
559.334 536.455 li
559.334 436.455 li
cp
f
559.334 565.273 mo
659.334 565.273 li
659.334 665.273 li
559.334 665.273 li
559.334 565.273 li
cp
f
686.668 436.455 mo
786.668 436.455 li
786.668 536.455 li
686.668 536.455 li
686.668 436.455 li
cp
f
686.668 565.273 mo
786.668 565.273 li
786.668 665.273 li
686.668 665.273 li
686.668 565.273 li
cp
f
432 565.273 mo
532 565.273 li
532 665.273 li
432 665.273 li
432 565.273 li
cp
f
304.667 565.273 mo
404.667 565.273 li
404.667 665.273 li
304.667 665.273 li
304.667 565.273 li
cp
f
177.334 565.273 mo
277.334 565.273 li
277.334 665.273 li
177.334 665.273 li
177.334 565.273 li
cp
f
50 565.273 mo
150 565.273 li
150 665.273 li
50 665.273 li
50 565.273 li
cp
f
177.334 88.502 mo
205.602 88.502 li
205.602 92.0195 li
177.334 92.0195 li
177.334 88.502 li
cp
.168627 .74902 .909804 rgb
f
213.633 88.502 mo
241.898 88.502 li
241.898 92.0195 li
213.633 92.0195 li
213.633 88.502 li
cp
.494118 .407843 .776471 rgb
f
249.929 88.502 mo
278.194 88.502 li
278.194 92.0195 li
249.929 92.0195 li
249.929 88.502 li
cp
.796078 .278431 .611765 rgb
f
286.227 88.502 mo
314.492 88.502 li
314.492 92.0195 li
286.227 92.0195 li
286.227 88.502 li
cp
.980392 .623529 .235294 rgb
f
322.523 88.502 mo
350.789 88.502 li
350.789 92.0195 li
322.523 92.0195 li
322.523 88.502 li
cp
.968627 .733333 .25098 rgb
f
180.475 67.9048 mo
180.475 80.894 li
178.799 80.894 li
178.799 67.9048 li
180.475 67.9048 li
cp
.164706 .223529 .258824 rgb
f
197.3 80.4702 mo
196.684 80.7783 195.45 81.0869 193.87 81.0869 cv
190.208 81.0869 187.453 78.7739 187.453 74.5151 cv
187.453 70.4487 190.208 67.6929 194.236 67.6929 cv
195.855 67.6929 196.876 68.0396 197.32 68.271 cv
196.915 69.6392 li
196.279 69.3311 195.374 69.0996 194.294 69.0996 cv
191.249 69.0996 189.226 71.0459 189.226 74.457 cv
189.226 77.6372 191.057 79.6797 194.217 79.6797 cv
195.238 79.6797 196.279 79.4678 196.954 79.1401 cv
197.3 80.4702 li
cp
f
204.836 74.4766 mo
204.836 77.2515 206.34 79.7378 208.98 79.7378 cv
211.64 79.7378 213.143 77.29 213.143 74.3418 cv
213.143 71.7593 211.794 69.061 209 69.061 cv
206.224 69.061 204.836 71.6245 204.836 74.4766 cv
cp
214.916 74.2646 mo
214.916 78.7354 212.199 81.106 208.884 81.106 cv
205.453 81.106 203.044 78.4463 203.044 74.5151 cv
203.044 70.3911 205.607 67.6929 209.077 67.6929 cv
212.623 67.6929 214.916 70.4102 214.916 74.2646 cv
cp
f
221.913 80.894 mo
221.913 67.9048 li
223.743 67.9048 li
227.906 74.4766 li
228.87 75.999 229.621 77.3672 230.238 78.6973 cv
230.276 78.6777 li
230.122 76.9434 230.083 75.3628 230.083 73.3394 cv
230.083 67.9048 li
231.664 67.9048 li
231.664 80.894 li
229.968 80.894 li
225.844 74.3032 li
224.938 72.8579 224.071 71.3735 223.416 69.9668 cv
223.358 69.9863 li
223.454 71.6245 223.493 73.1855 223.493 75.3438 cv
223.493 80.894 li
221.913 80.894 li
cp
f
240.434 74.4766 mo
240.434 77.2515 241.937 79.7378 244.577 79.7378 cv
247.237 79.7378 248.74 77.29 248.74 74.3418 cv
248.74 71.7593 247.391 69.061 244.597 69.061 cv
241.821 69.061 240.434 71.6245 240.434 74.4766 cv
cp
250.513 74.2646 mo
250.513 78.7354 247.796 81.106 244.481 81.106 cv
241.05 81.106 238.642 78.4463 238.642 74.5151 cv
238.642 70.3911 241.205 67.6929 244.674 67.6929 cv
248.22 67.6929 250.513 70.4102 250.513 74.2646 cv
cp
f
267.396 80.3159 mo
266.645 80.5859 265.161 81.0288 263.407 81.0288 cv
261.441 81.0288 259.823 80.5278 258.551 79.314 cv
257.433 78.2344 256.739 76.5 256.739 74.4766 cv
256.758 70.603 259.418 67.77 263.773 67.77 cv
265.277 67.77 266.452 68.0977 267.011 68.3672 cv
266.606 69.7358 li
265.913 69.4272 265.045 69.1768 263.735 69.1768 cv
260.574 69.1768 258.512 71.1426 258.512 74.3994 cv
258.512 77.6948 260.497 79.6416 263.523 79.6416 cv
264.622 79.6416 265.373 79.4873 265.758 79.2944 cv
265.758 75.4209 li
263.118 75.4209 li
263.118 74.0718 li
267.396 74.0718 li
267.396 80.3159 li
cp
f
276.455 73.9946 mo
278.17 73.9946 li
279.963 73.9946 281.1 73.0117 281.1 71.5278 cv
281.1 69.8511 279.886 69.1191 278.113 69.0996 cv
277.303 69.0996 276.725 69.1768 276.455 69.2539 cv
276.455 73.9946 li
cp
274.779 68.0781 mo
275.626 67.9048 276.841 67.8086 277.997 67.8086 cv
279.79 67.8086 280.946 68.1362 281.755 68.8682 cv
282.41 69.4468 282.776 70.333 282.776 71.335 cv
282.776 73.0503 281.697 74.1875 280.329 74.6499 cv
280.329 74.708 li
281.331 75.0547 281.929 75.9795 282.237 77.3286 cv
282.661 79.1401 282.969 80.3931 283.239 80.894 cv
281.504 80.894 li
281.292 80.5278 281.003 79.4102 280.637 77.7915 cv
280.252 75.999 279.558 75.3247 278.036 75.2666 cv
276.455 75.2666 li
276.455 80.894 li
274.779 80.894 li
274.779 68.0781 li
cp
f
296.421 75.498 mo
295.149 71.7593 li
294.86 70.9111 294.668 70.1401 294.475 69.3887 cv
294.437 69.3887 li
294.244 70.1597 294.032 70.9497 293.781 71.7397 cv
292.509 75.498 li
296.421 75.498 li
cp
292.163 76.8086 mo
290.813 80.894 li
289.079 80.894 li
293.492 67.9048 li
295.516 67.9048 li
299.948 80.894 li
298.156 80.894 li
296.769 76.8086 li
292.163 76.8086 li
cp
f
308.352 74.3223 mo
308.718 74.4189 309.181 74.457 309.74 74.457 cv
311.763 74.457 312.997 73.4746 312.997 71.6821 cv
312.997 69.9668 311.783 69.1382 309.933 69.1382 cv
309.2 69.1382 308.641 69.1958 308.352 69.2729 cv
308.352 74.3223 li
cp
306.676 68.0591 mo
307.485 67.9243 308.545 67.8086 309.894 67.8086 cv
311.551 67.8086 312.766 68.1938 313.537 68.8877 cv
314.25 69.5044 314.673 70.4487 314.673 71.605 cv
314.673 72.7808 314.327 73.7056 313.671 74.3804 cv
312.785 75.3247 311.339 75.8062 309.701 75.8062 cv
309.2 75.8062 308.738 75.7871 308.352 75.6904 cv
308.352 80.894 li
306.676 80.894 li
306.676 68.0591 li
cp
f
323.423 67.9048 mo
323.423 73.3394 li
329.706 73.3394 li
329.706 67.9048 li
331.402 67.9048 li
331.402 80.894 li
329.706 80.894 li
329.706 74.8042 li
323.423 74.8042 li
323.423 80.894 li
321.747 80.894 li
321.747 67.9048 li
323.423 67.9048 li
cp
f
341.887 80.894 mo
341.887 75.3823 li
337.782 67.9048 li
339.69 67.9048 li
341.521 71.4893 li
342.022 72.4722 342.408 73.2622 342.812 74.168 cv
342.851 74.168 li
343.217 73.3203 343.66 72.4722 344.161 71.4893 cv
346.031 67.9048 li
347.938 67.9048 li
343.583 75.3628 li
343.583 80.894 li
341.887 80.894 li
cp
f
106.076 130.008 mo
68.542 130.008 li
68.542 126.398 li
84.499 109.744 li
88.9834 105.095 92.1289 101.539 93.9336 99.0781 cv
95.7393 96.6172 97.0645 94.2656 97.9121 92.0234 cv
98.7598 89.7813 99.1846 87.4287 99.1846 84.9668 cv
99.1846 81.3848 98.0088 78.4727 95.6563 76.2305 cv
93.3037 73.9883 90.2559 72.8662 86.5098 72.8662 cv
81.5049 72.8662 76.7188 74.6855 72.1523 78.3223 cv
69.9365 75.4922 li
74.9414 71.2813 80.4932 69.1738 86.5908 69.1738 cv
91.8145 69.1738 95.9229 70.5693 98.918 73.3594 cv
101.912 76.1484 103.409 79.9902 103.409 84.8848 cv
103.409 88.8506 102.404 92.6865 100.395 96.3916 cv
98.3848 100.098 94.7129 104.671 89.3799 110.113 cv
73.998 125.906 li
73.998 126.07 li
106.076 126.07 li
106.076 130.008 li
cp
f
130.527 93.9512 mo
136.927 93.9512 141.965 95.4961 145.643 98.5859 cv
149.321 101.677 151.161 105.93 151.161 111.344 cv
151.161 117.496 149.246 122.283 145.418 125.701 cv
141.589 129.12 136.311 130.828 129.584 130.828 cv
126.603 130.828 123.772 130.533 121.092 129.946 cv
118.412 129.358 116.17 128.518 114.365 127.424 cv
114.365 123.199 li
117.318 124.703 119.944 125.749 122.241 126.336 cv
124.538 126.926 126.985 127.219 129.584 127.219 cv
134.835 127.219 139.046 125.83 142.218 123.055 cv
145.39 120.279 146.977 116.526 146.977 111.795 cv
146.977 107.338 145.431 103.837 142.342 101.294 cv
139.251 98.75 135.053 97.4785 129.747 97.4785 cv
126.192 97.4785 122.473 98.0117 118.59 99.0781 cv
116.129 97.4785 li
118.508 70.0352 li
147.387 70.0352 li
147.387 73.9746 li
122.364 73.9746 li
120.519 95.1406 li
124.784 94.3477 128.12 93.9512 130.527 93.9512 cv
cp
f
182.569 120.617 mo
182.569 126.035 li
185.542 126.035 li
186.712 126.035 187.596 125.811 188.192 125.362 cv
188.79 124.914 189.088 124.206 189.088 123.238 cv
189.088 122.349 188.784 121.689 188.175 121.26 cv
187.566 120.832 186.642 120.617 185.401 120.617 cv
182.569 120.617 li
cp
182.569 118.346 mo
185.261 118.346 li
186.431 118.346 187.286 118.161 187.824 117.791 cv
188.362 117.42 188.631 116.79 188.631 115.9 cv
188.631 115.097 188.341 114.516 187.759 114.156 cv
187.178 113.798 186.255 113.618 184.992 113.618 cv
182.569 113.618 li
182.569 118.346 li
cp
179.772 111.277 mo
184.851 111.277 li
187.208 111.277 188.91 111.621 189.959 112.307 cv
191.009 112.994 191.534 114.079 191.534 115.561 cv
191.534 116.56 191.276 117.391 190.761 118.054 cv
190.247 118.717 189.505 119.134 188.538 119.306 cv
188.538 119.423 li
189.739 119.649 190.623 120.096 191.188 120.763 cv
191.754 121.43 192.037 122.333 192.037 123.472 cv
192.037 125.009 191.5 126.213 190.428 127.083 cv
189.355 127.953 187.863 128.388 185.951 128.388 cv
179.772 128.388 li
179.772 111.277 li
cp
f
198.346 126.515 mo
199.345 126.515 200.146 126.236 200.751 125.678 cv
201.356 125.121 201.658 124.338 201.658 123.332 cv
201.658 122.208 li
199.996 122.278 li
198.701 122.325 197.759 122.542 197.17 122.928 cv
196.581 123.314 196.286 123.905 196.286 124.701 cv
196.286 125.279 196.458 125.725 196.801 126.041 cv
197.145 126.357 197.66 126.515 198.346 126.515 cv
cp
202.442 128.388 mo
201.892 126.585 li
201.799 126.585 li
201.174 127.374 200.546 127.91 199.915 128.195 cv
199.282 128.479 198.471 128.622 197.48 128.622 cv
196.208 128.622 195.215 128.278 194.501 127.592 cv
193.788 126.905 193.431 125.934 193.431 124.678 cv
193.431 123.344 193.926 122.337 194.917 121.658 cv
195.908 120.979 197.417 120.609 199.446 120.546 cv
201.682 120.476 li
201.682 119.786 li
201.682 118.959 201.488 118.34 201.102 117.931 cv
200.716 117.521 200.117 117.316 199.306 117.316 cv
198.643 117.316 198.007 117.414 197.398 117.609 cv
196.79 117.804 196.205 118.034 195.643 118.299 cv
194.753 116.333 li
195.456 115.967 196.224 115.688 197.059 115.497 cv
197.894 115.305 198.682 115.21 199.423 115.21 cv
201.069 115.21 202.312 115.569 203.15 116.287 cv
203.989 117.004 204.409 118.132 204.409 119.668 cv
204.409 128.388 li
202.442 128.388 li
cp
f
215.984 124.701 mo
215.984 125.965 215.523 126.935 214.603 127.609 cv
213.682 128.284 212.364 128.622 210.647 128.622 cv
208.923 128.622 207.538 128.36 206.493 127.837 cv
206.493 125.462 li
208.014 126.164 209.43 126.515 210.741 126.515 cv
212.434 126.515 213.281 126.004 213.281 124.982 cv
213.281 124.654 213.187 124.381 213 124.163 cv
212.813 123.944 212.504 123.718 212.075 123.484 cv
211.646 123.25 211.049 122.985 210.285 122.688 cv
208.794 122.111 207.786 121.534 207.259 120.956 cv
206.732 120.379 206.469 119.63 206.469 118.709 cv
206.469 117.601 206.916 116.741 207.809 116.128 cv
208.703 115.516 209.917 115.21 211.455 115.21 cv
212.976 115.21 214.416 115.518 215.773 116.134 cv
214.884 118.206 li
213.487 117.628 212.313 117.34 211.361 117.34 cv
209.91 117.34 209.185 117.753 209.185 118.58 cv
209.185 118.986 209.374 119.329 209.752 119.61 cv
210.13 119.891 210.956 120.277 212.227 120.769 cv
213.296 121.183 214.072 121.561 214.556 121.904 cv
215.04 122.248 215.399 122.644 215.633 123.092 cv
215.867 123.541 215.984 124.077 215.984 124.701 cv
cp
f
220.748 128.388 mo
217.998 128.388 li
217.998 115.444 li
220.748 115.444 li
220.748 128.388 li
cp
217.834 112.015 mo
217.834 111.523 217.969 111.145 218.238 110.879 cv
218.507 110.614 218.891 110.481 219.391 110.481 cv
219.875 110.481 220.251 110.614 220.52 110.879 cv
220.789 111.145 220.924 111.523 220.924 112.015 cv
220.924 112.483 220.789 112.852 220.52 113.121 cv
220.251 113.39 219.875 113.524 219.391 113.524 cv
218.891 113.524 218.507 113.39 218.238 113.121 cv
217.969 112.852 217.834 112.483 217.834 112.015 cv
cp
f
228.941 128.622 mo
226.983 128.622 225.495 128.05 224.477 126.907 cv
223.458 125.764 222.949 124.124 222.949 121.986 cv
222.949 119.809 223.481 118.136 224.546 116.965 cv
225.612 115.795 227.15 115.21 229.164 115.21 cv
230.529 115.21 231.758 115.463 232.85 115.97 cv
232.019 118.183 li
230.856 117.73 229.897 117.503 229.14 117.503 cv
226.901 117.503 225.781 118.99 225.781 121.962 cv
225.781 123.414 226.06 124.504 226.618 125.234 cv
227.176 125.963 227.993 126.328 229.07 126.328 cv
230.295 126.328 231.454 126.023 232.546 125.415 cv
232.546 127.814 li
232.054 128.103 231.529 128.31 230.972 128.435 cv
230.414 128.559 229.737 128.622 228.941 128.622 cv
cp
f
253.603 111.277 mo
253.603 122.349 li
253.603 123.613 253.331 124.719 252.789 125.667 cv
252.247 126.615 251.462 127.344 250.437 127.855 cv
249.411 128.366 248.184 128.622 246.756 128.622 cv
244.634 128.622 242.983 128.06 241.806 126.937 cv
240.627 125.813 240.038 124.268 240.038 122.302 cv
240.038 111.277 li
242.847 111.277 li
242.847 122.103 li
242.847 123.515 243.175 124.557 243.83 125.228 cv
244.485 125.899 245.492 126.234 246.85 126.234 cv
249.487 126.234 250.805 124.85 250.805 122.08 cv
250.805 111.277 li
253.603 111.277 li
cp
f
259.478 128.388 mo
256.728 128.388 li
256.728 115.444 li
259.478 115.444 li
259.478 128.388 li
cp
256.564 112.015 mo
256.564 111.523 256.699 111.145 256.968 110.879 cv
257.237 110.614 257.621 110.481 258.121 110.481 cv
258.604 110.481 258.981 110.614 259.25 110.879 cv
259.519 111.145 259.654 111.523 259.654 112.015 cv
259.654 112.483 259.519 112.852 259.25 113.121 cv
258.981 113.39 258.604 113.524 258.121 113.524 cv
257.621 113.524 257.237 113.39 256.968 113.121 cv
256.699 112.852 256.564 112.483 256.564 112.015 cv
cp
f
277.69 128.388 mo
268.012 128.388 li
268.012 111.277 li
277.69 111.277 li
277.69 113.642 li
270.809 113.642 li
270.809 118.299 li
277.257 118.299 li
277.257 120.64 li
270.809 120.64 li
270.809 126.012 li
277.69 126.012 li
277.69 128.388 li
cp
f
282.888 128.388 mo
280.138 128.388 li
280.138 110.177 li
282.888 110.177 li
282.888 128.388 li
cp
f
291.011 117.293 mo
290.137 117.293 289.437 117.57 288.91 118.124 cv
288.383 118.678 288.069 119.485 287.968 120.546 cv
293.843 120.546 li
293.827 119.478 293.57 118.668 293.07 118.118 cv
292.571 117.568 291.884 117.293 291.011 117.293 cv
cp
291.514 128.622 mo
289.501 128.622 287.927 128.035 286.792 126.86 cv
285.656 125.686 285.089 124.069 285.089 122.009 cv
285.089 119.895 285.615 118.233 286.669 117.024 cv
287.722 115.814 289.169 115.21 291.011 115.21 cv
292.719 115.21 294.069 115.729 295.06 116.766 cv
296.051 117.804 296.546 119.232 296.546 121.05 cv
296.546 122.536 li
287.921 122.536 li
287.96 123.792 288.299 124.758 288.939 125.433 cv
289.579 126.107 290.48 126.445 291.643 126.445 cv
292.407 126.445 293.119 126.373 293.778 126.229 cv
294.438 126.084 295.146 125.844 295.903 125.509 cv
295.903 127.744 li
295.231 128.064 294.553 128.29 293.866 128.423 cv
293.18 128.555 292.396 128.622 291.514 128.622 cv
cp
f
309.62 128.388 mo
306.858 128.388 li
306.858 120.406 li
306.858 119.415 306.671 118.676 306.296 118.188 cv
305.922 117.701 305.337 117.457 304.541 117.457 cv
303.48 117.457 302.702 117.802 302.206 118.493 cv
301.71 119.183 301.463 120.332 301.463 121.939 cv
301.463 128.388 li
298.713 128.388 li
298.713 115.444 li
300.866 115.444 li
301.252 117.141 li
301.393 117.141 li
301.751 116.524 302.272 116.048 302.955 115.713 cv
303.638 115.377 304.389 115.21 305.208 115.21 cv
307.198 115.21 308.516 115.889 309.164 117.246 cv
309.351 117.246 li
309.733 116.606 310.271 116.107 310.966 115.748 cv
311.661 115.389 312.457 115.21 313.354 115.21 cv
314.898 115.21 316.024 115.6 316.73 116.38 cv
317.436 117.16 317.789 118.35 317.789 119.95 cv
317.789 128.388 li
315.039 128.388 li
315.039 120.406 li
315.039 119.415 314.85 118.676 314.471 118.188 cv
314.093 117.701 313.506 117.457 312.71 117.457 cv
311.641 117.457 310.859 117.791 310.363 118.458 cv
309.868 119.125 309.62 120.148 309.62 121.529 cv
309.62 128.388 li
cp
f
325.818 117.293 mo
324.944 117.293 324.244 117.57 323.717 118.124 cv
323.191 118.678 322.877 119.485 322.775 120.546 cv
328.65 120.546 li
328.635 119.478 328.377 118.668 327.878 118.118 cv
327.378 117.568 326.692 117.293 325.818 117.293 cv
cp
326.321 128.622 mo
324.309 128.622 322.734 128.035 321.599 126.86 cv
320.464 125.686 319.896 124.069 319.896 122.009 cv
319.896 119.895 320.423 118.233 321.477 117.024 cv
322.53 115.814 323.977 115.21 325.818 115.21 cv
327.527 115.21 328.876 115.729 329.868 116.766 cv
330.858 117.804 331.354 119.232 331.354 121.05 cv
331.354 122.536 li
322.729 122.536 li
322.768 123.792 323.107 124.758 323.747 125.433 cv
324.386 126.107 325.288 126.445 326.45 126.445 cv
327.215 126.445 327.927 126.373 328.586 126.229 cv
329.245 126.084 329.954 125.844 330.71 125.509 cv
330.71 127.744 li
330.039 128.064 329.36 128.29 328.674 128.423 cv
327.987 128.555 327.203 128.622 326.321 128.622 cv
cp
f
344.908 128.388 mo
342.146 128.388 li
342.146 120.429 li
342.146 119.431 341.945 118.686 341.543 118.194 cv
341.141 117.703 340.503 117.457 339.629 117.457 cv
338.467 117.457 337.617 117.8 337.078 118.487 cv
336.54 119.173 336.271 120.324 336.271 121.939 cv
336.271 128.388 li
333.521 128.388 li
333.521 115.444 li
335.674 115.444 li
336.06 117.141 li
336.2 117.141 li
336.59 116.524 337.145 116.048 337.862 115.713 cv
338.58 115.377 339.376 115.21 340.25 115.21 cv
343.355 115.21 344.908 116.79 344.908 119.95 cv
344.908 128.388 li
cp
f
352.598 126.398 mo
353.269 126.398 353.939 126.293 354.61 126.082 cv
354.61 128.154 li
354.307 128.287 353.914 128.397 353.435 128.487 cv
352.954 128.577 352.457 128.622 351.942 128.622 cv
349.336 128.622 348.033 127.249 348.033 124.502 cv
348.033 117.527 li
346.266 117.527 li
346.266 116.31 li
348.162 115.303 li
349.098 112.565 li
350.795 112.565 li
350.795 115.444 li
354.481 115.444 li
354.481 117.527 li
350.795 117.527 li
350.795 124.456 li
350.795 125.119 350.961 125.608 351.293 125.924 cv
351.624 126.24 352.06 126.398 352.598 126.398 cv
cp
f
364.935 124.701 mo
364.935 125.965 364.474 126.935 363.553 127.609 cv
362.633 128.284 361.313 128.622 359.598 128.622 cv
357.873 128.622 356.488 128.36 355.442 127.837 cv
355.442 125.462 li
356.964 126.164 358.38 126.515 359.691 126.515 cv
361.384 126.515 362.23 126.004 362.23 124.982 cv
362.23 124.654 362.137 124.381 361.95 124.163 cv
361.763 123.944 361.454 123.718 361.025 123.484 cv
360.596 123.25 359.999 122.985 359.234 122.688 cv
357.744 122.111 356.736 121.534 356.209 120.956 cv
355.683 120.379 355.419 119.63 355.419 118.709 cv
355.419 117.601 355.866 116.741 356.76 116.128 cv
357.652 115.516 358.868 115.21 360.405 115.21 cv
361.927 115.21 363.366 115.518 364.724 116.134 cv
363.834 118.206 li
362.438 117.628 361.264 117.34 360.312 117.34 cv
358.86 117.34 358.135 117.753 358.135 118.58 cv
358.135 118.986 358.323 119.329 358.702 119.61 cv
359.08 119.891 359.905 120.277 361.178 120.769 cv
362.246 121.183 363.022 121.561 363.507 121.904 cv
363.99 122.248 364.349 122.644 364.583 123.092 cv
364.817 123.541 364.935 124.077 364.935 124.701 cv
cp
f
686 50 mo
786 50 li
786 150 li
686 150 li
686 50 li
cp
1 1 1 rgb
f
715.5 92.6001 mo
719.311 92.6001 722.4 95.6895 722.4 99.5 cv
722.4 103.311 719.311 106.4 715.5 106.4 cv
711.689 106.4 708.6 103.311 708.6 99.5 cv
708.6 95.6895 711.689 92.6001 715.5 92.6001 cv
cp
0 0 0 rgb
f
735.5 92.6001 mo
739.311 92.6001 742.4 95.6895 742.4 99.5 cv
742.4 103.311 739.311 106.4 735.5 106.4 cv
731.689 106.4 728.6 103.311 728.6 99.5 cv
728.6 95.6895 731.689 92.6001 735.5 92.6001 cv
cp
f
755.5 92.6001 mo
759.311 92.6001 762.4 95.6895 762.4 99.5 cv
762.4 103.311 759.311 106.4 755.5 106.4 cv
751.689 106.4 748.6 103.311 748.6 99.5 cv
748.6 95.6895 751.689 92.6001 755.5 92.6001 cv
cp
f
685.178 556.143 mo
786 556.143 li
786 656.965 li
685.178 656.965 li
685.178 556.143 li
cp
1 1 1 rgb
f
725.003 588.305 mo
718.752 588.305 li
718.046 588.305 717.441 588.909 717.441 589.615 cv
717.441 623.593 li
717.441 624.298 718.046 624.903 718.752 624.903 cv
725.003 624.903 li
725.709 624.903 726.313 624.298 726.313 623.593 cv
726.313 589.615 li
726.313 588.809 725.709 588.305 725.003 588.305 cv
cp
0 0 0 rgb
f
751.115 587.095 mo
750.813 587.095 750.611 587.195 750.309 587.297 cv
727.927 606.049 li
750.309 624.802 li
750.511 625.004 750.813 625.004 751.115 625.004 cv
751.821 625.004 752.628 624.398 752.628 623.491 cv
752.628 588.607 li
752.628 587.7 751.821 587.095 751.115 587.095 cv
cp
f
558.143 556.143 mo
658.965 556.143 li
658.965 656.965 li
558.143 656.965 li
558.143 556.143 li
cp
1 1 1 rgb
f
615.006 602.924 mo
599.883 602.924 li
598.471 602.924 597.362 604.033 597.362 605.444 cv
597.362 606.855 598.471 607.965 599.883 607.965 cv
615.006 607.965 li
616.418 607.965 617.526 606.855 617.526 605.444 cv
617.526 604.033 616.418 602.924 615.006 602.924 cv
cp
0 0 0 rgb
f
619.442 617.442 mo
616.216 620.669 611.981 622.383 607.444 622.383 cv
602.907 622.383 598.673 620.669 595.446 617.442 cv
588.792 610.788 588.792 600 595.446 593.346 cv
598.673 590.119 602.907 588.405 607.444 588.405 cv
611.981 588.405 616.216 590.221 619.442 593.346 cv
626.097 600 626.097 610.788 619.442 617.442 cv
cp
631.037 624.601 mo
626.398 619.963 li
626.197 619.761 626.197 619.357 626.298 619.156 cv
633.053 609.881 632.045 597.177 623.878 589.011 cv
619.442 584.574 613.595 582.154 607.344 582.154 cv
601.093 582.154 595.245 584.574 590.809 589.011 cv
581.836 597.983 581.734 612.703 590.607 621.777 cv
595.043 626.314 600.992 628.835 607.344 628.835 cv
612.284 628.835 617.022 627.323 621.056 624.398 cv
621.156 624.298 621.257 624.298 621.459 624.298 cv
621.66 624.298 621.761 624.398 621.862 624.5 cv
626.5 629.138 li
627.104 629.742 627.911 630.045 628.718 630.045 cv
629.524 630.045 630.331 629.742 630.936 629.138 cv
632.246 627.827 632.246 625.811 631.037 624.601 cv
cp
f
431.106 556.143 mo
531.929 556.143 li
531.929 656.965 li
431.106 656.965 li
431.106 556.143 li
cp
1 1 1 rgb
f
492.306 612.199 mo
488.979 609.981 485.047 608.872 481.014 608.872 cv
476.98 608.872 473.049 609.981 469.621 612.199 cv
468.814 612.703 468.311 613.51 468.209 614.418 cv
468.108 615.325 468.411 616.232 469.116 616.938 cv
469.116 616.938 li
469.722 617.543 470.428 617.846 471.335 617.846 cv
471.939 617.846 472.545 617.644 473.049 617.342 cv
475.367 615.829 478.19 615.022 481.014 615.022 cv
483.837 615.022 486.559 615.829 488.878 617.342 cv
489.382 617.644 489.987 617.846 490.592 617.846 cv
491.398 617.846 492.205 617.543 492.81 616.938 cv
492.81 616.938 li
493.516 616.232 493.818 615.325 493.717 614.418 cv
493.616 613.51 493.112 612.703 492.306 612.199 cv
cp
0 0 0 rgb
f
497.75 600.605 mo
492.911 596.976 487.063 595.06 481.014 595.06 cv
474.863 595.06 469.116 596.976 464.177 600.605 cv
463.471 601.109 462.967 602.017 462.967 602.823 cv
462.866 603.73 463.269 604.638 463.874 605.243 cv
464.479 605.848 465.185 606.15 466.092 606.15 cv
466.798 606.15 467.402 605.948 467.907 605.545 cv
471.738 602.723 476.275 601.311 481.014 601.311 cv
485.752 601.311 490.289 602.823 494.12 605.545 cv
494.625 605.948 495.33 606.15 495.936 606.15 cv
496.742 606.15 497.549 605.848 498.153 605.243 cv
498.759 604.638 499.161 603.73 499.061 602.823 cv
498.96 602.017 498.557 601.21 497.75 600.605 cv
cp
f
481.014 621.475 mo
478.594 621.475 476.577 623.491 476.577 625.911 cv
476.577 628.331 478.594 630.348 481.014 630.348 cv
483.434 630.348 485.45 628.331 485.45 625.911 cv
485.45 623.491 483.434 621.475 481.014 621.475 cv
cp
f
504.404 591.732 mo
504.404 590.825 503.9 590.019 503.194 589.515 cv
496.843 584.474 489.181 581.853 481.014 581.853 cv
472.847 581.853 465.084 584.474 458.833 589.515 cv
458.127 590.019 457.724 590.926 457.623 591.732 cv
457.623 592.64 457.926 593.446 458.53 594.052 cv
459.136 594.656 459.941 594.959 460.748 594.959 cv
461.454 594.959 462.06 594.757 462.664 594.253 cv
467.907 590.019 474.259 587.801 481.014 587.801 cv
487.668 587.801 494.222 590.119 499.363 594.253 cv
499.867 594.656 500.573 594.959 501.279 594.959 cv
502.086 594.959 502.893 594.656 503.497 594.052 cv
503.497 594.052 li
504.102 593.446 504.404 592.64 504.404 591.732 cv
cp
f
304.071 556.143 mo
404.893 556.143 li
404.893 656.965 li
304.071 656.965 li
304.071 556.143 li
cp
1 1 1 rgb
f
346.315 598.992 mo
346.315 598.689 346.618 598.387 346.92 598.387 cv
347.223 598.387 347.525 598.689 347.525 598.992 cv
347.525 624.197 li
347.525 624.5 347.223 624.802 346.92 624.802 cv
346.618 624.802 346.315 624.5 346.315 624.197 cv
346.315 598.992 li
cp
353.877 598.992 mo
353.877 598.689 354.18 598.387 354.482 598.387 cv
354.785 598.387 355.087 598.689 355.087 598.992 cv
355.087 624.197 li
355.087 624.5 354.785 624.802 354.482 624.802 cv
354.18 624.802 353.877 624.5 353.877 624.197 cv
353.877 598.992 li
cp
361.439 598.992 mo
361.439 598.689 361.741 598.387 362.044 598.387 cv
362.346 598.387 362.649 598.689 362.649 598.992 cv
362.649 624.197 li
362.649 624.5 362.346 624.802 362.044 624.802 cv
361.741 624.802 361.439 624.5 361.439 624.197 cv
361.439 598.992 li
cp
338.754 631.255 mo
338.754 632.565 339.863 633.675 341.174 633.675 cv
367.892 633.675 li
369.202 633.675 370.311 632.565 370.311 631.255 cv
370.311 589.515 li
338.754 589.515 li
338.754 631.255 li
cp
0 0 0 rgb
f
359.523 583.264 mo
349.441 583.264 li
334.923 583.264 li
334.923 588.305 li
338.149 588.305 li
370.916 588.305 li
374.042 588.305 li
374.042 583.264 li
359.523 583.264 li
cp
f
350.046 578.223 mo
358.918 578.223 li
358.918 582.054 li
350.046 582.054 li
350.046 578.223 li
cp
f
177.036 556.143 mo
277.857 556.143 li
277.857 656.965 li
177.036 656.965 li
177.036 556.143 li
cp
1 1 1 rgb
f
242.771 601.109 mo
232.588 601.109 li
232.286 601.109 231.983 600.807 231.983 600.504 cv
231.983 590.221 li
231.983 587.498 229.766 585.28 227.043 585.28 cv
224.321 585.28 222.103 587.498 222.103 590.221 cv
222.103 600.403 li
222.103 600.706 221.8 601.008 221.498 601.008 cv
211.113 601.008 li
208.391 601.008 206.173 603.227 206.173 605.948 cv
206.173 608.671 208.391 610.889 211.113 610.889 cv
221.296 610.889 li
221.599 610.889 221.901 611.191 221.901 611.494 cv
221.901 621.677 li
221.901 624.398 224.12 626.617 226.842 626.617 cv
229.564 626.617 231.782 624.398 231.782 621.677 cv
231.782 611.695 li
231.782 611.393 232.084 611.091 232.387 611.091 cv
242.57 611.091 li
245.292 611.091 247.51 608.872 247.51 606.15 cv
247.712 603.327 245.494 601.109 242.771 601.109 cv
cp
0 0 0 rgb
f
242.771 612.301 mo
233.193 612.301 li
233.193 621.879 li
233.193 625.307 230.371 628.129 226.942 628.129 cv
223.515 628.129 220.691 625.307 220.691 621.879 cv
220.691 612.301 li
211.113 612.301 li
207.686 612.301 204.862 609.478 204.862 606.049 cv
204.862 602.621 207.686 599.799 211.113 599.799 cv
220.691 599.799 li
220.691 590.221 li
220.691 586.792 223.515 583.97 226.942 583.97 cv
230.371 583.97 233.193 586.792 233.193 590.221 cv
233.193 599.799 li
242.771 599.799 li
246.2 599.799 249.022 602.621 249.022 606.049 cv
249.022 609.478 246.2 612.301 242.771 612.301 cv
cp
226.942 578.928 mo
212.021 578.928 199.821 591.128 199.821 606.049 cv
199.821 620.971 212.021 633.17 226.942 633.17 cv
241.864 633.17 254.063 620.971 254.063 606.049 cv
254.063 591.128 241.864 578.928 226.942 578.928 cv
cp
f
50 556.143 mo
150.822 556.143 li
150.822 656.965 li
50 656.965 li
50 556.143 li
cp
1 1 1 rgb
f
97.1846 619.459 mo
97.2856 619.56 97.3862 619.761 97.3862 619.963 cv
97.3862 624.197 li
102.427 624.197 li
102.427 619.963 li
102.427 619.761 102.528 619.56 102.629 619.459 cv
103.637 618.652 104.242 617.342 104.242 616.03 cv
104.242 613.611 102.226 611.595 99.8062 611.595 cv
97.3862 611.595 95.3701 613.611 95.3701 616.03 cv
95.4707 617.342 96.0757 618.652 97.1846 619.459 cv
cp
0 0 0 rgb
f
94.2607 616.03 mo
94.2607 612.905 96.7813 610.385 99.9067 610.385 cv
103.032 610.385 105.553 612.905 105.553 616.03 cv
105.553 617.644 104.847 619.156 103.637 620.266 cv
103.637 624.903 li
103.637 625.205 103.335 625.508 103.032 625.508 cv
96.6807 625.508 li
96.3779 625.508 96.0757 625.205 96.0757 624.903 cv
96.0757 620.266 li
94.9668 619.156 94.2607 617.644 94.2607 616.03 cv
cp
118.66 600.907 mo
117.45 600.907 li
117.45 595.766 li
117.45 586.087 109.586 578.223 99.9067 578.223 cv
92.4458 578.223 85.792 582.961 83.3721 590.019 cv
82.7671 591.833 82.3638 593.85 82.3638 595.766 cv
82.3638 596.068 82.6665 596.37 82.9688 596.37 cv
83.271 596.37 83.5737 596.068 83.5737 595.766 cv
83.5737 593.951 83.876 592.136 84.481 590.422 cv
86.7998 583.868 92.9502 579.533 99.8062 579.533 cv
108.779 579.533 116.039 586.792 116.039 595.766 cv
116.039 600.907 li
83.0698 600.907 li
81.2549 600.907 li
79.1377 600.907 77.4238 602.621 77.4238 604.738 cv
77.4238 631.154 li
77.4238 633.271 79.1377 634.985 81.2549 634.985 cv
118.76 634.985 li
120.878 634.985 122.592 633.271 122.592 631.154 cv
122.592 604.738 li
122.491 602.621 120.777 600.907 118.66 600.907 cv
cp
f
685.178 429.106 mo
786 429.106 li
786 529.929 li
685.178 529.929 li
685.178 429.106 li
cp
1 1 1 rgb
f
760.089 458.547 mo
759.887 458.346 759.585 458.244 759.282 458.244 cv
758.979 458.244 758.678 458.346 758.476 458.547 cv
753.535 462.983 li
753.334 463.185 752.931 463.185 752.729 462.983 cv
747.184 458.346 740.429 455.724 733.774 455.724 cv
724.6 455.724 717.34 460.664 714.013 469.133 cv
716.635 466.008 720.063 464.395 724.196 464.395 cv
730.951 464.395 738.21 468.629 742.848 472.562 cv
742.949 472.662 743.05 472.863 743.05 472.965 cv
743.05 473.166 743.05 473.267 742.848 473.469 cv
738.513 478.308 li
738.109 478.711 738.109 479.417 738.412 479.921 cv
738.613 480.224 739.017 480.425 739.42 480.425 cv
758.576 480.425 li
759.08 480.425 759.585 480.224 759.988 479.82 cv
760.392 479.417 760.593 478.913 760.593 478.409 cv
760.593 459.253 li
760.593 459.151 760.392 458.85 760.089 458.547 cv
cp
0 0 0 rgb
f
745.974 493.432 mo
739.219 493.432 731.959 489.196 727.321 485.265 cv
727.221 485.164 727.12 484.962 727.12 484.861 cv
727.12 484.66 727.12 484.559 727.321 484.357 cv
731.657 479.518 li
732.061 479.114 732.061 478.409 731.758 477.904 cv
731.557 477.603 731.153 477.4 730.75 477.4 cv
711.594 477.4 li
711.089 477.4 710.585 477.603 710.182 478.006 cv
709.778 478.409 709.577 478.913 709.577 479.417 cv
709.577 498.573 li
709.577 498.977 709.778 499.38 710.081 499.581 cv
710.282 499.783 710.585 499.884 710.888 499.884 cv
711.19 499.884 711.492 499.783 711.694 499.581 cv
716.635 495.146 li
716.735 495.044 716.938 494.943 717.038 494.943 cv
717.139 494.943 717.34 494.943 717.441 495.044 cv
722.986 499.683 729.741 502.304 736.396 502.304 cv
745.57 502.304 752.83 497.363 756.156 488.895 cv
753.535 491.818 750.107 493.432 745.974 493.432 cv
cp
f
558.143 429.106 mo
658.965 429.106 li
658.965 529.929 li
558.143 529.929 li
558.143 429.106 li
cp
1 1 1 rgb
f
607.948 465.504 mo
607.948 457.942 li
607.948 453.606 li
598.169 462.983 li
607.948 471.049 li
607.948 465.504 li
cp
0 0 0 rgb
f
609.158 458.647 mo
609.158 465 li
613.393 465.302 617.224 467.117 620.249 470.142 cv
623.374 473.368 625.088 477.501 625.088 482.038 cv
625.088 491.415 617.426 499.077 608.049 499.077 cv
598.673 499.077 591.011 491.415 591.011 482.038 cv
591.011 480.728 591.212 479.417 591.414 478.106 cv
584.961 478.106 li
584.76 479.417 584.658 480.728 584.658 482.038 cv
584.658 494.943 595.145 505.328 607.948 505.328 cv
620.854 505.328 631.238 494.843 631.238 482.038 cv
631.339 469.536 621.459 459.253 609.158 458.647 cv
cp
f
431.106 429.106 mo
531.929 429.106 li
531.929 529.929 li
431.106 529.929 li
431.106 429.106 li
cp
1 1 1 rgb
f
499.363 467.218 mo
498.759 466.411 497.851 466.008 496.843 466.008 cv
495.936 466.008 495.028 466.411 494.423 467.117 cv
493.516 468.226 493.415 469.939 494.423 471.049 cv
496.742 474.073 498.053 477.804 498.053 481.635 cv
498.053 485.567 496.641 489.298 494.12 492.322 cv
490.895 496.254 486.055 498.473 481.014 498.473 cv
476.98 498.473 473.149 497.061 470.125 494.54 cv
466.697 491.616 464.58 487.584 464.177 483.047 cv
463.773 478.51 465.084 474.174 468.008 470.646 cv
468.108 470.444 468.311 470.343 468.411 470.142 cv
469.016 469.536 469.218 468.629 469.218 467.822 cv
469.116 466.915 468.713 466.209 468.108 465.604 cv
467.504 465.101 466.798 464.898 466.092 464.898 cv
465.185 464.898 464.378 465.302 463.773 465.907 cv
463.571 466.108 463.37 466.411 463.168 466.612 cv
459.236 471.452 457.32 477.501 457.926 483.651 cv
458.43 490.104 461.354 495.649 466.193 499.683 cv
470.428 503.11 475.67 505.025 481.014 505.025 cv
487.971 505.025 494.423 502.001 498.859 496.657 cv
505.917 488.188 506.118 475.889 499.363 467.218 cv
cp
0 0 0 rgb
f
481.014 470.646 mo
482.728 470.646 484.14 469.234 484.14 467.52 cv
484.14 456.127 li
484.14 454.413 482.728 453.002 481.014 453.002 cv
479.3 453.002 477.889 454.413 477.889 456.127 cv
477.889 467.419 li
477.889 469.234 479.3 470.646 481.014 470.646 cv
cp
f
304.071 429.106 mo
404.893 429.106 li
404.893 529.929 li
304.071 529.929 li
304.071 429.106 li
cp
1 1 1 rgb
f
353.978 504.219 mo
356.196 504.219 358.011 502.606 358.313 500.388 cv
349.542 500.388 li
349.945 502.606 351.76 504.219 353.978 504.219 cv
cp
0 0 0 rgb
f
369.706 473.368 mo
369.706 466.612 363.758 460.16 356.398 459.051 cv
356.095 459.051 355.894 458.748 355.894 458.446 cv
355.894 455.724 li
355.894 454.716 355.087 453.809 353.978 453.809 cv
352.869 453.809 352.063 454.615 352.063 455.724 cv
352.063 458.446 li
352.063 458.748 351.861 459.051 351.559 459.051 cv
343.997 460.261 338.25 466.915 338.25 474.577 cv
338.25 494.137 li
369.807 494.137 li
369.807 473.368 li
369.706 473.368 li
cp
f
370.412 495.447 mo
337.645 495.447 li
336.637 495.447 335.729 496.254 335.729 497.363 cv
335.729 498.473 336.536 499.279 337.645 499.279 cv
349.038 499.279 li
359.12 499.279 li
370.513 499.279 li
371.521 499.279 372.429 498.473 372.429 497.363 cv
372.429 496.254 371.42 495.447 370.412 495.447 cv
cp
f
177.036 429.106 mo
277.857 429.106 li
277.857 529.929 li
177.036 529.929 li
177.036 429.106 li
cp
1 1 1 rgb
f
246.804 485.971 mo
244.99 484.155 242.671 483.248 240.15 483.248 cv
237.629 483.248 235.21 484.257 233.395 486.071 cv
233.193 486.272 232.891 486.575 232.689 486.878 cv
232.588 486.979 232.387 487.079 232.185 487.079 cv
231.983 487.079 231.883 486.979 231.681 486.878 cv
219.079 474.275 li
218.978 474.174 218.876 473.973 218.876 473.771 cv
218.876 473.569 218.978 473.469 219.079 473.267 cv
219.381 473.065 219.583 472.763 219.885 472.562 cv
223.615 468.831 223.615 462.882 219.986 459.151 cv
218.171 457.337 215.852 456.43 213.332 456.43 cv
210.811 456.43 208.391 457.438 206.576 459.253 cv
203.35 462.479 204.56 467.621 206.072 471.352 cv
208.694 477.703 214.542 485.265 221.599 491.415 cv
228.858 497.767 236.117 501.396 241.259 501.396 cv
241.259 501.396 li
243.477 501.396 245.292 500.69 246.704 499.38 cv
248.519 497.564 249.526 495.246 249.526 492.625 cv
249.526 490.104 248.519 487.685 246.804 485.971 cv
cp
0 0 0 rgb
f
50 429.106 mo
150.822 429.106 li
150.822 529.929 li
50 529.929 li
50 429.106 li
cp
1 1 1 rgb
f
107.368 486.475 mo
105.351 488.491 102.73 489.6 99.9067 489.6 cv
94.0591 489.6 89.2197 484.861 89.2197 479.014 cv
89.2197 476.19 90.3286 473.469 92.3452 471.452 cv
94.3618 469.436 97.084 468.326 99.9067 468.326 cv
105.754 468.326 110.493 473.166 110.493 479.014 cv
110.493 481.837 109.384 484.458 107.368 486.475 cv
cp
119.063 481.938 mo
119.063 481.635 119.366 481.434 119.567 481.434 cv
126.524 480.425 li
126.524 477.603 li
119.567 476.493 li
119.265 476.493 119.063 476.291 119.063 475.989 cv
118.76 474.577 118.458 473.166 117.954 471.956 cv
117.853 471.653 117.954 471.452 118.156 471.25 cv
123.701 466.814 li
122.289 464.395 li
115.635 467.016 li
115.333 467.117 115.03 467.016 114.929 466.814 cv
114.123 465.806 113.014 464.798 112.005 463.891 cv
111.804 463.688 111.703 463.387 111.804 463.185 cv
114.425 456.631 li
112.005 455.22 li
107.569 460.765 li
107.368 460.967 107.065 461.067 106.864 460.967 cv
105.553 460.463 104.242 460.16 102.831 459.857 cv
102.528 459.857 102.327 459.555 102.327 459.354 cv
101.318 452.396 li
98.4951 452.396 li
97.3862 459.354 li
97.3862 459.656 97.1846 459.857 96.8823 459.857 cv
95.4707 460.16 94.0591 460.463 92.8491 460.967 cv
92.5469 461.067 92.3452 460.967 92.1436 460.765 cv
87.7075 455.22 li
85.2876 456.631 li
87.9092 463.185 li
88.0098 463.387 87.9092 463.688 87.7075 463.891 cv
86.5986 464.798 85.6909 465.806 84.6826 466.915 cv
84.481 467.117 84.1787 467.218 83.9771 467.117 cv
77.5244 464.395 li
76.1128 466.814 li
81.6582 471.25 li
81.8599 471.452 81.9604 471.755 81.8599 471.956 cv
81.4565 473.166 81.0532 474.577 80.7505 475.989 cv
80.7505 476.291 80.4482 476.493 80.2466 476.493 cv
73.29 477.603 li
73.29 480.425 li
80.2466 481.434 li
80.5488 481.434 80.7505 481.635 80.7505 481.938 cv
80.9521 483.248 81.3555 484.559 81.8599 485.971 cv
81.9604 486.272 81.8599 486.475 81.6582 486.676 cv
76.1128 491.112 li
77.5244 493.532 li
84.0776 490.911 li
84.2793 490.81 84.582 490.911 84.7837 491.112 cv
85.6909 492.121 86.6992 493.229 87.7075 494.036 cv
87.9092 494.238 88.0098 494.54 87.9092 494.742 cv
85.2876 501.396 li
87.7075 502.808 li
92.1436 497.263 li
92.3452 497.061 92.6475 496.96 92.8491 497.061 cv
94.0591 497.464 95.4707 497.867 96.8823 498.17 cv
97.1846 498.17 97.3862 498.473 97.3862 498.674 cv
98.4951 505.631 li
101.318 505.631 li
102.327 498.674 li
102.327 498.371 102.528 498.17 102.831 498.17 cv
104.142 497.968 105.452 497.565 106.864 497.061 cv
107.166 496.96 107.368 497.061 107.569 497.263 cv
112.005 502.808 li
114.425 501.396 li
111.804 494.742 li
111.703 494.439 111.804 494.137 112.005 494.036 cv
113.014 493.229 114.123 492.121 114.929 491.112 cv
115.131 490.911 115.434 490.81 115.635 490.911 cv
122.289 493.532 li
123.701 491.112 li
118.156 486.676 li
117.954 486.475 117.853 486.172 117.954 485.971 cv
118.458 484.559 118.861 483.248 119.063 481.938 cv
cp
0 0 0 rgb
f
685.178 302.071 mo
786 302.071 li
786 402.894 li
685.178 402.894 li
685.178 302.071 li
cp
1 1 1 rgb
f
752.124 349.357 mo
752.124 349.357 li
752.023 349.357 752.023 349.357 751.922 349.357 cv
751.721 349.357 751.519 349.256 751.418 349.155 cv
751.317 349.054 751.217 348.853 751.317 348.651 cv
751.418 347.945 751.519 347.24 751.519 346.634 cv
751.519 339.879 746.074 334.435 739.319 334.435 cv
734.682 334.435 730.447 337.057 728.431 341.19 cv
728.33 341.493 727.927 341.593 727.624 341.493 cv
726.616 341.089 725.507 340.787 724.397 340.787 cv
720.063 340.787 716.533 344.315 716.533 348.752 cv
716.533 348.853 li
716.533 348.954 li
716.533 349.256 716.332 349.559 716.029 349.559 cv
711.392 350.466 707.964 354.7 707.964 359.438 cv
707.964 364.178 710.888 368.513 715.021 369.622 cv
752.729 369.622 li
758.072 369.42 762.206 364.984 762.206 359.438 cv
762.206 353.793 757.669 349.357 752.124 349.357 cv
cp
0 0 0 rgb
f
558.143 302.071 mo
658.965 302.071 li
658.965 402.894 li
558.143 402.894 li
558.143 302.071 li
cp
1 1 1 rgb
f
594.136 326.672 mo
583.953 326.672 li
583.247 326.672 582.743 327.176 582.743 327.882 cv
582.743 338.065 li
582.743 338.771 583.247 339.274 583.953 339.274 cv
594.136 339.274 li
594.842 339.274 595.346 338.771 595.346 338.065 cv
595.346 327.882 li
595.346 327.176 594.741 326.672 594.136 326.672 cv
cp
0 0 0 rgb
f
612.989 364.48 mo
602.807 364.48 li
602.101 364.48 601.597 364.984 601.597 365.689 cv
601.597 375.873 li
601.597 376.579 602.101 377.083 602.807 377.083 cv
612.989 377.083 li
613.695 377.083 614.199 376.579 614.199 375.873 cv
614.199 365.689 li
614.199 364.984 613.695 364.48 612.989 364.48 cv
cp
f
612.989 345.525 mo
602.807 345.525 li
602.101 345.525 601.597 346.03 601.597 346.735 cv
601.597 356.918 li
601.597 357.624 602.101 358.128 602.807 358.128 cv
612.989 358.128 li
613.695 358.128 614.199 357.624 614.199 356.918 cv
614.199 346.735 li
614.199 346.13 613.695 345.525 612.989 345.525 cv
cp
f
594.136 345.525 mo
583.953 345.525 li
583.247 345.525 582.743 346.03 582.743 346.735 cv
582.743 356.918 li
582.743 357.624 583.247 358.128 583.953 358.128 cv
594.136 358.128 li
594.842 358.128 595.346 357.624 595.346 356.918 cv
595.346 346.735 li
595.346 346.13 594.741 345.525 594.136 345.525 cv
cp
f
612.989 326.672 mo
602.807 326.672 li
602.101 326.672 601.597 327.176 601.597 327.882 cv
601.597 338.065 li
601.597 338.771 602.101 339.274 602.807 339.274 cv
612.989 339.274 li
613.695 339.274 614.199 338.771 614.199 338.065 cv
614.199 327.882 li
614.199 327.176 613.695 326.672 612.989 326.672 cv
cp
f
594.136 364.48 mo
583.953 364.48 li
583.247 364.48 582.743 364.984 582.743 365.689 cv
582.743 375.873 li
582.743 376.579 583.247 377.083 583.953 377.083 cv
594.136 377.083 li
594.842 377.083 595.346 376.579 595.346 375.873 cv
595.346 365.689 li
595.346 364.984 594.741 364.48 594.136 364.48 cv
cp
f
631.944 326.672 mo
621.761 326.672 li
621.056 326.672 620.551 327.176 620.551 327.882 cv
620.551 338.065 li
620.551 338.771 621.056 339.274 621.761 339.274 cv
631.944 339.274 li
632.649 339.274 633.154 338.771 633.154 338.065 cv
633.154 327.882 li
633.154 327.176 632.549 326.672 631.944 326.672 cv
cp
f
631.944 345.525 mo
621.761 345.525 li
621.056 345.525 620.551 346.03 620.551 346.735 cv
620.551 356.918 li
620.551 357.624 621.056 358.128 621.761 358.128 cv
631.944 358.128 li
632.649 358.128 633.154 357.624 633.154 356.918 cv
633.154 346.735 li
633.154 346.13 632.549 345.525 631.944 345.525 cv
cp
f
631.944 364.48 mo
621.761 364.48 li
621.056 364.48 620.551 364.984 620.551 365.689 cv
620.551 375.873 li
620.551 376.579 621.056 377.083 621.761 377.083 cv
631.944 377.083 li
632.649 377.083 633.154 376.579 633.154 375.873 cv
633.154 365.689 li
633.154 364.984 632.549 364.48 631.944 364.48 cv
cp
f
431.106 302.071 mo
531.929 302.071 li
531.929 402.894 li
431.106 402.894 li
431.106 302.071 li
cp
1 1 1 rgb
f
500.573 345.727 mo
487.971 345.727 li
487.668 345.727 487.365 345.425 487.365 345.122 cv
487.365 332.419 li
487.365 328.991 484.543 326.067 481.014 326.067 cv
477.484 326.067 474.662 328.89 474.662 332.419 cv
474.662 345.021 li
474.662 345.324 474.359 345.626 474.057 345.626 cv
461.454 345.626 li
458.026 345.626 455.103 348.449 455.103 351.978 cv
455.103 355.507 457.926 358.33 461.454 358.33 cv
474.057 358.33 li
474.359 358.33 474.662 358.632 474.662 358.935 cv
474.662 371.537 li
474.662 374.966 477.484 377.89 481.014 377.89 cv
484.543 377.89 487.365 375.066 487.365 371.537 cv
487.365 358.935 li
487.365 358.632 487.668 358.33 487.971 358.33 cv
500.573 358.33 li
504.001 358.33 506.925 355.507 506.925 351.978 cv
506.925 348.449 504.001 345.727 500.573 345.727 cv
cp
0 0 0 rgb
f
304.071 302.071 mo
404.893 302.071 li
404.893 402.894 li
304.071 402.894 li
304.071 302.071 li
cp
1 1 1 rgb
f
359.221 326.874 mo
358.313 325.865 357.104 325.361 355.692 325.361 cv
352.163 325.361 li
350.853 325.361 349.542 325.865 348.634 326.874 cv
347.727 327.882 347.223 329.091 347.324 330.503 cv
349.139 356.212 li
349.34 358.733 351.356 360.648 353.877 360.648 cv
356.398 360.648 358.414 358.733 358.616 356.212 cv
360.531 330.503 li
360.632 329.192 360.128 327.882 359.221 326.874 cv
cp
0 0 0 rgb
f
353.978 368.312 mo
357.096 368.312 359.624 370.839 359.624 373.957 cv
359.624 377.075 357.096 379.604 353.978 379.604 cv
350.86 379.604 348.332 377.075 348.332 373.957 cv
348.332 370.839 350.86 368.312 353.978 368.312 cv
cp
f
177.036 302.071 mo
277.857 302.071 li
277.857 402.894 li
177.036 402.894 li
177.036 302.071 li
cp
1 1 1 rgb
f
243.88 333.931 mo
242.167 333.931 240.654 334.637 239.444 335.746 cv
221.296 353.894 li
221.095 354.095 220.691 354.095 220.389 353.894 cv
214.34 347.844 li
213.13 346.634 211.618 346.03 209.904 346.03 cv
208.189 346.03 206.677 346.634 205.467 347.844 cv
204.257 349.054 203.652 350.566 203.652 352.281 cv
203.652 353.995 204.257 355.507 205.467 356.717 cv
221.095 372.344 li
248.417 344.719 li
250.837 342.299 250.837 338.266 248.417 335.847 cv
247.208 334.536 245.595 333.931 243.88 333.931 cv
cp
0 0 0 rgb
f
50 302.071 mo
150.822 302.071 li
150.822 402.894 li
50 402.894 li
50 302.071 li
cp
1 1 1 rgb
f
108.578 334.435 mo
106.359 330.201 103.537 327.68 100.512 327.377 cv
100.512 340.484 li
110.896 340.484 li
110.292 338.266 109.586 336.25 108.578 334.435 cv
cp
0 0 0 rgb
f
88.8164 363.169 mo
99.3018 363.169 li
99.3018 352.583 li
87.4048 352.583 li
87.5059 356.313 87.9092 359.943 88.8164 363.169 cv
cp
f
91.2363 334.435 mo
90.3286 336.25 89.522 338.266 88.9175 340.484 cv
99.3018 340.484 li
99.3018 327.377 li
96.2773 327.781 93.4541 330.201 91.2363 334.435 cv
cp
f
87.4048 351.373 mo
99.2012 351.373 li
99.2012 341.795 li
88.5142 341.795 li
87.9092 344.719 87.5059 347.945 87.4048 351.373 cv
cp
f
91.2363 369.521 mo
93.4541 373.756 96.2773 376.276 99.3018 376.579 cv
99.3018 364.48 li
89.2197 364.48 li
89.7236 366.295 90.4297 368.009 91.2363 369.521 cv
cp
f
87.3042 341.795 mo
78.0283 341.795 li
77.9277 341.795 77.7261 341.795 77.625 341.694 cv
76.2139 344.618 75.4072 347.945 75.3062 351.373 cv
86.0942 351.373 li
86.1953 348.046 86.5986 344.719 87.3042 341.795 cv
cp
f
90.127 333.83 mo
91.5386 331.209 93.1519 329.192 94.8657 327.882 cv
87.6064 329.394 81.5571 334.133 78.23 340.484 cv
87.6064 340.484 li
88.2114 338.065 89.0181 335.847 90.127 333.83 cv
cp
f
86.1953 352.583 mo
75.3062 352.583 li
75.4072 356.414 76.415 359.943 78.0283 363.169 cv
87.5059 363.169 li
86.6992 359.943 86.1953 356.313 86.1953 352.583 cv
cp
f
90.127 370.126 mo
89.2197 368.412 88.5142 366.496 87.9092 364.48 cv
78.835 364.48 li
82.2632 370.328 88.1108 374.563 94.9668 376.074 cv
93.0508 374.764 91.438 372.747 90.127 370.126 cv
cp
f
109.687 370.126 mo
108.275 372.747 106.662 374.764 104.948 376.074 cv
111.804 374.663 117.551 370.328 121.08 364.48 cv
112.005 364.48 li
111.4 366.496 110.594 368.412 109.687 370.126 cv
cp
f
109.687 333.83 mo
110.695 335.847 111.602 338.065 112.207 340.484 cv
121.583 340.484 li
118.256 334.133 112.106 329.394 104.948 327.882 cv
106.763 329.192 108.376 331.209 109.687 333.83 cv
cp
f
113.619 351.373 mo
124.407 351.373 li
124.306 347.945 123.499 344.618 122.088 341.694 cv
121.987 341.795 121.886 341.795 121.685 341.795 cv
112.51 341.795 li
113.215 344.719 113.619 348.046 113.619 351.373 cv
cp
f
111.3 341.795 mo
100.512 341.795 li
100.512 351.373 li
112.308 351.373 li
112.308 347.945 111.905 344.719 111.3 341.795 cv
cp
f
112.409 352.583 mo
100.512 352.583 li
100.512 363.169 li
110.997 363.169 li
111.905 359.943 112.308 356.313 112.409 352.583 cv
cp
f
112.308 363.169 mo
121.785 363.169 li
123.398 359.943 124.407 356.414 124.507 352.583 cv
113.619 352.583 li
113.619 356.313 113.114 359.943 112.308 363.169 cv
cp
f
108.578 369.521 mo
109.384 368.009 110.09 366.295 110.594 364.48 cv
100.512 364.48 li
100.512 376.579 li
103.537 376.176 106.359 373.756 108.578 369.521 cv
cp
f
685.178 175.036 mo
786 175.036 li
786 275.857 li
685.178 275.857 li
685.178 175.036 li
cp
1 1 1 rgb
f
748.998 205.383 mo
721.272 205.383 li
718.146 205.383 715.626 207.904 715.626 211.029 cv
715.626 238.755 li
715.626 241.881 718.146 244.401 721.272 244.401 cv
748.998 244.401 li
752.124 244.401 754.645 241.881 754.645 238.755 cv
754.645 211.13 li
754.645 207.904 752.124 205.383 748.998 205.383 cv
cp
0 0 0 rgb
f
558.143 175.036 mo
658.965 175.036 li
658.965 275.857 li
558.143 275.857 li
558.143 175.036 li
cp
1 1 1 rgb
f
611.881 237.344 mo
611.881 241.981 li
611.881 242.284 611.578 242.586 611.275 242.586 cv
604.924 242.586 li
604.621 242.586 604.319 242.284 604.319 241.981 cv
604.319 237.344 li
603.109 236.234 602.403 234.722 602.403 233.109 cv
602.403 229.983 604.924 227.463 608.049 227.463 cv
611.175 227.463 613.695 229.983 613.695 233.109 cv
613.695 234.722 612.989 236.234 611.881 237.344 cv
cp
626.802 219.296 mo
624.987 219.296 li
591.212 219.296 li
589.397 219.296 li
587.985 219.296 586.877 220.405 586.877 221.817 cv
586.877 248.232 li
586.877 249.644 587.985 250.753 589.397 250.753 cv
626.903 250.753 li
628.314 250.753 629.424 249.644 629.424 248.232 cv
629.424 221.817 li
629.322 220.405 628.214 219.296 626.802 219.296 cv
cp
0 0 0 rgb
f
624.281 215.364 mo
624.281 206.391 617.022 199.132 608.049 199.132 cv
599.076 199.132 591.817 206.391 591.817 215.364 cv
591.817 217.986 li
624.383 217.986 li
624.383 215.364 li
624.281 215.364 li
cp
f
608.049 228.774 mo
605.63 228.774 603.613 230.79 603.613 233.21 cv
603.613 234.521 604.218 235.832 605.227 236.638 cv
605.327 236.739 605.428 236.94 605.428 237.142 cv
605.428 241.376 li
610.469 241.376 li
610.469 237.142 li
610.469 236.94 610.57 236.739 610.671 236.638 cv
611.679 235.832 612.284 234.521 612.284 233.21 cv
612.485 230.689 610.469 228.774 608.049 228.774 cv
cp
f
431.106 175.036 mo
531.929 175.036 li
531.929 275.857 li
431.106 275.857 li
431.106 175.036 li
cp
1 1 1 rgb
f
481.014 203.77 mo
457.32 228.976 li
456.917 229.58 456.917 230.387 457.32 231.093 cv
457.724 231.798 458.43 232.202 459.136 232.202 cv
465.185 232.202 li
465.487 232.202 465.79 232.504 465.79 232.807 cv
465.79 244.099 li
465.79 245.309 466.798 246.417 468.108 246.417 cv
494.222 246.417 li
495.432 246.417 496.54 245.409 496.54 244.099 cv
496.54 232.807 li
496.54 232.504 496.843 232.202 497.146 232.202 cv
503.094 232.202 li
503.9 232.202 504.606 231.798 504.908 231.093 cv
505.312 230.387 505.211 229.681 504.908 228.976 cv
481.014 203.77 li
cp
0 0 0 rgb
f
304.071 175.036 mo
404.893 175.036 li
404.893 275.857 li
304.071 275.857 li
304.071 175.036 li
cp
1 1 1 rgb
f
368.698 230.387 mo
364.968 230.387 361.943 233.21 361.439 236.739 cv
345.509 229.379 li
346.215 228.27 346.517 226.959 346.517 225.648 cv
346.517 224.337 346.114 223.027 345.509 221.918 cv
361.641 214.457 li
362.548 217.482 365.371 219.599 368.597 219.599 cv
372.63 219.599 375.957 216.272 375.957 212.239 cv
375.957 208.206 372.63 204.879 368.597 204.879 cv
364.564 204.879 361.237 208.206 361.237 212.239 cv
361.237 212.542 361.237 212.844 361.338 213.146 cv
344.703 220.809 li
343.392 219.296 341.375 218.288 339.157 218.288 cv
335.125 218.288 331.797 221.615 331.797 225.648 cv
331.797 229.681 335.125 233.008 339.157 233.008 cv
341.375 233.008 343.392 232 344.703 230.488 cv
361.338 238.15 li
361.54 241.981 364.766 245.107 368.698 245.107 cv
372.731 245.107 376.058 241.78 376.058 237.747 cv
376.058 233.714 372.731 230.387 368.698 230.387 cv
cp
0 0 0 rgb
f
177.036 175.036 mo
277.857 175.036 li
277.857 275.857 li
177.036 275.857 li
177.036 175.036 li
cp
1 1 1 rgb
f
248.821 217.683 mo
242.771 217.683 li
242.469 217.683 242.167 217.381 242.167 217.079 cv
242.167 205.786 li
242.167 204.577 241.158 203.467 239.848 203.467 cv
213.835 203.467 li
212.626 203.467 211.517 204.476 211.517 205.786 cv
211.517 217.079 li
211.517 217.381 211.214 217.683 210.912 217.683 cv
204.963 217.683 li
204.157 217.683 203.451 218.086 203.148 218.792 cv
202.745 219.498 202.846 220.204 203.148 220.91 cv
226.842 246.115 li
250.535 220.91 li
250.938 220.305 250.938 219.498 250.535 218.792 cv
250.333 218.086 249.627 217.683 248.821 217.683 cv
cp
0 0 0 rgb
f
50 175.036 mo
150.822 175.036 li
150.822 275.857 li
50 275.857 li
50 175.036 li
cp
1 1 1 rgb
f
99.9067 204.778 mo
85.2876 204.778 73.3906 212.44 73.3906 221.817 cv
73.3906 226.556 76.5161 231.193 82.0615 234.42 cv
82.2632 234.521 82.4648 234.823 82.3638 235.125 cv
80.0449 244.401 li
89.8247 237.848 li
89.9253 237.747 90.127 237.747 90.3286 237.747 cv
93.3535 238.453 96.5796 238.856 99.8062 238.856 cv
114.425 238.856 126.322 231.193 126.322 221.817 cv
126.322 212.44 114.526 204.778 99.9067 204.778 cv
cp
0 0 0 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (9-Template_Glyph_055786427966.eps)
%%CreationDate: 12/9/2022 3:26 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7R;*UgXRedMa*%nX58^7i^;p:t>I1e!b]/Wp/]fi.M7'5PQ5p\kY&`Ngo01G8'4(V_r?F5J_tj0E.U
%+8sU9GMg16nuK77IerL4rl*^>;dX`5n&N*,nrIn:cTh<%5Pd$?rUTWj\'=&`.2>RtI4p">H^,iii5B9s?@Dk9p"Ss7k5DnnYJ:&0
%iSE,ShLGE\]8,:VI!bUS07PR'H$T.6^&IloGQ3!`o]qjIrhl:XjNlQs0>@;Zoo"%_hn8mTY2:<8Q7mLRhgI"f8I,#Ljl;7`Ij:[p
%^&IF]\Mralc2[!oJ+iM^8WiT=fg#E*orl.,p:L&P^\d<Pg].8nB_pf9]6=.RfAF6j5=fG%\4^l?9`B;2m.ETVr;Q$NoU:!9Q2L6c
%5JBK$s3'5*Ifmg%4KHYZ&s'p?rKUt#r:kQSs4bd>rsSkPGNH!mFoLNAT&CSj)t`0n2YhF&'@NW`5k6_f,i7J:^4,[uf.XmcbqGI=
%EM%Qlq`4X1HRY"%I[YWnqrif_n<TDG\_cFZJ);@DotPnIqHn_lpKq7Ar:9N-qj(%7J+p"IrZCrJZh/S^,BkB?q`IKY^]3m%Y@#'E
%]=2-q-Z?1e[e+qEjh!0QIk=I.qg%`)97GjK_rC]BMna]9rn"?gPEG_0lgO@(jH@PlJ,?;8hu(I:hn6te.s@&iroWn.^O>i`H,i.q
%C['d%;b-G!^L[,K.e!'Zbs.eUpjM01>PI=h4o$tTi:-ac)4?!Qri9CUp%B1dcai=o8\#S.+;hkCpAV*Gp[B4!DX.8\"5_AQs'Pd*
%m0Vj%I.uI_\,MCcro2li:D;]ss3"d./tTiVo&8CDI%bKKo;PE7[k^%ZIeRXTli+`88Jg96@h2&F(Ou*Q:AF*+3r]&`^XBmA0E1,"
%n)]U[pAWnBhu*<)IsUkbB0Ub6jh$"iIJ7)U^\[BSHhlf2hYm+3rX\hpa*0c.,ea*0pFflF+7_MIgqWdPRm6lm*QiH;Isn5EQ#lb"
%rqE&S^E7O2b[=9p]*"<^J,:n&^OGq%WT0)QI/E$]Is_"jRuch3Dn^\rp>u05rZV.;Mm*+Krpirng$X:35,qg)8)MB\i^ms-F,Af&
%i:Nq.]%"plr`Rb>laL5M)nkR`S"!L<a)q-Xhn8d*G@,jmm@3>//;\k+jP>7YqYf0`I]KsRrqgX6q<i1Y^&*,j#]3t!g)p.hGC%Pa
%R#=Am%p_I"p`I!:LR2@trRJ+/^\m5d^O#RHr]foH\BkbVqba-P(#SkCY'BnD>jUtus,jJEKBW,t?]"@NJSG'eg\g>D?[hb7T1-Hk
%j8523^O#i?js!"X5CN3*f&F;KIK.iAYP7d;pZ<DsF*GCqkEk'kN0Z+l/U+ts$X"Ut$c()<rnEcoEqf4n\](2SJ,/2-ZM+4UmUq%D
%p?g$^Z7>e+7'a0@Eg70YAbBh_:VZi*Z[_cJZiC!qcOTl>O*\0C*:%ii4<-"P8gUl%dRm<a6[G>b>]S(PYP^4AbKn@/8nk,g=e:q7
%o"6#$eQQ/touZBheYi(CIGU!M>A^L%[bB4(X<0UughUhVo[TT+L]4A>mk;[8d`A2D2S-!XCHNJ1a2<-[T$LoDR:lNsZWUn*UWkOV
%>]Mrp:ZoWC2P8;3o>Nak>&nDZXL]=2^':%.[@YJ0</q2DT#pM-NYe=;[U-$O:ZPrV,WW.MKh(7PG]Y!Za0]?qiVu'kj7CUXs$#**
%b`:kQj+SRNO3<YLI!kqHe,8DX+$Ag!*:8&CO&npQW+5bp+[,hOhr_]@O<-X#p%k%CHMj^b++O3^`uf'dIr(+-7&LaH.Qt/]1XR^C
%b,L,-H((>$(SY->BU>$?9]7Ap+[=:+8eV)#9uDcVO[8ujZqM&pe"LDRbL@=[2/+IbVRJ!Qs+q0NL\@f4VnR/1dm`FnC7V8sG9/sJ
%9QcD0+6]:/g1Q@9%2:ioNYg^Z2%aq-#u)]$;&boe&fmg$&mFOfCF8>DKDJ.sPj53LV4aaaR!.\Cd\Ec[J%ZA44L='n*&%5_:-1eK
%>n57Zq/hi3*;'Psp?8/mPTK]4*oj#V\I[qErgq1,m>(?/4'MQra%,n!dJle!TD62$J+WM?1s/bE.*nkge5D\i^`Ud$8R\_`TtU"`
%m$17m11UHi,-*T&QL[B78N+1lMEZ:sD/rIF<9fZeegKhg[7L[Qo%Q!YlP.l!e$R9Hhl0U\YD?d&NM>.ga[NNukAdP,[XNd^.2OS2
%H:B`NBU#W5r4bC"YBo?aj`pdgTXI]ZlCrEM8GhHi3,UR7N/<VE8A@e^`?@DDQG<D<No.#4r_:ETHMmO&nY/lEiIAVMa(.^&;0Z&d
%>b0SB/YjcDBkeq78QKWl[VFN5aWuHkp<5?u((CM<Bi;u7K\_m;1[D(*?oPXX,bCDP2R/i#-d@:r:G9S6WhSri6",R:h`[aK9B_0Q
%gRo116h!bZBXosq8'uD)EeBt<'(,BXm0;J8TO)F+g2K=E4R`mkB"CWXQ"hak+<!]K;_:CC@iE<DL<k/FVQR_Y'+=9pR<i'm-K&r^
%cg'jWS\:_ts)Mo2T)KBr)#lbr_"%??a2@FO&+OT\njaep@h.bnUY7m'O$0;ZO)FieWCPPg04);9p>W&&L>t^L;-p']0:kCl:VUEq
%1mrs[fo'LhA;Dd>`;?n;/3c3;?9C>sGUgUY8jE!B4J\l.A@+J?fNRpL]D1ka7dT[+\W#[K@Lu8=QCEj3+tMq%/+59^,>VjY9URt:
%<r=.b^`g/&F.$T8`H#'i5n'04<G!H7-ts`3Gs%ErqGcgD-.?nUe8A`r'X:fh35gDo0(\sk1]<0SpaJ#6MZsa#+dsO37Q?i!T\)WX
%RTM_C3_s;_@\OC\+S`-<UL_b'W?'>?ihsmCbA]gN!g@iEg_$T&TNc0-.\9qFEfX[lM:.$&/Fj^Q]gRY7O;Gi,$aW)5#8GD?!B%iS
%(3WXK^PkNr]u5P<2o";@SB!EIHtmqo`Dqne<&5#QG+X9(s6Xg5dnrn2\K&*YV0tmqptt-%O^@t$nbfj;cXc]np<gpu`uNOf8%&5F
%E7P7(l1(P'rb(Nd%iXO?)W_JJjUW9ke+NJ@NUd=6nct0F#EA<=HDF$0GCT8(e+]JaG+AP=o)JIEs7d*K^)so2"Dh--FcD!&1`;"/
%N6rRDOcD>4rkLbh>s"/>7Ya6FIIX<5Hhsl".DT][Y,2"_FB`#07dM^R\khnS?)dQ][<cP9q_p`P809GX]6rD#]Z0''gV<PE%2cZt
%6ON>7Vp@9h^p*t`O!i"5J1&FR'9j0%5h60'G5UA=,C0&iLTaaV8<+c&^Y]VdBk6H(hf$]n4N]F):X?YSPZ8EHIX]@Q.EeWjR'K-N
%d;Y!^0V<?DgZ'!!oSc8G.,\W49I#*a/NEARNp!mlJ(U??!b4(N2nd5OCkTaY\ULs0(QUHr_Ho?Em"Mm1[l`^-5EQ=:aB*X1\!%F%
%PV9K*^@Kt<$,g)2Vjd18%?!1]0uS#q@@O;1.t+G#)5RB(.ba'aXTO#U;d#2%Xf`mui#a%=@\9G\-jAk9*C)b\=(4^7T?,(U%==mW
%%2:@k("&RnioJRJr;J(u<IaWSI+n>bj&KWX+4QArQHnef6!@10PN\S<pOTHHasM]N2bWjM@8?cabR:(BSF\l$;9(+S\Bjm?jZbuM
%P+S0KGd&GY@IX;rL&DCsrG0>oBM)nnUS""^rIh%h2kq8Q1/-fms/tOTeIZ&Hk#""KYL"U*r$tlA'*;oS]9S$EN?j)W\9n<t\CY%T
%-CpaEn(Hq&<2;9DFZm8d.O/-b[agP3YimrMHI-e$qVrG6W!@cUFL.>YR<5?GFFHro<VX-3?[H\@]!'RHGdZm>j7Q_\E`]F^=#B)7
%XsM]VfCLL>^FGecpg/%ZZfjps!-B%=?&Pa3mh:`@P5D8"rBma^+BO)7=JQbCKl@9T\:JT#Q]/@"UJ;4bEVuEMB3R,4RuGK8/tP%I
%nlSg[/4N/#CF;c?&RL\-0LE@P1L[^CAbM'3Zbqr<$9&mo=AK3;Hq&Y%6&5M=B9fGP!!O.S7h5eg!am-\f)2G[p1^[,(HIT8R=bYO
%']:G?+4>[@*Cpa<N+.E8h>enKON969nI/V1TO;HPEe//2!*D@"f[^Sug08Fk!,]>VV'eguLI%b"Sp+GT9*',X(h?!"7R52k4oUOD
%^X_Wh7&Jl$%-6'&N=F-W%"LLW]_(V#OLHi]4AR@]SbrTU7shUp+B9t"Q:^)UjR<88_M*hSUjo!mj]e/278apNgqko8@e(7*<?srl
%mMGrXi?&8R,4M@9T+A+JlZN_G8EUjV6;JK?R1.t0#&Q-41^q\m@lWTWK.hj#QHBb2@S#Q?K,.8_E-FP;mOj69Qhc_Whkai1^?`g:
%-R:H[8qZjjC+GS>JUc%n>P#S)g/#`KVs@8UgKkE<MpeEoPU<JAH$f*ojW>cX[?njDY:4tZ+7-2oqit)?hr?*Me'.8&*<k]l*_Z)P
%NN@Asp)X`aW#?^WPR=%\V5#SjNh]Bujs=@!r4kN<\Hnh%\)6-gr1<R$/Fh5Y5qPekGnhYdHPA*D>O-b2;X_W<YJ$:7>jK'O:AIEF
%pG.mn+8G8\rm0L%/,o9irS_n#J,^JdrI;u)s+a/F<W'\F^V'H!s*iaOq)Qdt,oZQD]]6U_O?U84h-XF*IU@SEmc&l9CBl8*q;P2B
%]`7EQ=0GG3qXXT'mXCj,X?V.0mbQJC)Rc"%Kbj3+natqDs!dE#KsY4bOp.!J/'dqIn:0H.s5\OojdA=)?gE6`<Ld-<p#AT;f.^I1
%bTrLLb(,a!ONe9:-WIpN10j8Hrh]=2I?PtRqkNe4f0g8lEh^8rH-RrKhd'I\?.QGG0pZBkN-<g-]RV7\?qU<ab?\oX8Q=g-/"S]S
%^$&qqQEs7.S2\W>'fC8<f=`T5/qSPE7&/VhE\GQkqg%N,OOa$,aBo1a+*tU_mopP\3):FcCSeX*mR<Tm4)`XG1/RJqTuZ5??*87)
%67Z2W$\Hgh\h!=sjf!?o84=JW48JGG<(lZ>*c(d]Q,gc^bIu!kD$,ApVE\CR=YD,F?1%AOhVMgh5ABe9=4;R0oB.`0PU7m4cV!rk
%GkSZ?g`']0)HqY1htqgrX59NW>/m#'f'cZir=5/bF7Git:[)]H.f-cBHOF-#aqJF0'Cj'?4Pcp$nA`Ya(JU1_Wk:o+eO1PSJYA2C
%"_i-(9!Rnpd]c6@W-?6ubGWB2QJWDq"Wr3hLF\`'nlk.#q,u)SVi+e[1qrmjqV>nuQ^d[:<mn\ZOQ"^Nonr%ZErJ`fW-afu-VKjY
%WcB!AQja&6^RGYH,d6ZSFKBGFY>SEXMY"d"'7ihYnYW+W/d!_c4hbIXFS#e!GukK$W$MOR<r(\E\RZUt36UfU`SA1tgmMh_H1`p2
%.pbZd\=>\;Pgc*1Y9F(0j*P;WJ9kN+h1;X:=Ls7"Kn=Ls=-MB'>01uLAfX\E-_9AFo]o9WJ8biCcC9_kL)FHE*'+ICQ]*X]8*5.X
%ijXmm\N-ohG9`MK<Bg?K`<:Xp)!rf<Z+N,d=[+H<a3s-PF28p-\>S0,T-ZP0H+<hJ-/jj)(E,_!JIJkD=)$2n-DlESApN8X&C4Pp
%LFD41?ShoZ!G0b,R4PsQeLU*K>[Z0io3@aQZ^?Jk];'ITALO(OB*(0@D_%:PNCQJtcaP"p:]:k(p[<Ql[H,ZKQ)3N1f.Xmcr?\rb
%C^KoV_nURJ/,@)pDgq;s]78faAG)_L<G-k$ipZp%%kKt$>$=.`E=UAY$T<j#hBD=o.uu*ZOkY0C&W]L!,@>`]'H=$nJr7ZLD+&:k
%N'8*d@cPO'Pf6b3?([jKjfN;+jI4$0f/K!`nRP1%#jHUi<tU8!)bmpT_6Oi&SkI%3[M(G4GjmhkDA#g.4g1&;:T_)#mtNTj[G`k5
%hEiE@p"X2k<7DI,5Wn^m<a9j0hT[9n+TACR(6Cdln8M'NHS-$@#'qkXg8s<-\6_g1R,n.s:O<RlHL*P7PslInkTg:SXo66g'jEUk
%>g*")F;Dp9Nmk)dG8.1WSthpI8%Y<)2hS?!@obQN@f2N\4/`Ubi1SI`C5g[=A.W&ELbrrSAm'-LHCI%]+du,j.d"/j5Y-:F)Ct[L
%O?\YeEn<%cYfn2p3m%5L><\3ceO,S3p^;:N>G0N0BR?hBX3-;^A]9nE^1=dc>I&""&Rsp3acNE*U-N7_\Dpa@$e>rS8XrNN/ZL"O
%%4$kW>1lt2OcD>BjUp$bQXLa@H,b\P\NqA*VjJs.=cQDY4HWZiW]O?3&c^hOq@ottQJPbQ:u/jMa(l:L$l3EbG!"b+hHZn%ColUd
%\?-O,.h&1(atVf9g[A56ZH(2$Ok9p.$[46VY`%1K/sWV'`%Hss#2X@eqe@afoB`&l1V`8>kiUiA7piiSo$&Q/IL11rXL59;`,r6Z
%)q$(j9YRns^jVY,G2slC$u5!pdJ=9&Becm!AOr>[am8;&?L<bX@+VaV>WV9b(Ve]FM#lID2!jOr^s;Q+MIq=tdF$51SR/)%E;CJ;
%_)+nBFrCd&N$6T?qC:HM@)_R)S]#nMU@uPCjrGdgn7<5j,*L9+=hQLtCk0U:K1Zmoh(\]EQG1\4BJM19!Q(Ic<*[`mco2":!iD0j
%P3G@L?])#r-4j8B]FpT2/>1ig2'ghReGRkB':W_HX<=7.@jst<7g;M>W/B6B(h82V<)X0M9<nuj)Q/<lCi"XH\4A3!,A:D:@IMSA
%&gMNloMetXf9F+U)p3#X<\)cm3^tKR3$Kk15Lm_P0B1^EN>4VYk&O,a1rS.tFZ/KndSj^(((P(^<BG"Bq8i<,@V(_MGpEqT/RNeP
%35)2:aL;f<bMc!9:O^A&1U5oSF?f,/*:'u]EZ!_]V?>4&YnWngPPCL>%\q0_:U6dW.8GCAl?OYI;=^c2\OUY$$^M'$dH$k?ZEOhP
%KA4fMG\Mq3_BGCfWSs/j(;nXdL[WT/6^7d3HkN99!mrTV_,@NNS/Q!b$U('W$@uL3c4$tjO&FE^W@ou?]?I&!7876h`na)$G_##E
%p.>#%&H>g='1VcEZ<@2%d'H$S\6/ZGZ/lKeA2(*.OUUpBm*gV)PARb?;eIjQ^g)&oW_)R,Eh>eTT,YqQ>bP8DB-Ffl28jK]d9/TK
%mB`D@K1m9!,B9+8!5H':jXnBr:%07o]'E=F5DdQ\0J$K@C8t_I8$bDP$V*]1Yj9!n_5G^*is"RcFHl0lid)rUC%&MGc2>SpUYFu/
%*S0).$?j6!4[a`*DF+6;Q1NWD*/mp/0R@Oc<AEFMNP!3=@,8st\K\JY/r40HO);__4cW^LYq>UV@.8GX$d+^co@R)QbX?Qo-+66j
%$Dlsk/U@8@@#6,:"[UEmTrjQ[RXl7.K)QL;+@Tt%W_r\]CM8Wp<UA$;D.-S0='$WR'eN1S/L].QkJ$PP`JRiX3b`C\AXO%o)VK^Y
%9[Vi@fa?cU@p>=DZcmQOD*^+i1=M8#aimp+@6=p7@A_-bF,b"XKPUnMT*;Yk/]^3&*nQRIV(sfOMJGLT']9l]X<i:Zd[*J37(:>E
%)qUaKf^$aoGYDo#clNeIP4\nZp_(rJC0VuP5RT4V<iF'FjQcK\/R@C>8M85$k4,Mu@ol@#)*XU)@h.Hj4=e6,*]omGQ1gTY7Q;pC
%X@)gscGG`6e(DQ@Eb/CijfUb<ok:'_?K>X!%X9jtGZI?u&r!#6S(Q+(W_/\9UNVK,@9LdX$b]D(r"LkMn&5HspsPI3(b5CP5ZM(V
%'$lG^g<KOu]VF5:];fp,UZs_.[A=XnK&/%fA9aV:/66a'f=H^CTQ>Zr3&Nei_Rgm+SAS!(C/LqcOi=<np!2Nt\>s<)[iPG&4Pg%8
%U00])O<=lQ:F[h%'Y_,6AZ@Oi(tfC%n7?Q)aWqlocr@,m=;sFrc&;[fFWedL04#&^SC`We9Y#UF$X$m^NF>rs`0HdiRRf;lcbc)"
%$:jMHV[usn!9X:5XUt@OiXj=JkmnT3V&.c5!_>%ANfO"$V,*?(U<>hi"u5,m:BGmY.IIT,\$q8SQn3jgpmjSY7#XKcY#mBrLpAG]
%(5q_tVk@dTR44/d/VsN,fj!/CH\4kUP^[M;25>0VbU%_gLoQqh=B7.;K1j5Q(ftj:Sa*[#%JQ'3B9/YW-T%&3*s%kApJl.[JFIuc
%kT^UoL*Zpki/'^d\ZPPGkZK6/<d:kpEN5o<PFRal3G>`$l]??"Sr*#K+AKhlCCI[Y]+4!p#JqDlUFIURjTFI1pOQ3'#smc?hHj^q
%Z&5(RCn;9XC6pWs,:P%,L5^f6G#f0j"r[I23A'J#=&1BiZ1EQ&2rsP"RGJ,kS*Jis9\=S":CbefPDc!<K13+DfCU31=-+&AILms=
%.bB[`@A;<3YK.B1o\e]^7"Q!DX/oY'PTd,Q.;h?9'VR(*qGa%29NZW&UICK1EK-8.\S,\D4M@VB4AUbU^rdM`SghT^4DO(L:DM;l
%>'Nfg($;:,6sVlW-n89A-==J2>F:i(R;&Q,Gq,CGnqDnimW%=`6?G1WmQ4j5E%1aW8/[#u=WG;#P;CE#cDE.lOYk9YRu-Apf6QW-
%@<tWe+pLJ7eanN7>cYO1]>kTXLGO^!_Kkk;7Qb6>cYM\R&N/Ml76W@MfDOU,TqqrhSV>"bHHdU"43Y\q[WMdERITFLC.PLA`)FQu
%K]qdr=[/!>bjs&J]Y0e6,!nI5MNP9h8J^EMG&GV0f3I<QB'[sGVi]OWYLu<kmKS#bpB=&7jjPMME(q_JAo[Fie*U*5-S`G88K'Q_
%"gLW@k#ak43TBMeJ7:5s&1W@*0CKbW18EclLk_]NS68Pqb+P;b7Z8bpMHGpQ&fm]e0o\9+`;Hm7fuVt\a[5h.:cWAYBpr3u%15-k
%'pm$;Q*lNOPuE`qGS("c=LoP:l=9Rg^gTTtXrXDDr$5%K18-@SaUo7oM9>l3+UFLI`1.m:=lnkFL8(4c>fkgRQ5h8`[)MSY]&H4m
%<RaH4olO3#]^h-+]A)`N!MZbf:\m0>U/-rY7_4FDigR5DFBLi;B<@;-308*:Zum!+$IO^"]JUqd4Ol79cmq0D6;lN_OG14@+S4**
%DQZ;hFWHW\l?YD]P]Z&h-tc*hVbsnApoNkQXN&,$2#CP0fCZuVlO:*<ps1lX@Upp.h\kc_BK`I;Jnl-K\+9aqmV>J^U=W's(M!^Y
%U,*Y@%.<p[?#WMMTA%6d6smE!qNL$IU!Z8FbSrJt`9r@L@+*k-$kl*P/oE)eMtdcBge`62Bo8X,2\^fQL+Y,sBLEQj%?7Tb4.$;9
%O.ODB%>AkKS=ER^lDfe]pHniQ`<gZqpn3G:GN:*g[q)qQXFB2_,*Xu8DD)pJqf=.WnJhEl,cb^ZjQ_D9Z29N>$=T<UDi&u9d`.7[
%b-4gDq:%)mNBcjV6?7&N:L`o7GA$>Jm]0Zad!^8Q@6@\7G5J@*S/qW,Jbn(/K7fONo%.et`5DMP>!9pZeMG$`4(.f9,bjsj\t0hW
%%R=3;G8:h'C1n@r08j"%B<l?1T'N;T\g1b`Q>;J7nHdOqmBceFWUbucbWN55)0?kJ)%`-F%>(Xd)BH@Be397Y&G(!@hiGVG"99o%
%i%$QdQpX6b5:9I6C9P^Z(,%3PMm7<RLM!255TCXZ<35$s"X:#M1D)ek"pQVaIJNA)GGGV.S<Xh2,YqY^=6O5ZWFPVD/2;e(Gf0*l
%I%2FO;"/#JbD73';KS*8ACV8E=@;,90Z(a5FU(gW6s3h/PPL(l5%m<(YuIC%f`&qt^l1qF\g/\1`7)]=k<iX>RS9/n9Wb;0fY68m
%O$ikbF3g[mF-I?.8o2.nX==:%#gjlk-amf!Lng4(YT#A4Q$5.ZMcL!Fd'-J>ol`#OFrk^+S.&/mUH0HDM`jab&]>6f]UFDgBtD+f
%0//6BQ_FJU;aX\Udqn3m6=O$(;aXdu-G2F`]!e35RSU!Ol1Ui[4@4.5qlE#U-(164*KG-F,XW!I!'Te>$nCHS'-E3cG(4$ua^BeH
%NlWl*3)p>!e?1q37!PP%B8U?3m5^Q8K0Bag8W@`":BTe"*V&J+a2s4/8]U7:30n&%QX5=)<.PqQ@RZ:r0iY!`&/hB\p4butd^C@/
%GSIVdRJ&uh*CWAa;aHP6o3uJG"5=sXW;#'FIcVYtd<XB>\g3N[\;3"WM0/qubJYNrGIGe7)&*bQ(Tr9PlEY=19Sn4f_ojGrT9Qi8
%#Q.Gs#,C69<QjY[A=M.HZ6_HL.2c6I;cUYmFO)Z(OmS_3k!>R#Sn:0s]o8@ZQk2ef1]!a!-&&X9quP*M%Z&=,<l7AS6Y/M:L3^5d
%qKUp_<]V(j_"-HH(qt?<,F/LH<XlG.3q]OR"@'/AkVmI;9b2O0"3PaF*1@L(FV^-\%N95)6cE':4*?:6'T*=m<D?r#`pH44G_G;I
%p/t2%65deeb$b?j8UGM'?5c`G.#7U\6n0,(/KO=W!ddUM0TMr2V,KaL_ms&6$]/.H:,VRG(gD*:ZnLFAql29R;uQE5_g$jum.ORX
%mm0.bC07+IY9Z[1buK^VHn^b'G^K];Q-8;8[NbpK#S)G)Furh?&V]+jKu>WZVhQ$8'6Bc%).4X5m;(Eo;]pO)hJ,9>GP()RpFAK3
%GS9NN(jtkdnOZto5q?2;N)<<&cpC6a2U=.e`7,D$-j\\AR".*ORWiq<fN%=g&8*d*GA"up+>pI.C6DYI_fgCS0HS%kHi0tCpJ?sM
%cALQn5KGX0+\$D][QG8cJWV@%O@C;\dH+JE94#.T6g2Cd+YXtYC.;PRnV`,r@:BV+m*8#,!a</gC'%%:fY)R2rD;@uUW<;S@Kll-
%`eqVAh%^'R<NYH82@:L`<H#rn3=HtVO"qqCi';O3%%@$3,Wnoh%:Qu$_IkSDg6u`*%7$[rX2:TO/3MdVAn)hiO-ZV23m#2,%(aqp
%2]A9B&`>MILPNl$lP9tkV^"Y]nF-_)fqiTDcj*T&"-)=_o]iT@Gdp.14X%_8F(kmA2K7q)Gnocilb]Wp6/GD.\\tZiDO$'V^<Pk7
%Y/U>+^8O]AMU]8m%HG:;YM1H'i<[4H_8e?5QNIB&`<o$?,W`r4%&UEElQNOSL`tMK%1W6Lq[.m[e'8B,/Gu'Cj618\>^Bb!SE&5u
%m\4,P5]h2HUaL;?0JX9+L^f.]EEl(k`VaI@68>@)BL?9haYKO0iPdXq=(2;o8+$9)YT*jSNNPV-f*nLP@RTqjEnd-nI+<ARW_:Pe
%e=2A.EVn/6UZ_O]@itff`mc4%r),46@uaDZY8G(QBnb5#.iEldFK.\#RK;OoTcg(C!&i7D3U`u!OI0aXAHTQ8(BhNk\&c3T<k<NP
%-DnA.AK@TLZocgOZ.]4lfkmTVnGmV0lB-<c!;@Lg'tP\3JW)QG`*rrlR;!Hf*WVF]\:Z1N#`2\Z<]mT*H;-XG#+sN\%r[-KA`@f-
%jL!MKA7hTeHLTVh5`kiV?`tJ8N^Ntk?9<\e7iB#-g&\]1-YLG7#65\c/gP0:keiWiG4bjHhp+np%ff5<i/STai'U?27eHc4)\C3&
%Bk?B.E:`rhPn.7kj'=bg^5kY0NiU4`9INDVF!DIH%P/S#dc[C/;[%^[@_`QI^RJA3^o=5nfHoq/&A,t"I/tjacW(>rYuCVXG/Lii
%kj8"/:L8[+l@EiR.1/`ho,ltj$c$jl2Wl?"kK92E7_B/_b2!q/G/Ba.W[=uL%J,'aBQX?Rc9cQbC5CpDU9f)tgLi[_#7&mk.#f.M
%oIUjG7_"Lhou.9(\IGn%1&W7%V+'bNDWp0_]<a)oX1n-JB]<PWS))b+O12<-&lSjOHdOMg_)m#9XM;YjrZp"s=-/r='*LcWl3RM:
%(BjtDN*K<r"@b"9$3DFgWOjZM/rBu;,8X>`JWYkrJh';Cl3[S;(PN$DOn6_I.mu!^$N_Lg`<?:)Md50T+rA3#!Ki<:Jq1r02A_0S
%,ST2mU<"H2E`$Ce7`\#d5p563SUk;3U<qhMOc)PY^rUep5sXM*dbo_=Mc'W^aEamRi8_K(i/3TeEeAn_H+cM:j1OC0$BF_@K>>KP
%bs=VTXQ\RLN/O]g!60<;6/^asmbi\TMn4PV`C8b%:;_GC_%ddL[0H_jMrKA>`C9I9'c%VI#6Ba@qLcT&4eA,baP.V(s,)^rM%.TC
%GlN<+7:!\D(Dl`H]:kQ.m*<'#N)2Tm%E]HW"l(]4HH!kBm@>08,C!j^T(TZY0\:Hd`LXr%AomUZj5$G!hu\gp;M*`KM@E<$L#e1i
%4,FEj[ehhmgV2_d()JnFXl@p,UYBGZ+g6%O4V?lkjl$6;&0kL9e3Ig!2$6i4(@7HGPLLin@dnMJ2\Z^%C-$PS'"dFh:8h:W)3k*!
%1U@Zg=$9asVq^ftq[pKI8'cLM,X9Fu^ZFXQX&uAkJd.IURi?@q\g7K.#2l9OE^ruZRH?e+,3!+H=YreVin8a6`%Lo/@tc6^=t4pb
%XMGH]kGt&i:A)5WG4>R[fBncnhs$2@>*69VLAEQ4EOn$>`<`E)E<M)F/E[#mdtMIj\Yh&7=3_[aU*0m\><d8=-$E9eq^u31ihCX0
%+rLb\.'DhJ];jcFDWm.c41fplPI@L?C_NmHQof5(`-BI[[p,sPmgCi+M']<=D2CCaYWak8)p4>^W9s"(,^.^?r^&_/iJZP1_KPNm
%:&Sq,q5nq;dkb,c[nlh!B'(]&)]_i$p(bPB]t"^WqZUURTj&jjCGMWGJoWq@8mSac=3p]t&<r'40%%s2@TSO+;i$\N/c)Iu,<B+/
%"ecClhRqP+WO/GTa#q,`+6*O[W]G8/=o)m@U2OqfJCkSg2-5M4q8NMu"?QQ>ia$"'i1Z6qBK$qC*.;[\>r8k<-5K*'d6R9:&Eu'I
%_6.L8=7/3*bsfNpJEZ=m8Un$3MGO_%gu:\OA^uuO0!2^V+U^//8U#,DVKuY"`V/&X9PhZkf8N1)P>&S)(YH^DpK+=fnB*#jpG92-
%A7'2D$g6QAL6n_2?!Bg[*q#NucK\ai<!>_I1SjTqNij8SP3#^[7W?a30Kiq_R-IuB*(MgC.],6?g//.BH?PlQ0iXgLU*E@3[8,=0
%6"GrI[\B2I\9E&lHp?/WjJiV]#Moj;>&S;sYRe>\*G&c]i:n9p%1ji)F%L&U?:m4:`(O5"gf[27WhJNJ4;@F:l>2n8ZEH;b<%+[!
%Mh^a-dFmonINf0\p7:?C_/S,qLsE`FM@nK,3ZENTc%edSBW#L(jI!_6<oj,B3]/uUX*<jN-%8EI1W5]BF1;$Ud&>1;2-j[hqRu9N
%nQ=2lm=YC;Ahm>$2pS$0\<eelL<r2SR4-1U('M4GQRso;Yh]!&0C:IbaMed?KuC,3:8Nf0Zm!(<3WmoLR\u(4^s7n.MfsRLdFHKO
%r\O_AnXdXugL\e90K[4q4jA0nh.S?;.jU6d?);Ir4WCka=m(MEj!:P:>[Z0B'+Z1X#D',9P=WVZYGY%),X-n<gMRl&+._4OkU0Sj
%!F.*XF3F^42co6chM?'#99r7O%4[!=InS!.WD:GM%E1R79@TrIOOuuHlD%g6F_&hQSV`"'<;W[JH0+e$\$m=1'C<GN*d#05hm6YW
%a-=Dg_B^MUTuDW0)s7[3>K)hKR(#3O0n<kVPW)EP%JoPqnt)dbR;HHH#K(=g6bEZ<::UCMbG5^0+`D`e83Odc+7S\.`XLk?cff6\
%`-$G\#BqD#$hj/,FsB@07_+(n,7&`XLl6B#`+YGGlu%L@hnZhbEX+hCUUjTkReoQsGCUe!>b=jKK8?qH6/?$Zf;?)5h))PXT0,KP
%&PZT,p5S<3KNp8AChZZhJbiP/W,BD%1.("2l@p`hbD(+'qWs9[SeFD/.&mZJHV5rf%Pge.:e,5p^qPbLKB=5r:\;&k6Z-k[,PI/+
%i!cXB;?L:pNXVPnYBS!+n([DFET>WtUZ_Lp)5&&V;TUlmD+GYX%0n%agTt/dgOmI'-1KW_bJ@s.BPk$VjVt9Z&i@__((&NG+hl@U
%)"$PI!n*Bk]b$58B`UBT$$_FBY$6!k3K&n,aZaUHfZ+2)"!9\2`#/b@_lL=:@)Gdtkj*&/ifImd@eG2&]WNM/gd5uOB7nnNG$V5:
%$g?<[)AG#V[/m]?qLP`NkA3?ejCiZ\Xf(!6j/au<Nfn9femmEu2j?2Vc5C+dNoGM?YSQo[;ApK^NTbKQ)dY[_IE;"#-8H&Ral_Mr
%%R8!6?cM*#=V$Kk/Q9+jeQZc*B[TBO$0<jT.-sH;C5g\(:XXfGJWt=B>Asd(DlJ;[G=RCKNm!u%eGH+:\o6@"H1Z4Uq%:GYXkc7@
%\(!^iN0^)DdAU4c\*.N\>=Vk0n?aaXrS1*QY0^mL3nW+I$9Y\$mL#GlHZJ)ZC$Xp/ZgGdc/@drqQeu&D%W]RJUI&r?F91LpkVma#
%"PqKg[DHt(r2TMOJdZUE9+BkHr>5Yu/p7Fka";S3GS9K+p<iS4K5N1[lNSWJV$:_T$Vb8!FCUHr#n!eH!QlYNO*WT-<U$r<7j0ho
%Q+,6Cc+>4<4R_U,Z-iHW]NO%"GBE_0qp?!^C?1"1j.\p+:hH+MX,rIbd*@Gn%Ar%/W+]%O233q8\_3aKnC8\l!0jtBJBZE'6(R%V
%B0::kPW+J4nQp)TmYA)l8De'C!F5,W>O3J&Pk1d;e_'phb%cp\]5@V4aIfAm[rd4uH_$7b+h/X26g=rtkf?&OEP2`ZEo34ApUtoT
%O!!rMm&^,,j;r=dcTg$@JY'XTdX(cf@s/3jb9,@e8;)'d\itRU2)gKP2&2pWB.E%1l2P"3$Sk-@n%3@s?.&Q,pn#Z?FjHZka8PtU
%WJ_8oY9!PQDApI?W@0&ik1fqF<M6RMFdFW"Ya8@$>kLFhdZd!6KS)-ab9;T4"0uoCBL7eW+b37mHBX/%+&`>ojJbO;6^T5GL55Fc
%_/Q5Z(2VKT8I"e`6!$uEURCu_aD7p%\J=Tu%<+#:.?u2g+CkmZX[W^'<#>UI6+Ul:#GR\U@+mmL:qRtpg1Hr^BHd/n>#Q!Zi2/0H
%>SJ_\5Qaq]npWWrW%SG,-Ec)P+_(LE<@W".`t/[rjfT+A9>eVYkR.Yo;UQgbMCu3@();ot%^&,-JDjX9HdX]C>q0Rd/1ha[f"kJ:
%l-qVj'JjoLcYTNq-5neCT2O6UFC2Y06'.M0#QXa02(ef=&-klB?"q+<]n5jODgM`n$FEmN#1]!1PjQmr`0+jBB't3%_D`M^!;4%[
%`YpC4mE's9Ub+QfL!h/\h'iKZJ/!*th-n@G?-A9&6,l)6(M5Nr<=*[Sqp`c-?c%!5eH2kK0*VI/Z0\JAUOjbHa,[R>]-is4Za7ZA
%Jt_nW_:OgZSOC8%P-%`)dE8]5kis8JS^^?BUDo9J@?DQN7DK+fU*$tjW<@@MimSs)Hmj*C'\fX@+5K7p85iM?FW)-U1<Esk0"ute
%FP9-WUrWE8HtF`a2Gtkmo\Z*H86OdL#o?)n%3Z0K6h'?<@0`(^n3C:eakg`,fL"Lug-3HC<W&daH@&)oPllC[$]/N8@1eHRErOdf
%"q>`)aA*;D+aED$C)>fTB@\%CBi#)eoB\Q8,k;+<05L"nU4enJU"o`nKYM;5Dil"C6;YDL^^ET:$bUY@UohdhW%=Y;K7?6D$P[Ou
%,I6;d7$qbRoGgmt;T>Na(@RGbn6@,KQ!(B@eOi(tJ],P7QF+;*#^SNH*&1Y..>[l^pHWU6r=I<\5qU56*6LX,<Z6+(3JrCK_=0?S
%F.AUGSJI]H:9^WH9[psg4'5`G[1ODDBiqNA(-FqRGPtt^!i@sfSTGDs>`7g]!Y5.tNP.a,j..0gR?p-*>3n@+<9re]WVdamo.0hF
%ZE?"=RIEZ8M0kF0K5f@SR`&hYHS"h^m-0[>DkM\-)e]kM/->J>:qU=)+:2`V,M4(]V&p32*4BH@ChXQ6kY_jnYTjG!Vi`+.,AF)2
%%%>:O<2LDq@;ed1)s)ucVF!sc*!S<,"e'USbD`G9aimR+cd2d01U)?4/d;jpMsV+")Vc)Z_Oh.AKnr$4FTuQGEETofE^iX,DOr4N
%jY3@uU&^[6DiHt83?_tTY]hCp`-ESqJCj)e-g.UV(MGScIlgpG"CWlM.5m0_*qDS+V(j*g8d1h*bf(6ro?oImfED,hNM5q"FbgJB
%"#XGqLCKnu:HB[&-uHEVRTa:$Y/F,XL"qW?Knr7J:LuY.X?+;/*/([A3o0W!;CX'C#n^bTU"K/;cqc:#;%Z2AZOfD?!J-9V^tCmd
%Xup:pOVLmbHAPjXV\&<lg9\nZeWE2(ik[kpG=Y.t$B#)S]h'.-hD\fT/8Id;,1LmOm%/#k!udpb;9QqGHk`u_T`DT!67=ed_5LO0
%QO2cL!K\,U\I%p(=prRi-'P2eDkf\cHUWo\Vc*R\3[g8,=[Bj7ec^sQ'antQ)-k%13Ai"1E,R=)WN.V4%_@ZMGieoi_46EqfI)2c
%SdkO@.bc'iM++"#q4bl3KQ=)h1S0,3QF(*QZI4/Q`%h<C!N>HV0E_kD1Jj+Rb,"g'=DCnp^(Q0[ep5,g)VRl#9=b"[g.8c[ejT.M
%$PZrLMC;HmVP_'END4#$o'&+,1e;If[kQ#U%+;5..r;\R*=Kg<e^C_F%2-np[_"(!Xs.3%Z@uMu]a=eRCtM_^,WP/s/q)6C@='U>
%hcQ8#RlaY!<M`E_=tE[?8pe"GM,oR]`a]o:Y6rD<:#TVW,@YQ:EO,3P(Lt]Si$U\o-qP<Tl`cX%(K<lbj"0&5?iDUE>JT3Al^IKb
%i80(DfJ`WRd02:5WZ-==0mU"6^auL'FA'TP6.Z?#ob61eUCX3Rci^]l>Z,=GC3]P(P=M-.5OZsn3r0Q0!/d/fW85UOEXJj>8/fu6
%*AEb(&(8:uajf<S#T>$U6&H.&.`QBuqn*$H:TR9Lr'16-[pm:`4sRn^*JZhNl*k1V]rV01X0Ol5UH#mRLWB.Bagaqk35`jZ!R8i4
%%(f1&>)h^J@@'Fskga3Y03!fu1R*T&"f"\Ac="Ep3Jb!bafU:caiZ!j>_.XFWaD6tN22BSgp3].&Hh8_C),.uH8_"rF,lrU0r][l
%odCLna4TR;:9R^q`"6<D*kn/?r-0b+KjY+H5H0Lj8Dr8?$`$!RS\\QLer>*NV;]DX]+f<"$+5NTPRd).!&S!G2/C]6`hBR4>@$C5
%X$Oh;$0DB7('pdY>Gg7p<d@7+_1ApU9!`,d!jOYJb7/$rpc[YCJis*K%`9-4.6]GbXCZq2f%C+hoZ"0UdV1<Znb?3_%pI4+VG`%@
%J(nWp_^ZRmK>W3>.Ebu3SQqmCbG9r4^n"=\<9_'41F0`K%Ef)ddPu*\Z9ZDQ;GEF5?TC/jr.R]F^a?."-lor7I$7)RbABQo(:SUE
%\lJ4'4Mrmjc_#ct2tgt0R\R2ieDhd>!8f%t';5%:#2rTki*h-BN.g9>%D.L'%gr7b[2>hnaA,lcJ7WE$!u0PbLCGrAb@WQl0tXBQ
%(sRo<@Eu](5W#Bc>]kXoH'm92(qCs<>6/k2Q;SekRd&]^U7OW,^>R#k1dlI_)KqQ3$$mF-^3Z._c5(e*Yl/]574J1<5C!8(k!\_"
%iHAI(3tf0l,c*liHHZh`MX+o>Tu$?>H9@-%O4`73(mcS'.hE5#goPfCR9J$kJoEX--NVZ*in`TF(t%7^00;=%1pp):X!fQeDT86s
%=6,/b`He281Za!D_Z9=`jb:cLO.s(V`&FIWnpbJ8i_g?5cDi#aXuu.Gku]o:)dfIR4-``b4J?/e)i(Il57Z/8&Em_/lB]D7F;0rb
%_['mX]0C++`o9P'VZA"m@/[Im&GqR.bN]MHKdSX$DTd7RkFk!MmUIfN>&=9iW2;NgFd3Mu>`+^kEP2as1LbHJ2d71h6[V?:PpScX
%<K##3O<X,HP_2f`+5Wn*\f89YPYMCIPHr.B*IgO*mtFfA1VACPE:/!D=;P#p9XW<-9QZ`8`O^?_TTG@(K>9^Q2")h$j:279G&57k
%'L[Va\"jC!a(p='Z&h"6OeF*-e='nQJE2ML*\.kD]j=J\-,3brlD[oFX?u$?:DdDjqj9)W@p:"YL(!<W`tAM30B&X%6s(`,8^"L+
%>-M<ch&1dC1a";=!M@'(OK(_&;nLIn6Idc,bbnkEKV:j`WC_;Ii4_uHEs7C/^`Ss9'K>II^o<WZCp`EW0!!:V$gd,H$Jt-Lr6_Zd
%ORRGPJ"\-pfH+$$g=WAr9e8.P)N3>WC1O<C$TC7_0J4)(RG4SO/J`cRr4pAV4I=:N+C<+3#$!1K_P$7T+=h3bF>FB-$'j&=9.N^Z
%Tg9+:[77\u"Q*!$-Q9FI\9=oI@DioldZu)h$+GJ=/q9B`.hUdL5ZWcf\0D\ZKVk'fEKCrR(D5_UfUh>(3qM.4na%sDcJd?>(J%F"
%TF/qj^YG2Y=EbU:7&16:_1^4]+;)D6n?5aAr6$UO\S5#&F[O*_YG*>bXU2C/R(%tbiQS25X7?<JVT)Yo3C-1iB;:E]l.U5_6srX%
%1X"hJEk0BU;Z/ns(FnUX0O\:0QjXZr)`Bdfj!#fR36#&XJ6M!Tg>6?i!50G9,=!66,qF@!X=Su[;fqQ\<?'\6ZI8#GL&Hk/;%.Yc
%Qt[KmZamU6O(K"7B,L@n<];:;LhK53"J/QC1Gk"V!!#?jnrZ!igIqk<Zf2_,WS*>Q*."XU:EO0V+^2pjY.OqXoQCX]@T1^oE$,4C
%jN1Td\2D)RXSZ<Y\ITpS6,a2=27d4tRE-qSWiTAVhY.":+p*0M2);rR`He^^l!RiH=61gpc(>N"e"h1J%LkL.E22E3ER.-,pZ+(p
%ZrJM<,[jelT>:T[Zjtmb`M3)r!Q\29BKr#$L/KASZ0[U_#ti"Uk^-=dQ?A.[JomGcZg$&qGolg4aH8#H&@.)l1M?foi#s&`h;0*O
%D)Bt9&"SjD'"->C!BH%k/#EH<H?hd&Om!1<UI0MU+iqfNjD7pE*1Lhsad,\7_7SoA66dT^&DU<oU7Ul^cmJ)rGfK`D"EkggcNXaj
%8n(ujKgdBp.H$%XZVP3JmYHu8gFf#>*MTL/fqO0<c)X:9"QhIe(J#))mkZf'5bKf\%V/]2pKUI+d1@2Nq*;D1=>DWTLoYOi$.9@'
%Wf6]b'EKH0(l22FEu&P4`#:oU$GXMMNm3*ODYI8;/S8K315:>5+i1[B!5tK;;5Ra"UNGc2DMWG@+&r,FQZjVZEA<\kCGmXpLHfEH
%Sik*H[5<i_$ppZD6QVn#["6n#;kr`QN'0`3S@R"MC$$%J[Ym/L(3(-]-eP%7D90jVj$-jCF&bUY0J>N)/#El&"CuSaOJ$Y-@im6>
%>Enbtq]^rIN2K<LiW\IsbkN@0[\<r!M%3c&c=^IL#P/oVm(^ao@$FN.#m-MJN?GMY_)VN9gNVmfF70?u8K`TVW9DIIG/RQ,&W@8K
%"Y@ee"?GOkU2=UjBIK6ROa.TYNpd5)A3D^oqjIeF-sI#U43[B_Ad&e$=c'd_R'ie\3R.J;3oKP$oR:mpXIROBSk:2<)\sPu)sS>5
%G26(;`N5G#Le+6S:3WkWHt)$@.?11Jq9t(K9m=Ck-FHc2"]Lk02DiNP,.`^?Mg_I?g606jJrp7o!g/A7]H0-:-V"1U]t3+fU_;?X
%9u-/tcjp0IqooO3C_i#38Omc3kjtUi*27bZp(O]^geH,?ic52gl"-JVBIot$<Z/i*d5`1oraqb'TDT]"#9^F8aA4=TS()2)WeM@s
%JC;)Lk@_8*)!5Bp.9R8@Jm.Ms:7)KbGr$,4eGtI?bMd1l:bgm^FBHOdp;>m;d(US6+,(DI[iL><74nr-Z5jhn7UjAiG<V$0jQ_S*
%IDuXbf$Kqp@VQFQ0(c^e$m928irU&B6d):2eTa'k=X[Oo8n,Q[*4"E!]FcT0!,>2.3T:,8L%.2jL^@IZ!*lJAqk-4W'EMKJ(YELS
%%%?WcY`%R6$IJ&D?+BqSe?u\k^'_.5&$9"Zne/a6X@RJ'3:#;O<X:_G+`*IZ-Qag9G:Z@;!&#7;'HQB.3kbB$OX,%%6>A&PKY2nm
%@Hi'8R.dTg%tKnT5#;P4DZ)^ZN6-YG#gt2g+47"g5ZFtgWs;]KR#=BfKDDZ9X-l9P0k/Uu6)46N2[\qg`TVEeL=RBR#p]X`Zhl>t
%!bY/:NhtDl/m(\`P?8QiGJlEWC3<K@O'jsP3D!<$&5UJDI@!9B*dgX^$k!aqlI?@JfU&\$3XV/Wa,e#F+B\\3'YK4W9)o"G+E,%l
%C7:lZn@VM/0i*`fHg4e[6Wa>&]_&*MEV=_$)g:<K.E/#^aHI:'<0;;AqI]Q6iTs#8&0N&K6SUOMNH#/;N6/-#f9;]CH&JZ!\4bO@
%aKh,7q<ikYFa<?]DR-!*N:srE3M]IlTNEJ`*WfHI>&7*_*B!\[G!4$H,1"o-nocbJFDQqU3)\qdW(FVQWQ;Q(/aeEH"2cfoEYFfi
%J-%%KUGZ7CSN&<*[Adu3oXJEH)C7uaBriOEX1:7i7WCMWeg>M!d_#dNiCJp2U.cX7J2Z/qP_fPTRP@aLCr?*9O!3!m6JHmnK@iQa
%TG.&TB?WC>aRY;=7Ns<eL304!2*%>M8@i%7h2P>Fe@*M-R$3>'+k(BE3VTi^6pUa`[)RX4`:.U,U0-ak^NGSO=<%bE<m?ohZssc=
%K'-`[B=)MHd`0bG'_$;i;k+9XH/_3Q!eIS7L+&"/N'&+j(^@!K"%1Se[Jb1\N1;:Tl:/`b%gYqNj;p-GaRLjaf_^7?.;3%0M<%-1
%!-i)H[g8OVHc]RW_e;J`;g11_!+Ia!846^=Yf[0;6k]GHEBP"o2-)k:DeD^gM2B:Jj<NFB+j?YkPBY1T:/dPjYiGYTopnt3fe_&,
%g_:-l#@9JEMtRV%_9eW1,T@9O;Op^_5eA2?(b/3qetJHK!M&[9]L>/E!9ie"aHYA'@>U#m*\8Wi1&p&E:)ZYg^:9?0b.L^g5gd4t
%[WP]c6tERu9r5&r:dUnQ6Nn7%1iC0V#uXf`s+"GnkuMs;495SaX+36`JpE50'$5mb#pW*cBu_VU9QMJjOEX#RHp=*gWj!pE[]ue#
%%:UG6/uZ&51P_Pa9<k;^2kp9+95PNj!V_jc3m$Bg%NJBTGY][`)g8bt$ItdL3Wu/%UPJNR%%36"M@d4OE$cGKL2q.Y&X1>(!kj,/
%)Zu1\NfkQiC,>@VYA%ecUfooO?3*3!k,4S4&$N*N_FWk0TbL6ig!iqGM2W[LWE%WbVJ]V<$@se%TeaZ:5Fk<GcX@+*ADpb*`*2PS
%:t#u?nCne'jPDd5@jHU][l/t+WAnpph1!,j&h'Q,]fMiOYX65kV,rT'7D`OG_;]kr9s*],LVdDOjmZsq"p:Zd]S%0L;-5WI]d/E5
%SAKQ5;?>co'$:=gA`mHbV7UNfHRJ+u=Fj7Joh9aD%<o$1St#3b"h7H,8D1,K4&0;R)IF>&S.qMF&PWJ:_2^DZ^E=WM_t_)oM99(c
%cQEB[p_)[o`#9)C*b'R>m0"Ck&-_*qm7NMVfH_e*f/sZa1fg<to\&D9bl_5;:g]"9b$peE!iA@7M!Wb2C.KP*9Xqr-XAD*TW&n-]
%N*7)QN'ld!4rh&d7OGNWJ-jo>M$\ke4FdFQc4LKjW*P;*@NfTGaOAogP'@7W&`Hmc4GGoD!g[u!8%\o!e*+M[s7KjS3=+Oi&-EiJ
%C]cP&UHU$GNMnc]X@RG-5/8'B$;Ptq^8WP)\2a+-'HgL\)Ga0F&4oFk!7623QXr2u4W2fh^DDAM5c7ghCeng6g0$l924um(<KUHQ
%<hI\Om?P*>%GpHQZPSt7iRZgXB\BU<A*CebW6<'>8U@dFXhY\`;a_dkSn'j(DtMKTeG9$b5<3?sONsrNn$Zm1ktIloD#(6lY#?5Y
%2`VW3fsMD*S:UHg?mlZ"*IAI"_`[o#)IUrGU.r[!*^-*oe-g,-\AKjloujoM0m*^``(IWC7>WaRIgMZCG4)4V(`03+Gs(HiK^1u-
%@GjDd<!WU=ANg)*Q$\7IdAk)Nqrh\HmSVdnfCoc#966@`X"d-&W<EF0go"a!09Z?[IaaZ$Ul!KL7F\n\;>A6N$KFa2!S5gNG7G!X
%LQ@5E%j`S2k]=0>'ikpU0Q47o6+`iN?kOGEde)cN,A(0?T]gqpKTpUQOE-c3-0k/#.A_Wr4\&UaGD87&BIY-2K2Q=LRqf?A#fXl+
%&BA>/pE!g5%;D]*-\k0'8?7:6.1o1ZFWX=?,X<J`pViH-B#0!f[c3>&IAd;9B0RblSd^-6^AHAdIJ<`A\%fZSg!cip?G647bqIt&
%pC`I(CX7BD'GqV(AfqA;nAlOb:Y)/6_i:g-S3#n2E$B-*dSD)a)h90Qj,!#OGZH[_LtpO<+0.`$Oiu1EZqEBiU(e3EXGl`AWiQ5Q
%Hat\pW(BgLR-EQ<a1L<Y)*n$.FhTs]L-=3Z(lfWnMe30m:[!6^IudlHYnh#/F(s`P00/s=Ur/Z@jrS9MOcb<KA.lb\DpLOfEJ9bc
%+A,hh8@;HP,V<,LKTV8`qR!2:.PMbO5a)r9;2djA%0/OJ:"[K$5_;QIQ1>%k"GGi@ZgTnVkVDS8$a"bf:J(p`KE,@"^QX(OQ>,<b
%>2)6C!4,6<^8e(CZ@Fo#9j6"3rOWL+@o!?-0QI-2The`HS2*4R%35ZOM^<6#9o'TI3+WERAM^?XXO0BB:rC_@Jn1@B\9gbhS-'4b
%fMSOiO4mE`cHmc$5l/3"4dp+DT_dTKFsHY+h(U^]`Y@r135aS9>.@/4Z!_h<[H;-98cK-*pi.4/B1V9;ThHPB;.W`s)?B#RlKQ>L
%`a0'?h%.u(0GP1+5r3saVF(]>cQe7*+[djiMr8SSgRPXu:dDONh8"X18KZ5Q47&4ko4>4mE"4!1@Ges4-`%%*e'kWs!*-gFj\ick
%+)61NC$@o13YfKQFfImGc6'!DM,m`+HQiQG-C/)R@#klK1kaDC3<2GT+h6F>J&iU^,>OS5d*ffqB!GW(*6J<?),Hlr0^UjEL1SK;
%9?q!tI,<UpJb]MV$B]>2PRmi5JDD*sTcGRD:ff:o17@4o#ItMc+(2@(Pr0&ZK92fIkQhUbLPMOa!>M:;dmY<b'6\Mu6#cmPa'E7Q
%%l(+san9\^W8U=["4IpVCYi&k=?QhDp;!ETTV0F918P=d@^AKU!QNO?F&agp`[^>fVWs1(T6TZeiurID5Ccl^(PjffE0$RQdUFqa
%C?6_nQ3'n.9TZg%^3=9#n6Im2U003hC(N0`:BD6JL26)&fecinRA)Zq_?hn4Hu'uCZ=5Up+T>5[N'JQ6A,T4b1mj=TEeEP+9h":f
%L-@prYip;XM2dI%=$r!&4Jqd@j7h=$1E?;E`ZDguND'Y-oU^2;&Gq9%[riN7rF5?/qCL*_n_rF-fIrVJMkTbJs5IL.-+6-jUg[YB
%4\I.6faBYp^Ki$S\SiT'p3[A>XZ%#!WeJZcWm$_)Y!UJ,X!TnQ@[mM(a<6%0`Qfq`2Q2!!i,oRdN#mT_fg5bc`#)>;)Y!H3.]p\`
%2XnBphfsZ?UaqK]D-$!,;4?pp`H<&LES)#'`0R-Nf!K]41n&%!;8%VV>?Huf]3&lr#luOj8Q)WW;j3J?S\n=!J.P*/cGSmVJ$Wq.
%X:W@M:,F8Eb[NFlPajFX%%NE`D!>i\-(2T%<C]!uCL($?5arJ.7i@\I+;k1IH)pk!L#phlUC?KMG>[A@8t*;a5iD`Egqsd3:.k1Y
%VGAp2'4U%q:nmm,9dCk/pNib^UuW5b)]JWMZmh;=SPj`p3(<e%XN<aYqIk5he`(sEnb?>hjUjQ[N2%!AP?$9>45e,?]Jhn\=-3b<
%XChj0MD\3&SgNl+d>JSB0MTud):TS=)XF$P047o`2n,29\rA[$C#'_%@hJbA785I(Z.'b:Rj%d7.XR=>N`qd(H)J&*go?)]')^7Y
%]?o"rcugISc02_rN0[TrP9I8M#H&2k%H5>VKgaU,Xj3/pT/Dl1cT>4E_*l^0*dKX*?aB8T-3^OQ`Q@0\9.DrT1dn6;#@RMk(-%c7
%7j:>^SX9H]XVtZN=LLf)`e)(H]+!C]DMqXWh6R]8+K\C(HPDu,bD`9M7=Cth@o=jn2BII'G>_0nV79\phQ\a[M+3/3m@0V8;0HW+
%8Pd5Za3D3STIUnKnfi<M+Y%tl7K=]E(]5CoJ3@>,Pu.NQK)L]0Z""a^>LG3#bpZ,Q<fLf$=bf?^0ILfS#HVW%)`Cki^n$](];i%Q
%)?dGURQgrM+0f?eMPEXn,8tXc`,#E.hBrrBN3%"PG@atB>S&%rTJ-ANBAH"-#gU84s7pZ<)^I,amm@H$Q#^:fe7`1m]sgcSe=$#=
%JNW?#AOUrLb)]B[$!sc]W,XV($aua^OmF/a0gcXSDR?Krg,O#d+bI>i$#Tsf;g1imBcJ261:kA?r3!r:5-j<);(=h_Q"J4l+:?$G
%QB`[ZB-Xp>[t\Q8@#Z(65A[[ZI#dSg5Y/FAXQAjNT$[FD(#2La4R[ZsOT=[>F42=4=R#6a,\DTk+1;Opa(m$<a(]na`JidHqH;kR
%jQ^SD6%PrQ[Io0%44`l)S1SIJ."O(kK!7qc,JIFRa`h@F++R<]=_^BA5[e\gR8*o=F@PR6P1W(A.E\o+Xh'JNpu50/@FQ1I38l\p
%P/`5L2]f0$@4ph`C&KH]2N-P[o@9\A613pOH=7L4(?0XteK%SJA&H7F3:X/U^9)Y%5%;rBk)6coC]QLF&>3P%=(m!5ALX4>h30s=
%)'94NS7MbfV-Fp#V@J6Y@&_HJFL7QqV'/u+5;i1#.%#FrXP%FTJRlBPA*,Wn!rs/NUC^@G*ha[e\q(uhA[tS'$=[_B7);s(Q8V'f
%2Y0+nOE=%$504WJR\oBF)\J&f1nnEV+YFu(WY$8R`Nb:*EKZr/lkV"tKb87\%PnP#&?Wu].kFtbk[Nd+<Te9>kKlHA4J^jSl9%GL
%^]O]js+178*XEt8"t>NEoZ"IVP\VM^$@uP[_/D^"OKX&2Ut8a86o(%n>_grW>mo&DcsjtM/+g2:>'#rE.ni5#O.8s\g@)t#_Qe/p
%OJ4eRM[V$WibWkM/C4[DM@H-)G2?&I"mj2eNOt[25Ou1ecF)tu0.a%c>lDJoegeI)VTXA>!a`P5[k#H<!2p1Ld*tDs*P($<[U7G>
%RQJE*Npri)^c7=C<M4Z#.gPp=bUHWl72T%01-r6dP/<mMQ=O#N2$5IBUM@qPGigHcYi&&B_]#ANAO<55f5JpQ')-`,@!Q(.!.D\4
%);.qdLM\$P@`</[,F2nYa12hI_,j[-\Qa^fNb%dh_CZt)Z:.7Bq.OQ#agU-5d"Z%f^06t][Hp>)-BM/<_f[!^ff>,`g7Wih9kb;"
%Xm)N4YkL._]%]1Q@:g^g9f7-9)pDG8+VQkNcZU&?WDfKZ"B<k,`lbb)lGMN?Q's`Ej0ZtI[+5ZT2`IgZSul5'r?q(CTVXC9iJEm@
%qe=2d_mn]lSm=.Q>`)$mp9;H-[7uK!C_8YV_F(Ph-/Ahb_SkkB/',hhJMiGj>iWa9`j.KnNB)W2Ab=ha^dMNkq+0_?8-EJ@O2EkT
%5am;SncV3)jip+l69o.M!:<BOa+rf+M,:)UeDt3u]:/QUDbC<VObM@eCY2k=P$?ae#+&+("cP",)X#5n*&PR37MHDO,q8sme:rsH
%\%R<t!TO2\!dA0")>(7I'L:-?T>4_TX[iD&R*3T7$5)S@7S?*H?S"P(_G`7fRQo1.*?\c\O<I*$$YI)BB2ULg_jQn'c3(OAiq-qh
%'tM,]]r<1NBXSB[8#,X27HG[P:<9c':1s>j$l1On=j.qV`_8/Z3HI<@C5tl'%jN^X<crN?"+`>to4lJb/MEXI\.,;9R/j4^`l$nm
%T!uW"\19="5RMHPletZbc-<)sTcJ\bT9b,WTa=&ac8_I0p8k"dXQ<de6WRts"uJ8.LJl>cHn&=P&0S`JNErO06#MM6'FFA@^91oO
%mDY/2ELKEqi\sFS=&H%.qUmE#B!WWG7,h0b]bREgROsNB-8:'-JMtI!S4u@M?9?4(.u`OTNio1_Y%ajn]3s';cErk/k5g$`\31g>
%#\Z(jX#lC6R.l=LR:4\!*IQt.7@RFQBZR@.:'o+&5T32C[.^dT1C=n+&l\;mEr3R5e0h]F1]B:geO*O.T0\'ZVNqUAiWd5[J:QsV
%c"/VlWEFU(0i0WN+'Bc$%$[iaQ-6a^VlU<nKat&ImETc;6PJ,GkrkdL8>WSo1Uk?2dK!78*&`@2A+Hirf4kUc8>ph7qIo>*hN=kc
%-)N&EZ"6BlA8pHCdaB>>BrWP9>MW:LKXFl3]iK'AWMZ[AeR\.,WEsarJs"AbHEBpJZlHEaE;O<(Jc:\[aEa@C67@=Vp7+gjWCssI
%ruV%->E[88'jI,l>(%fc&lQGk.Uo`RQQ[M[U9>=M[DFW*\N4\$K*YBBSRsa-N2Vb^JgOW[Ho8&93*&YP$)_/[X-MBoN4R"eenlh3
%5tZ9,_rs7Ce:qhM%3D_qD7c["r'9UN=j$ThWc/ZmEoA>HN'o#5V3iB>K``"jS3c"LZ?AjtT9O&QDf+s$Q5&;s8i9f6@#q:!RaKM-
%[tBD_VaC7H<7:7/dq:pocd5Y(:?uMr:hKRA1?W6R]JW?@Ot[:OE-3\!\[A.Q5.RB\-U1-XrGUrf57D2tA%(HJ,>Ia(mH;(KJUV$%
%``,]C#&/,?G$-+NP7_QL%U9gmjK^W:l'0<B9bk"P)3[/V/EmtfAGGC+hThGr:KO\=FNO$pVJ_4"foe.LHtn`hj#?DW\WZKp.`LtU
%9'/^E"]I1&*b,@NEb=kAPpRC49B05e[M/1:K^Y0O\JYhCb`N<q36c-384I#:U,L;Y>RfG1,tL3macB\bZ0jY9E\/1h^9T!8U9tCq
%NXR7Z\n00H>V/["V+,(j0+V\bY(fb.@cV,/mtDPqLf%aN2-ON<SdSS0"GTl'S4ShT(s-?*:1Wc&1tSTm-?,WB)b/n#PqkX]gkm9]
%K+FB%hJVP=>;>gYB1#-YH#>7qAtZXa'f%].;)/Dg63as+0Y(jbaDgd9TAn(Ibk,`9Rg,:'<+D+7pZXB51C#ZtLLQo,Y-qggY1=JP
%Z#&`,!+u@D0(6JkraXNe3T2flS<purfoNh4bNP!a6oR(!0n3A$o1fk45h<TL0csm=)I7EDpiocXU+Wgn_h'&WHApYnYdQUW1%51A
%<kE;l0AF%T.?@P>cGg0OnWQVcRALJWXQjWB/*V(bAB1pei94FUNb?s#WDagI:;`9<VISD-eWVr>0i2J<g,RD5Mhs00SEH84,$FRk
%][9t4lNj(lY*2=W9V,_r`0Dk!1%B4MpVq8J1gEqOVn/f<&=Y[5r*`kO?KX>glTYgWH>'IQC%*q%nZr+ASE3j#[VguA=ra^)Lnn<i
%N`A,AO:aiF#^d/CZU8llL$"c?L'Vjq3Mr?7AD-307QW7[a31EmS`L]a(eJ?GOgZZEB^3?LNoQDt>#''RhNSZnYA#\p1VYYtQs<C)
%N0"2mi18[@2q#j&gDKD[#%NnO(c1-tD@,b8plDZ8'=%'oj^1ZsCWpctS^eS#.=B2mV_K$"D.=_YL>,VlbScDpVT[_?W>V)Nq2E,l
%J]g*FEDmS3L!7&@ONjb`;&bM\30Q(Go/^NA6Y&f>N-69&mX$Kf:'=$T)&EqGDAr^=LN0e^V,J3Ui/Z3+@5):.EZ\%a$rE56!aYM_
%Af!,m`RS^mS@oc@F2TUJH*QoQQ7I0!2%g_g0!86[j4)'C%GI<[F)gh_`5PEX!9^K&`O.2!^kK8-R+cZ9@KaM_l-<H@K<$$kb$%ID
%CDA3Kc<WqjEu*Y:E]XPAE+c92ZeS@mUG`6P0OlX<(IqDQ@M0G8gC3Vh=%qn=@g64YZSF.G/&k/K=Q39,0cV"chbq"BEM^r$m?N=6
%AT]cR7)^FB37/UFUGm@b@cYuMj#XL\ULq9")C3;#HtNH63/W-rZO92V-s&.=N01X'%^c*\_1*8M@aIu=btd'"-!-(r(r'2WIc_u[
%Q3MPJ@SU*+a"&rcr&bW+f;\"#-RKVd95B9A)lHgN`J'Tp=a9G@3\>?X3XTLGL@'kbIj$+mdF2l-&jsPjP@BcppiB@Xj3:,R]-5Lm
%&J?=>LB;5R,Ard__[@D<A=R1"7uZ>Mq9DG<XTFm4Ko?ia)@9]/M\m!m"EU)k(`YG.=nDCQJWqQ_YVHdmG)=k,'+pG/[+$T:0u4[s
%WgngR>-PhGLd;sgeU8Sa#4pr5K","LgDPg`)Tp`]-6Oqr;'lPJ0M+TBUcA<,I]$2Km)+)tWLf:aB8ni2ol)6$r0;N:f]L8p4'\.Q
%b<\3pLjdNLem[Y1ZIXZ5-6&3'H>ACBl6([c=3=sI6Lpus#*=M`Tb@n<"$mRN/)d^k?@6i>*6(=D?cn</cl:IR[UGD$['@`-iA_fe
%Et'4K]"_,PKDobIbqtA\FQ+0%W;\D#_cXQJ]]q&c!-B"43)QaM.Xd!Y`A![2Z#Bib0_-I2!NZ^I9.?F7"N/=F*?tiE;(/g)KsRH\
%0.S\rX@[,A$%ZKZOuKf<dX>B(eAB:EUV+^:Ki.Npeg;1+h\TU-(HS\fdb''^#(s5s*rD@)(_s"%0%ufAFf7ST*5BgY_Cfps@8oOd
%hr#0V+a9Un?7`dn_'TRS!Z3ah-@F12<^)ZUa:*$PZO$`#6Fm_@'0Z\L.lV:]R'4H;31KE`RHK0'lZBuK.ufhBH)i)fbk?'d'8@BZ
%hbKirFlm&@KL%g/(+5jiQ>o:R(f\AjE0_Fi@BAQ\$6int#Yi63SOaT$K7T9qOYF8)T5tYP+(4\0HGGr%iF5/a?AO9"cn'#TiPUKM
%S44@3Rkh/u_MD;=B&t;T5kuD%3/92pd4t3W65V4J7kq/$#_T..PuM'RKJ6@S=8q.5FC?m&@$ZO_nMbFgpcWbTKq8-.8#;1f%n?+o
%8Xp3Sg,*JbV@J@Bf!Tspgf`EqCXsU<#'^csSI9A?$_90mW0TGBYQj^$OPf+%NsA>c_o=]hJR*eHFNS"hS_Jad)1s*&gl=r,3Q6m7
%SM(h)JD@;D_*A0c'A1BXb;)grisGtsYuQ8AElVpV(2!u/`hO&R%)AtnZJ`S5$u6q>5o1_78:!O2$236mP2Hli7kf*)5+#s5+a%S`
%DF56AC#_`G;ZuE@.&.#9E2lrN()4U#:FJ*RM'4hnb;9Gk0UaF`X9"J<JJ^nf&-Pq%:*dRc-qgZ5"".,F[W01q%)`>Xg/"Vih7Fj*
%JLR"th!bE@7m]"a+'9su=5!MeMWH:r"Mpmo0:#=@._]H:OZ5W\=`6g!2[$r2.oiY_"QLRt\HY>Rs1sZGKcsQTJ]lgW_0eSfI=`W0
%InI_]]\16oZiWU-#\HPbA&K7:q1ZmpG@:bHc:[\<`Xn)qFjsPP6a.%$VW5r1_+`H8+R'<N,c*qT^/G/U^B)>F0,274"KI!(+W.\a
%Bffr5AtKM)?5S9Ncsei\)1oEh6+3>O'h"LMJ*kAiXPg7q$%aVahD%b:%#M8V>o818XNU791B\pNWaTLP#\J0UZ_(lb?mb5^?5Z*a
%_ahmV(9@=5;f\W`5qof"'QC2P^n@\Q&%^3l@k0@k=RSoo]UG2I)F#pFNQhrlI[4PV2`WRD62\UF%Eu&Ces7.30HPpuW[g$t=uJ%(
%)L*Q>>RY4PA0k-ei<;\-;E(%#>2WPJr[h6'+b8<n,mBmnpXh8s?jN",d3sQ'F&HlmJPkX6osR<qbkN.h#!iMglp2TNL(K`uSWCJk
%Jb]U4/"I4g]VPm`?MK&;'l=j00Hsq!3Z&eiIb0&-!euMU(o%.%%u80na951_<1.&/,2bk>5YAiqXKd%DDm4Tjl_Dm6Ssb,.g;pD`
%9Yc&M<<nNS?f5cehd<=4)9!]/0.*ZK.6p#AWIQEO$K4\_X>ur>K*k_E1iid7Yblp$]M\dj[Y]0K.U^gLYq"Ec$UoIrB$5l9R%%7Z
%o&*cgd/'8Z`WaR&_eR%E(GMZkg)Ch^F8-#d3u9RRb[+PaJ0B%B@<)BIJ7+@X!E6cSm*8kOKQ@b;A7WL2&dA]Zaag'_#`uR#!@u)E
%cX6ie1G!Fh#+Vuq9.k%rO>=*"CqtT)<Arc'`h_"bCqu.\k&<4d$4nY.2IHm%:!f:;(^cg-a$p97gGc4pCr"i6*,=iW#7N%sMk(D=
%OmBF!+9\QlAaj>!@$Mp3@YDP`LkV6d#RgaeqCdN;h#%5p!%.p#Efn#)&=C)PE^66'J[J5Y]XgQ<N4k.ZYWF'`E8C`d?5S6Mr\eA-
%1'4@g%*cctbhjDuB1cQ(JS9!p?q$2jbu'T:NRoDfl9YfYY]65uKU$L0W215mA-<B-pk9<I7UXE>q\6i'4Vqf)3$U,W#EEn!#RkEV
%h5E+26XhRui>^V)Sb(X$^hI^g@?eRoN-g7<,qt2W#Tp`X!ol;k-?Dde0%l[K2VL:G60"7CQuFWXh`2o8:=P.cB*?5t:niaR,;>5V
%7bhp@^_gRO,#/E6RVb-4,m7iE&<SM=#gAjn1g+XJ^bjuc9m%T^:7d=R6=?'p3oJ&5s2c^?Q9>p'^Zg96G9R820XNI+i5Pu&6XZ`@
%*AF=ogmeikSJ/3oI)$;4e[k5N1P7n^ciN_s<\`b><^C(o5%%V*fkmVhk58&a:E!M@2iJMiKC=oc6a_s'!AdH=HI2RV2pF7aAAHQ5
%QKP'Jq`_,S"l,epNd51;L@?n>hPk?_#GXDsJ0</g$SZcXPaCPY^tn9'XUT_G9jB)s]Bp@"%)="R3]$hrfFp.d`o;"#s!<lsW\3<Y
%_Q=(?YQ$eMs+\b-J#=mB:?i4U>Lk?rR=@`U&9TfZb/!#T^]+,Sq\q;crK[7-JC@VMkFoh&B@:.b4Ef$-H)T#0b27KsIUZs0?^tZF
%]o;_[K=X&"mlY\3?g)rom>9n?^Wb)>oS[P#+D2gliL0&!gok8nf<9833n5n#h4boB7)+glDE6)tINpl=4MO7/G:tM^_dI7TniLXq
%)s@!-9K`&"`G[\6_C9pgs!I'ue`%O^42dQGf9s7@i"nHt+hR%;^-+!Ri(WT4=inMJMfZrWC#luN>@L4u7.(FlZ8.$c(Wf[Q_Nidj
%S7LEdY$Q0c/:V\H?R1PdXYF#:@=I<leX(XDZ6E@AICm']:?gMmP4?EQbBp5)kK@/U2k+_u9W_XCHs-2u@;/u\h.Ti[auB/V&c$TC
%1cg]dY_:75o@d;o626#X#"X-8WmZa0GPWp@B*r!rd-080US[sU'DR`0N6Jp^ra)m]TYaHf=np\GVNec<)PlB0hE-]HfZAI@nn1[`
%EVG'F(o<1(k2+'2EXC`333Cui_^_YapR/HKAB*=2$D"?4Mo0LPFAa`]]up\+S?`s6*+uKSp6%/)l#'t"Z56CB:MVYC!#,X6L=bs;
%?1Q=#]qhA@)Uqa8"%Y/@AW=!^/I8:<;ta[_UIoaQ?5T@^pj-T#:Of)(Kqeh2"D@&^%3=.p/#?ZO9I&3G72)mTn@26FWs48U*U@ld
%a`\iAd.Ni-;1bqe!bs`nl_T-.he0N,g1@pBU['3R"Vd-kofb-+*l;gj.J\9-U]YhhKs-h@6o1C;=!Mo8#=1$'ETHXS1\NTX!i1c2
%p6%dqh(*"(W]DmfKY;VPqYO%?)_Rs#p*-ZZ/RpGe]t/cl)E;9oV#[u1,APl]BW.8jU!eHN@BTn&H4.Sr<^2b1s%M(g\CG"Z2$HBj
%7F!u)0>eu-Un9)__k&^-?4KND1+:0CX^E7WcBQ"T.:`=u_X:1P9>6@^M5!_t98G`=2br%qaI/Q>;"beX8@_Xl'(/</Jl24k6!Gj*
%fo&Wt:[(4!M`MT_UX%MM=tA$/CDH?ESQ.:i]ms$!>rXER(phR!:=m\1<7Ph02dJ)3-scSm<_A.b[XNA1?4*-e0V1mf.'5YrHJ&m>
%WD;'glfED'lX_3#)fZg$00RM$3YYUY14Vega:h]0,!<:c3(p-aRK[oaWHq]5P3\C4(R7sqrAC>+0pPGYH$Y7rY?bgf+Y6g38P&lc
%,$QGZ*B#i/,eX30/`YmqZ;V')SY:7LN=oM&H:KdZ!orGa6Ygn*SJT*]'%3DoH*LKW<3DGVp19_i)E2TDGi".C(PGS?8NASFf/TJq
%nrb,1Zn!^]pQ7an9NcYg"\+uFnoF3d0s7%Zh$R2rrYN26A0h7a;'0Zs%fD$CQTJL)&qmp!<mNf$Gequ8bO@j=$YqcgD)#m_D'k0)
%$H[On'h_lCGi=Ae/[V<^>%]Pa1=q'6Yhq*%]R[bi>haOK\VF'86,O)q=9*1j/A.nrV7gal]WGlmkMQLT#JTncJepau!`$Q>#Z"C]
%>WSa4p_\_A0#MU-ZQW)ZgSuHG:FEEMl9`7D_KtbX(aFi@n4p`V_A]M^(\V.=Gi21h^>!79HHZNn<C%m$5'-0ZLoKIb]?O@uBAUUu
%'I3%($o7>?M!#ZG0(PKA!u8YW:_X_Y.<4jebN^<;3XZ1Lj93K5M\96UEa:);Q[)+s\[uYc-YM3<@[Y/]B>Rs4?s2u5I(LpZ=tAf[
%J\Xa>n'&5@;!m2p>o#MGWa5PrlNGZh1BOf0SS?\#pJ/)R@OJBQ>^1Ehb"+bJBQf`i/3:uBZM<sDA/FJ9*@)]D[_d5Yi@:U'*`nM1
%9$%Z^d'#jkdp.N9QSEU7\/1<6DQAd/UQb%Rq)A":EpP.1QK$,n]DF@D>mO!siuGZ^=$W_E_QaK$a+oC]b@&#)cZ\@$[<1rMEpV4L
%j3AadZ-.eK<[Hq]I:V7&E7cQ#fNkqJc]qrUO^8e_35[?m]jA06^Bgli1</,Z_-&%E1Y,h[&dYjnf%>+b*j[gBEa9H#W``)3h<":=
%:7/(j\J*Mr%:iS"/CF*5f\UD4MaOXuSR4DkldCkBUqhh0kqk-`mDQRE(0\E3B#eK$OQE:XX34^7_0PP8dP<-ag7pHNe`$Yd=IXG!
%F5-r$/g]<;pHkq(1KY6"[(:X(X>`VL)o"&5\dTdHrkN2i[B=f+T[dU+NF`i;>$]/(\\I'Ao\H3c<Tho/c((%@pJc_N>:ZVEeOADg
%'j/JUbJ+i>n_L:X]ICKXB@T_jI>"rlZ=Etcp;3h&.He:Il;BlQA$!8kF/YM:Yj0Y)`4\75/d/7,G#hlS#d1qHlI&2alCb5iKO?>?
%9'Q#B25Xu_2QJHY<kLMle\rY$WIhJAC;.%(/#t9?42;QhXLajN:H_g&OVsgt\Zk@^3Me0=Xt!&j+O3]]WsJr0AXc\dE!q>nS5ko-
%U+Em3P4>oZEM4%/!$GQpji4;nhS>pq_kGS,8`.sM<>X!j6ku7lQaslA3H]o.@6!>bW=*T"B$[4iX:-je(o],c0,uDW;I)i(rNDCL
%Jr,>MK9PRE9>hCkKiFCTE:@2)<#5TSGttA4!<D'p;I+;fOWhP3Fd4LLhPl_(niR]cS4Rj%1X"'8F\rcF\&:j\FmjSE6(^\jR6tK+
%NKNMs^8m\3,h3(!*k<*4S@T9seVmEcOWUOQi7+S'0prEI/u0bEF&$"!j%D($?1se1;h3,lMj1$cJ/G1:4u%?$S5V?L(J`d<2,7G!
%cQJ",jX(&-o=T,/,*PYU/Xg6nJXfUsI\.L#?0HsQM3M_)9GjI@%*T*Q/ebOhDg+NRelj;BmY&0qWS*RB)_jnJ;N"<51brfbCRe4f
%M)"tBlT7)mX+#\u<SW@MD34YsIt]+niR9+#=B!CA;qo8Opmb0I_4c/5dj8eiOVJ*XFJ^J.JFi#GDHUTK]Z!EA"2ahTn[g$Bk^9rQ
%cnN'#ksEN<Jb/,(?p!2-:R?Z#40#3XP;Rc(N4M^[&tn?F]"m++<:J&/MsoJ]9V3l5j?sireLV#L#sTXdbF)1nBSNTNpH$@RNGG9A
%#^%j%\OG/9;&<\^4U7`7-295]WCmO`Go'(Yp/n4IXE'[/pW)i1VppER;6_pR0$R:+AW9TS<+:Ki.Hb>8`p.j3e.#i*l>j!NeC6L$
%q8-aS-.R]O8!fA'6GVeNOQs+XEBY1:?&JHSS5`SCfS7f?.`6"%7<g-/,o5u(\uVuLCKKm8Uq1)c:rpJ@<0n2+Q?53f/rN,S[kkHt
%:'!QUR8fMZ:YN\IHg!I]@gF]G\m&q97bGXI\QOkepQ8n`'=\&58u`MLSEP(&.R+*+/e!/SC/1XacuH6J>e12-Yo_SsFM#E2K1U8:
%#JcTq=+l3R\&O43PR!qG:8A7V*4n.8G]_mVp@C9HGfq5W2&PYE6Pm_)W/WJ<?#6mBS1i$XMqD]9oh(kbE&hS=N'A-;2:NI)2(bbX
%JQTJ0k<_/MWN5BrL]nhU\8tM<J<HT6FY84.W%N)T>l7o!0c4saI\S+`_OO7+@[S1\S-u8Yn.p"fJ.U1t3Us^9,m/KtBla;"02M^N
%m0;.WKsu.Nblq^8bi,R>b>S<-Pe!W39D1/K0!($@B>`qR\SL)"Jh7eGKCtTjA@\NbE$;`3!IShHe?s$&#Z+0:A]f]@?s"f!/_n_r
%Dk>a9Y[&\:1q@0H7[>U9aO-.We]&"qiS5I6b`Q+hqTgU2)/!.u(ig2jTSInAa@4U2'KR9E4,a0Vk]+5n`%LDd&/$=$jL@0`Bu3j0
%ZA1.pS>gLt@C2OB\(U2':5mqT2*)?0!\2(n^(KB,^k"de[(%e<8%OlC,4*I"RrREt,PH+LgqbJ].j6O.oNBjbabMs:=39]GE=U&0
%/o8#tkV+)kA@Pb9_5V9V\:BaI5iYOlMeBtCmS(-8#L)R=-kq5)7!:4G\-VO(Ms3(.bblu9,nl)?kmf<c\D;=JE!fjRX*+^&DEJ7B
%!aP/9;-*2D7WGNWh\K77V^qX]2?#<X^BHbN13LTbgI`$+DX(GHF6"7`\'6h&EoPhc^rm,S/VHRgCP`rV;+JsKHJ=>F.r\q1X]ABY
%Upi%i\D<`&nk]b7N?QW4\&:dq&ra<X5f#iD_HXYWi'T/F[h'U]#Mgua18i!DaECdTHV%;E>:6IkY1phAp$>YepmLY_B;SnGP=&bS
%,e>QEL.W.I*'tg`6+PG!UAg"WE*?4=ZE>fTEf9cD;Y-J?DHZds>>X*)$eYlA>GP$k\FSD:Y*Gq\Di<L\A8ucsr''DWP1sSZ@ZIn-
%D*dQbgRA^k5$U,B0?gl#_)ENnD1OZ4cI%Jc0ljVkdr&LH#'QtUe(S:,KIQ/e[Ko#:8qsrLD&7!Ue)n$>/5+f`[SUTtU/$ZU9o4RU
%d5K[`C4s#4'K'1\Cb_AdQoLQei1NW531DK8:-S6:bSH]^!,FQ\/Y\Ju28qlb-pSi_9X]KMZqY(h(k>qIoK(dT[H&8F>8^sZn-Be6
%"2b>"/YL:pgi1miUf$ESYf4a_2M!HcY,U=Jf-9@jk,,?$\E//O`a11h6.M^W'7"Fl6cZ`QZ`W+[?->9B%&bt'/[-@G"E,k3&2Ft]
%D(TLsNc`HJ$a0LJUpWbI*GU*jWRCSc)YhNZX,r39K!Q5T9&&B1_(Gu9K%1(]UpZ$=.h0"nej?%A!#QBt,O>-R)rOPm_qa&jXTa(Q
%a>)kZFj;J7X@4IQ.`^mfXG(j/J>X(3U08Q3(?__EHUD(?\lpL1(`(+lgPf=ba_L?mbUZ\1ZR!1>eKSR]JA2cJP+DhrjYK\LCJ*gM
%_.dje_)?<4=V.T8Z>?ksc4mfl$K6L+2/$hSG_"`2?RTY4`;=Y2g1?a((dTap4S>nISe_?K/<8"NMg?KMc`@]kH,t#3\7t-U?"9Fo
%ei?m(Ect.$Q<]5[&]KA[ikdkok3B=\rqjQ)lTutq*OZA<g[+.hP?p4_!?NhM6_eTI%HTVqD>ZR2d^mg$BM"u2C=(?<USPE(d/lX-
%[MU6a"h,I\b>(N"Y.6Zt>dVEB4a&=/@0dl$T#ErJH!H2>_;oA/[=kVUUMP,m>2]+EE&Ca2&]Q=>RUhY8^WU5_A]QW43G><&qD\ZG
%[&o^cJ_#!A^@9H(6JAHgcSG<rS5if+2*"kojKhUGjP7(_g,;5l4ZdL=?C>FRZ_RprZSF*Jq`+*sIV0*eDr+V(dgXr50_PQUiN0@6
%e:H:r+e;ncUH)AfOjJ:tkF?+_9>31,Js-LL-7>>&psXfqj.#_dVQY*Jdj[)DD0EJ-j(,JI7VhUMCXsnfK4u+1[//pQ7I^g;'e_DM
%Ld7,]4S*E(=b`-a7Mf]pg$)(&A!igQk&ERfTC!GD=l;<*^K0T1B@>BJXKeN=(Yj^M[QDm;99JTbF/j6'&gfd-%CPQ,4jembQ@pKr
%Cgu(;lsed90TT_qlRL<<@Cs03X/lT6JFu5YgF^8^S?i+_!`LUK%`+Q1FpjR3[MoTL0U[s&eP910=TWI*?*MGF]Z+[YBRs-`#eP-!
%f&c#C7O:](IeUOd'MRuMJaF^0E_NHGYYfb>cA6.]-.R&-<ta1u^kUd/7=MAH@#uC(BRCtb77Is3H0:6b7qJf!7n\G+A#KdZ#Kig!
%d1<N*\Rl"R"a=e-]!]YF3jun.G:He/D[<_=gmDTPJJ0]TZ.Lm1n(^fjSoJf)fNU/oiKG3QIpe97rE*R?CDVO6:q<<Z%3SoEm>=U&
%_4GI%YGD[gI,UJIE)/bBT`I*A.](`jc=FW*<0n&aa\'@]]"4?mga"DGK=TBOB,UsOF3T?/LEDrS-W]:L-Pcn4i!*U4>V&F%>>sPP
%6YRBZQa9+r[@L&UOB<hc4Brp'WlA,4``.fCFt\b)`fmhfok+21p<L=QNMBYRn)*<>T'q3F`cqMr?gN#Go56pSf>N[o5_+fTYU#Ca
%TDkDYY3MSrbVCGe,S<1"-\8!^R\&c?\s?\Li#%S$NRNj0!KWKN@9k.W+e'?1V4L>f\qJ,B?p"eET49<9/nqM_.k2/].-DbF"gKF5
%,<+-%;b2]YTKeeP1Iuo&E%*5c'ShgTUpZWt::o^H,Rd_-#s>K#)+(HEcGIFX;POW,,I.BV6Z^!eX"14fgN\8t&?d`[%?a2r9J9I^
%2eUlha<L>2BVI\ac0g1Jb;UnWq^gWZ<3qh0cr<iHXOY8QIrLY=fh6'@"Y,P?()%]SOMGDLhZN[;YY\"c'.NGmZDpfuV:cuJ6;np4
%Q>K5<P9VFY`dISS-;j<h9CXW)+KfUX@/t>IFk?/Zi^uRn"]>p1l`juIK_X;P&r$Tu1^&ZOH_L'7EOL7#0V5'7KJ;hu=V2()BP&9V
%,@A'o3],uaO&r?N`G20%/XUT<d>:;KCMt%^UL"3b%";id%_mQk"\>j45iPre""#c:e+)_r)^7kh_sm0c,!aUQ,^_[+L:Qe%KqNEd
%^rC2S<+h8T+D"DgXXAip'IRLBLR=b^'Ec!=8^-XZ8.VHqMRge*P.[<],<=isPD&$()F6QFQ:B3J6E267C%J=d`^242IjEHWGm-dL
%8"U?Fk"/sC0o7k:p)BVP'hVnr@GqMDf:J3spP=*NM[u1a&7ZmG^u5Qn!tcpNPQg,*jcaO$A*75gG#f!1`T5!m;V_B2iH"FA'&)Ti
%8RZ%9)0'2LZNphrPZ0VM'#@3J\0T):Z2oUZl\5&_-ZG-#30;45/#?OGHp58N:5W"kEqInX&s28HnDn=uF<Z#BW?K#Lj;rbom3?X.
%Yh16U=YCJdN4DbN"nn]Mc"gad#,`;E[&j^fH_nH@C*^0UUdDZ@::g:e3&?bo"o(PZLaI1gF?G,^J`6u@"RMIqQD,.'l8^m>\LSlh
%c#I=%bD4&=K1o#pX1/f'">N$%pf=A3)Ums=;^*\@6g.EpWMbgj"I65a?0Z4)#-`kcfe)_'#LjJaW\.meR0DVFS;>B^N+MhV@0"4U
%+D#6(W43=(b[A_X>^$#tGCdG^1n$r;SLO*r-B;n<*g%j?83isc!r5\M8oftIhs">n7c]C6c_]@?H(n:G=g/-$**AtD'#Vd:E`s6S
%30Hg\f!Sr6#U5BuH2H8bV>O4/K!7]eF@Nb>=9f[_q5ad/deRBYUChj=/["r=Tb+0NJKkSDW+%V,6]u9ndK>YI=?nR"jJA$d@J,mB
%EV8GR#7):i%bY>$7,i7Jqm<?b?`G3(i$:Gb5Y4I2P)%`lVUN(4Tp^ob+[O,1X,)s)KAcPni0g9JaXTc25d*,K!m:*D`(]KJ`:ZME
%buPO\3*Xg:F2P$_/Q;Q9U`::-Mu,sn@4i*=(ia(jH?)u/)6=ck7<Y"DSVucle:<:@r!,c[=puY^2)e().f4hP1REhoF[/^_Y#Oj&
%;H%aN:Es5r%BYM_&ll[HY"?8m6eH69SGb]5A#;jF_$sgh<R"?U*[<nod:t$Pnae:Mk@nch"A^1-/rja',XOUR9G'8)G81u^:f0PK
%Rp9\eHD38AM7LeF4R&7e`Y!;9'pX`t;07@a\P8h<qh/g[<^IWR4b>aoW;+np,S=^^<NCrY_/*R3C1umej!YtQ8>e*I/ju-R2Wua@
%MDZdiT<eG7I_^;bKT*<0X).;u4/nU"`4DDOpm*>u7?DQV7@GGMompt"[EpVS=BpPGWhpI4;]Ip!Y+'HkNRd3]03Y[S#9MG'r%8p(
%r2Hb'lR>IZ-<De?09eX3%e%It6qOCIJJ'C=b:m0n_Yia3lNh$!R3N;fN."/qUVI7JacZ_oOa=[+bcufZYqjN).6GGcH^<@D6HP+f
%WJ%Q<;/F`dGZPof^6]J-`C#t>[?ORRfPp*FF(MP466#blpFrI&Wq-kq!EUi<6KNcoL5^hJlSO[89/OR:TdAQ\lI(Mip8''jQSM8S
%2Y;C>"Km"`Oe.F9VWCL&bnl/f^s`N)_7F3G42+mZ\6JimRG"ljdOBoI0nsLKM7US+M)*-ki_7@?&eq+V&OVtFUo:6MC2@,JfMe>D
%0ND!-@-B#49oNj&*0-TIn9r\.#@L8B0RJB!Ds3E2n&b5HK=UOD9-pBqQlI$I'.&HE8-S)5JD$9HK]`KO<0]n*d!1Qtbqf5#+:4*S
%1n$7Yn\O7_4C,t$q,4B;GNBd"?-jcm@bP@i2jK2Hl%L#)W"u(9&"+>%e\^oEK.IFlWYUOG#t1>@"2uIA?'F@17*B[\`e58bV,p-t
%<\eJ7iJT'Lc"1iXn%q[n,h=S<\N%uh0+>O!g/*f\HTP\&7=eEpNd@JZjULm!7f<\>on%k50]ktP%7<EXP?Gu1^te+Pfa_:A@A%E"
%)hfX>pWMR@T`C)s`r15+OE.]^!ZtU5_ZZA'-Vr$TGZ4R3_.aC9T8?*j*70>i(WacDXB.YXTtFi(5Yr(]W[m4I+Ll2dd2BHd8;`)O
%PY2bM$EKPt`%!^MFTCC*-Ys<5EAGoSWFt8_beY82Y%qDXk9_.l:MM@9V:(Td0R#oI;kfUj$C#q7(YC4Q37Vsk%iB78,V*hR+E/1D
%LF[)B,1@j1Aq3Q06,44]332.1We@pCH50n(aaiC'isMQZ@i["u;S&m],*sJ6MWj<=%pP69'*)IBAct,o+j$S]_`48@TW3k4%UteP
%rZMg2LET6R\'S-/7G\^_@cE8W@uL;2Ymkr43"AnRA0GVn`t:0u7oUM6#==#DV^oHU9+POA!XX-b3etucT:8h#WNm,tMiea<"i1II
%Qm&2#-VgV$br6]AfG\VB/`M;5f^XXY-4DV`J%G4%jLiH($$P,6N-U\6k?.T%XG]IjRm6L6#^J#QIc>V8e%o746NO_d4p.m+qTqT"
%jJ])L>*pC(dttgE]Y%?I9s+F08=V6>60iE^`#e2[R6GJ$h)@(5gB@m-'@Y$;T2l@F1c;(2!BS;gjL@<u1<@cO*qIMWE!?keL]ON`
%eDLH3GoD_OQ8Qu"h)t$Ef\8QWPUY@+(Dd0=TU7mgf?b6C1G0hP,a:$Q9aOZ24?ps4ViXBb+2KF\EYsV'o*L)4bZ"iL32.f,bX6oJ
%&br1Qaee#V\FR8P?lQ%'2I[M15Y_;H.Ueg^=ANXdng)^&rIDlt6S,\akpGn11#"u!Au?@"j>#^&?](d7A6JIM!YbD:Z#D;I$(+7K
%3G&S7?_N+6TWAV,Gs+,TJ767`"&UN%O2Np@;+H88()#[qYbRnKC>jBb3:DX.B:pD`R*"aT^O_&8U;O?-l'7_3LDM&D$qZ/%b^e7]
%1"-s?Tcl=i_>ooqM&0g6>T'$&(C6T6_2kNDjb]1(3gs9?3QQmAOG`X^0.>qOF@6<,O:X_l5M",qKH3</2J\+W8r#gYeYp$2!%S?=
%JDc$B](qUj6G5X"_XOmNnq;\<RJ]rA<IkH"o,)J*]*qs7Wmb]YhZCh;mDZ?kQfE@t@%ObRg3FFN)Bq()TYO-OVpW\S^hcPNU\-u(
%p2FOg3cn0mJh^dt^/IR-GsRQ/j;67A+,[%ZNG*kJg-\PW^'5Jhp0f]NNWjM!;OBepdA\Z=.?%65G&rK!<Q?FI&I.[E\2/qpAV"V6
%k[:e-4W'ef"-%LtI'p(4i<h<';FGi:g+n4TODo82&/2lW:p5;j`C:g\i^Z*\ln#KFar2O/gVVLW%.-84)+N<fMqWMu8FlsZ*/fm#
%8#.T^<"Q_'R5J0ZMC1Z2$a<9T-^RG5[\Ki9lh3B2Ga)m4b\`J6/7r$g2l37Q\t1)onP])uUD.HN5/AD&koiSCZ'ZU[VKJs`VBU%3
%=*f$,Z._]?o-dTN5+993]<M!JUlZ:E=65e\(!fh**8OmSQ/P"?CZ?PINUP*=blHgne?4<MIn1frUDRFceKS%qEU:l6`5;%A\VB*4
%0ff'n>tT=#U\Ho@+aG-P.)rMa]Y[?PATg6ecV;rh,Bo9+_ou2ROFppN;uR0b9YfRWV;h]0-]LCn8ZJgUSe4WGP*KlW5@`]`>"RMe
%-E2&b,`E2or!hkS67ee3"TcE,*-F,e_ddMh0+D'7L2CTn5n22rmZ2=4B[Wk/Z%L[LgAFi+%Uhqh**FFeLI,>s1'q'e4VW")8(;jd
%-=ZCq^:MVbS[ndA=8o<=bHYaWVOT@d#_[k!ZJ-#,O9Q)tBIo"Yo6?3df/i?n9?C=Fc1]6HhZus>6'ed@(ou$.&pa46I!DkYH0cnf
%KCq9):L_.X;csiWQ,(kf0Z8d$,]ohVA5`OtSB-=mAIErf*/T>!+20K%jZCr.G6S\t$D1Gc@LU/1`+9=EQD-`7;OeE0cShe%-/rU2
%%g-R-7ma"4T;Z:_]TUDUj''nC`/,SX)T;P.85^g4k9@TcBTn1^n^oQan.)f>*7q\0Z%SRW,pSrS+Gh:bPqs=_0@b;ELfq@qr?=pp
%b?.$*S0pE$nJN7s-aZC;Ca!J^>8XFo<2-V,^k(L]Q5%?E:IJMqBb'Zu.[>V#$oj?^Qk`I@#jF!;93DLu?PeWMS9Ae!<6.eXOY\,p
%e"acHaFj<6:cTH`=u(YmqP+07BYb[Lou\IaG%%CN"]FSDfIqKJU1V:hS2HA+@$>)Tn'!NCSr$:`C?<@=JcV3!:ob-I&+@,#dkA]u
%Ef`sq&#<Wcf*0tGkoLm?^IW9P4-d`h(gpY?9lQTBi!rO$L)b.X?R6o<cCa[(jg.A6S:QYBYUB'Z@*:P43F@><1hWLJ8-o*E$UI`[
%6ikY?'M5m3Y3)l&LlEY80O/4%iHM/u6br)L/`Jb706ElS:`SaIQ"hQGD$gu5mk?42QuFA3,A:1T6ZM%ALP1rLkWF%lB+eluNbUe8
%KM^*Mmtt>>\af//1+X,cM"N&0aRY,l(>lT8(^K1(TrJaL/$[O`(mP_9dk8RdjN*>P[%RJr8aLFb&fNQ9ITh8h]<N'$pL<07.l=%H
%N?5mVOZ0;,L'h]^PW_b&L@kp9SJ^+s&*7\>,cYq]U*et2dnhJK#Yj9iZk?bu>RSQp`K&L_8lZ1*G!>@7kR!ioNC9DC04'4BSYp$M
%!gELq-+)'($:?EU=GPWWUfhUg7T:os9ek%M8\n[amT,'/Bpf5t=B^<:&b-G_PnNfUK%2;)eX9jcNjKs&G='0h:CJUA4X739q]nuH
%:mal:-@4aH-Ql8!'s-=!+jU_.DE<QkZiTV'D,Hu]pHXo*rA$6i+U7QK+gB$c[Gk.404#b.#L\N&UH;qCYYVg<!&QG6Xet9e:in8W
%?G+%GV9fH>\=,([/#>Z'@=^jK`M2,62o_j,o]<r-j[Z&4U?A'<6rKI[L(XOt1RBKHkQje7^(1,BM:c,hCcjdf*+^aTC6!NF2IoXq
%lsF4dB#lS-Idp&#\3g[G'3WeXnF70H*'qGf5q#6'n?GGdE'*R>[)P_pXu]>q+_Ai1UF;(6EU'flAKfWZH3U/jEQ)DT8T6R!)AZ"W
%:tQK2Pm86hf+:K?"<XI4K5sPra=UDki9UOP0VZKEQirH)ib,fUa(mfb;"g"`mDd0G7U<qa/h0=7?)>/+C\>3c:ba4^@YM3'Bf'(#
%N'nHs`?==Qdo[9>#s#nO+I4C_Pcc]Iag<OL0>:+P"@7S\*!rI'T'H#fY9`j6WW;O=lC6KoT)-?eR_X?-D<sTDJe^C;nBJnCT)Ml"
%.&#H>(P(^bldcljWJ7O\mS"7o/_QKh.5j(n-SehNf^FLK!S^p#l5>p]Li6aG>`4)f`%YrP@p3bAm>$cO9L?o(6R"-qZj@)u>NF?)
%"0#crU).k!Tn$p4#Fq<pc5*45NNL/9VB$-=#a^ar2*==il'c'jkbf*p6c9"s3KKAOgb^oVs$6f>=5j2]hc,K2PeC^iIiu<HA+V1c
%;3<SO$n;p#^7Sa^q<>U%/df,R_K=,V3)@G!)5Rmtp.HF.:_bse)PDB[@0h!$#-k7k/QlZP7m`YYl6JT`okb.FK48g@7iD_)$`NB+
%@$.Y4c6WGG*d&e"$R)lP,Sh?t#"1\2@Mb6u!l0h/$?T2[oFm)Dc#e<;S&pdSo&M(a&_%AKl;fSuqi^G:Ve&I3L2hWsedre!+r$=P
%Z%3b&(`:5dP5#@gDBNL.:-[&`S,u5*VdN8bLdYis]:pi42$>%POQTaqLs?j!2".BjWEGRU7L3'I$,AZBXmi^i\BBhU2ou;fMA+[N
%.&!+45rQs3pDf.qACuk`kEeg3LT`Tg7N/VW$Mi)+6lO7k_n>ocC>,YDMfE;X0cH737&4sMWTa4A5b^t^j$c'WBgB#%<>\5;6dB3>
%4+.uAW;/c))7e-46%n5.oCO_gdrhIH1mpdm,Z@;8P^010aY\T+j;<!gOmD<__DYZRLeUYPei0^(k@e8,X7g?*Y*2\sPj:IXYs!H^
%p);,fd*bO=*Gh..7'qfib1bdMG.gDo5q7*!b\QFg4J1Yj8AnCER`]q[i(1:TjBT"5S8YD;-';f>q-%`?dNKHJjqWiE/fADdPi.H:
%G=DS503\VGO1LcN8:fUqD2+Ra2B@Ok"^9l?;9l>[_W9PC("c/*,(R37N+rZQZg?+G'?KSp]Fb9.RII4E.j>/"L;G12R,nD--t]u:
%XQEL++ia--Z]daD+Nn6`r2CH987XN94cR=tDW4fY%Us=Q6(f7;GAs>^JPgfR7i@KFD&LBoiPL*/Bs]HbjM9^m&-.HlcraeE*;`2;
%W^gDF^6Aj0S=qq>6=hP6#>ot6=_Qkh+V$BR;Z*fhGgbZnaBf<4OCEp*ppQ2&6;4nH0`'5HkZ-oDN;h@8#!(<iqU\3+j0/UO/<8\J
%<b2-&k@b8+o.K%<"Kj.t8,J`gThHHQGQNbMD&>!59Z+un_M[1/i@.[U.aWGLabLuRJHSa,G.=Cna2,)LOAK9eGs`R+&mZlmr/-iH
%<gnD^*j@.kF-en<ZkhlAL2LOV[D]ZT9;N8J??>d$)4jD=JC]4Drf6r6p(`=h`Nf\aRaE7AP]?3&V9&"[N.Zo'*!_NqKCTB>"]6OV
%.Ut>aE%>S*M%0*2,hA'*f4lfuC5@uS/"J?N/nu]lW'_WY'#Yb.5Ia^[olq@TFVftL7"Q\X6jPUHS-NYZk?I$];T=ruJK47Fs56T_
%6fpqt3k\-0agG\Y\-j#oBXi-55Ji0IHZ4bf0-t>S0%ompnsiEeMfI1T1cYc'!1"t*6l>H&ke\9QJh9;mRI/q"Wi;+2k!<lm*.^tM
%a!EuJQ,+2<?NmMlYmHIlA"V71N>'\E2N<J^12gZ^EeFq^KGmji\h!"3TtE2-7[ZRo.<BL'fa]];12Rfa_2?d=B'@:u`gjmnL/M-C
%[R_d13D"l?1^$V@;5j\gWW0i2MEjiETAKH56LtkZqcKZHePNG3YljhLUO*S9cgUAJjr(/Kj'1V&[r?e/"?#ihT4[Ok$psh\S4J61
%C/hoL%bm49JbfKTSAM*\)N;[.]%B,8bDNW0C8tn6:ifd<F>J%jb]AC\M*%!S:Oc]P3EdJrVOC^VoefU@$4_+S]VsIZ3S)E)P67QP
%3205SC=Q@8j$M;[I:?I`iJm@uM9SH4_!67<ikV/X>T*,E1MEDi(K4t,NS2q6g([%0Fk"1kC*XQ@XA/g5^*FW-RKqr[Z?:UIe\o:+
%U>u&^.BMKaXk$+3882O_EMYoOiL])oa43^33c.fDX0EpH`F@B'Dj;\mVN:tQ\6/P"+UI`u90OK$9HlF1P(a5lG1ASt5p?f[m.-]F
%JB?2h/+':=Hq,TAdSXA27>Z!p@&`14NA\_1pb8Gg&SWL3i7)RkUo'!!8Pp%D;;k-@>JdHn"$b<kQB:Sm!R"978lEB_nt[nM:7quf
%)b\^3(rG>lYei)+0$san9D7ir8XceThjp[qVdP0LO@(8<E=HSPOfMoo'XduKA'o_eBea%_oaY)o`7MC'VSV%TiL:s9Lq1MLCOjF!
%f[6$ZVihnSK"sj!5Y;,$2H!3Z#\#[>d9OeSU&kiD69a[_a1R-lcW?]0.n6<l%%%IkiDW+(Z=C,B#[@tZ0=M'c(/FNPUlqe\=-csL
%N'prSN:\[.K2X4>`SD^*IAfW,VI&FhPt--\G(03\?mWd)-#kJg;Kh\/BcSgA7+eXdH%\]ae4aLOk[[T2)Rk58:Q4d<,;K,M9>uJm
%1]b'j8;JZ[7EX,D&!QMkM3HS1L$HeH17Y!,'ra1HTVtf<Jid(R-ZLE706t:UR7JUa4k$4G--DCr(k`J&-9W@/R7dVk,dt])jCO]h
%4Z]\WGqV)m8D44n1h0B]Z+FH&$W7gN\nTiX:F$Ld"$^$+X["EjH=a$d]!9,7Q&#E43aTTUJZI''P$#q1HDM@'C'Y,>@M4JdLsGYp
%2in!bZaLEV-2O?QkaQX"6Dd:MPTXVn*i#hs%E6ZQZ*ks2+AtdS\&4R#4[6;+nj"Z<,GIRMrZX*'+thr>E#CCa/!-Z>K3RStp%?SN
%@_f!/W\QVU@2t'n9(Si0cB'<;(INO-,\[gIRd)V@#SP.]6KQJD60+h<,E>I!6nDqmqG(b^J8XGq=09c',r6HA84^0n=2I6Dn;-;!
%j_Vhn2";4SBas&Icp/8dbS7CR.h\lG3'"sL$$=A$Z-WRdrBr]X+\>Uhdbq8=!V_12r:IFm''GKo]I@,8GX'7Sp2n/BhD$S*p@uPh
%81H[i5;9q`;66pl&(2;,?=/nh0g)DLkVANoMI!Ki%DJmZ!@Vj$5UomQ+ph*PElH8S$?Zo813gcF/>3Kd6q>\]+gDG^S6m_M:XK%c
%j>;ut5BT3aeCV>e[]su?W>EGV,^U[L1oVdVXu#7&iL>dEUM=5h,:dppreEd7I\:o*2p0c[dJ<Ar#*8;p8ZXYQgl9fR:GXWT@\t8'
%W\Gn%-n+6T6<GC+)0cT>lqWX5Ql9dX%/9@Nl'2ZY,pe(p@orZTKa+#g,)7"2goh.W`Q?hOie!YM6&co.oJ`?\@>mqu4bMZOG2>c1
%A"o/&`!kmmTNto\%_9MN`"oG@>&g@Kk_Kai@u7:K@JS1<i;9-7QtIUBW'gj$A<aB';(+8>@9NY+(c'n';dUo(d2>6$2Qf3]H<M;V
%V(N=^L9)"ZU2WJ`@2,]tiTgCc-[ik&[B-g4r\A@u8e*&BK$GL1-J]:g"YLtXm.1TpWAJ%u5pVI),0\<Yr(ccY\T1r1+dc,`XC7?.
%MJjud(Gn3G5N/2B+95=V*6G:IHK)23S7-)B1nkZf\!_VpVJ*:HSg;u#L*T2%I:)4qE)W5-j*GF<r^9PQj*kZHM3\M_Z91*n);?QB
%Hm_kAn4d^EO`pQ&-5nUkl0[R)*?8&a&JF.O@Zhu?"KB"rc5K(h,_F_MH+I*CaA'HGPT1XlMXq/A%g<HcMB+O%!fRj1dPJgMkIM")
%5V>d,^1$<t[+Wmt?na-XW<qI53/GP<.i*6Y&_eScE6'8Ebq3HeMEVF*-;D)H$JK\H+bqC`Q0X/l8FAhL,03hM[CDikm,a\F&86K:
%KlY-9j\>YB3ide&<RW3*A"fcUU4el;ahgB!!L%8tjEnme(aW?N!"qbk5f+K66Es/;9;P)Yc8?rK5^WZ?BWs1I0Pjkk`jMKhYT:m0
%NXb?p;dV46o10i.AI%;WKni"^Z@U409X!)Zl-j_[kEras*1d,N--5J=aESG,W[m$A#\bHtL_Ujd`eF5^IOT1>!?d?F+oKoTHrkoW
%>f/A[V&[fFm8);,%j+@gC$(l@m7T<RQ`+FbZF3n4a>JnSP'Nsgpk:^S`!B9i.o::C@j#Gb&%obF?OXDcfQuQFOU)EhM:$)i_'G/Q
%Z\*X[6d1,m7%a_S*KhN[(peFf4;g`u,KWr$3&o2o7c_,SSt#j.Tc(&g=)WicQ"c8'(4d]B4;L2UY842B=&\Bq6U7eq:dQ'\P#On%
%"i>V">7U;daX.EhAn\7t1IO$D/FdqC^#q=.lO@5,L:SKh5P.s;Q\*Ui*Jdu[OH*3jiuF(:kr[@<!^7$IqrpcH1h;+STY?MaA>2Nt
%H@Z&uNme9UK_`b'kn+Y%>:t[sU`i6%isOjUM1Z8(VA<BPM.$rgNgh227-a!3KP$W#(:/s+MV;RIOuce<+jdN[//lE&Qb`)sOO&V:
%KYCDaYp@h(/iMdV#Re)<Ec]MrER>3s="B>7&1<T8D&Q/g]?DbcA60[ABMF9o;u<8U.K=jiVI\2dP4-msa&kZ;2pF63Vd_t`*8RW*
%"=>%>"@F,p_*AkjE[a[eOtIYg4Hq@q1jjOGFjEJ#"DVVV=%]#%PMI]3<M;r?QQ*=YktI%I):2#d"cFK3*.o&)\Qla#:)qfE*&I"#
%LTHAu5A(U)h3=2I**!UQhk[2@R\0Y1\MZ:MedB(r&/,u`Z`FMPjlgG.C@6CChU+m:*cN'0s6s0JjBC!>`0_4i<Jeu&nQ_&d6U"Q;
%qRY8]apT?kbVNsm`h-r[8DuQ`!A9YuG+X'pe(A2$QJ;K\^[cd^)`=S+OsV-f\og*>VTB$ng!#_?&f).EV9/s;22Q/31(/%,+kt0p
%Tkna#aa5L0*_ML'T!(4\.P)8'V@h&1bJKa96k&%>i0b3:YBLk*&Ouhe0O@+<*M^52hhIP-jU$9&*4gqm$anb+irYTFcHL%eZ+3I3
%@re=@25BVc#)IpL5cobB7NFgYa/tcF'.+#HP0,C0HI!/i^,\sdJ0TujSuTmTeneBuKfS'&?,q:H:dVYuQ.4uaq!13'-G#m1Wa3Io
%l=`_qn8VSfbniWqCn6[K<":ThW&I"Y!&@Ga#p5H_E_fu:6/`Z9muS@t(ruabVNtJ#'IAgjaXjq_eCCo\:%T]$MMIu3LpD81N_t<]
%')mZ+RCZE<Jrs4Vr7WW[blcBfE#QV28t%e]1pJ*(3A.+fmU0_L5n?Vd+3:9FpOFMj92O!"]6\37pMf;Q@8e+C_W;(GDe!/L(jNhg
%oSAJ*MGH$*S<M,_JdSn8!1q:$p;93aef/7Z;lYrm<W_#[iR5g.nMs469LP3Y=0X,jB<_XXM/&N:paYihoI,CPi!G%qmnP$Pd#-Ld
%mX5@NB3Z;U8>uh@L=VQ77=VrNYZ'n(elAO5>_F4s5ZC*S<iUQO0#>%=BgW1i93m69i(IRn2"r5VMAL&#VLZTiA_4b!9dU8M>+,8L
%WlI_$/m6n;mM+`I6!8hib/7cT.5lq5Hb7J!L;K7\5d(ZGg6#=e&lO>k:K#U,2pF9rX?\7i;a++UG9Ki?R7'@"aoXBE-q@tqA0pk:
%&;[Eim)bG(B,Z\*fYA\U%RMn^faL[="#<6e,p(C_aIQ:9Q27>[V?iut=R]5.!i8S-TKlK-<07L\8dQqsIj7]7H]jL;XH]j_Ak^n;
%LPJaCn]S3tYW$:%E$2q=(oIXL&aX<HCW**$3&@?]AA3,d8%;M/P0>%ZAeq^WR3NI.3<O;Cn1_)>:F]3S,`T%!n&VNLBQ)32m';sU
%)h=;Ai09>KM5jf=pXX^o@NVeC)Y\L7.*a5@T-0?2W@XJa`CdM<Y1SSuf$9#;[Z8ue7B&mqI4(<DM@qGuei(J?6_=FE="<`6Eel";
%+A[2k2?`EY#\J5_%dAeu0.*oX(CD`:/nH"J3AWoq6s()d/LM!"j&74[So*i1%#?4`>^]>G&h=%Tg_H0;9>"/W:+g]9.[MRhlCqq#
%(oe\3r3nB%K:*#2TpM8dXN8TDXeJ4;RVGIdYaZCp`>%bP-rL8i4CR1Q;R&Za8?#dY,<*B%8.LO%G6j>_;oTL*8?FRQb1#&">?hB8
%Y9ZB+R#!PKhSkJHd<VE2TB-A-Y$u-;7E)PFC)I#4oeL"XaTrh$`Zc@d`1n\%!1kN5!2,6AhRoF>#q5<][1Gt2VI&OYIF7s]KT6Zu
%@\)MP7ee``_CgI'/=K>TY!??*XGNrNHoS-g/U_i>Dp1L3*s^UI=-PH'0Z^f0pt9B/KK5S-+,-B*N_YL)M1P)ml4u8dF<LV482And
%9*0O0[0'#(F<n+H%86fdVCn:uTAopmE_IeW\X/10f@&!ejIs"iEqiR=LJ$oS?KXqp%ZQ#6pfOp9;I-q7Eqi8^o>!*9;oP?Gr^:sa
%Tq7#X$s87US+8t5H-VQVl?d)U:nWqnA`@tf<T&.q'j*'V*2#ic3D-f&@&*j2f]Lu&"(0?((3Ua4LdRSQ:+rOn);SOk!YZ/X8EZ]"
%To5Rb7/71H>7KqRk%HL4b_l`0a_Ze<@B<Vu#',_<F"Y.\ER(crh`l]P%lKj!'$a@0cdQ,%P_\iVZ*VA-B<=@OTJKmnTAh.WgcX)*
%`%p);&AHN;dH7ZS8KgPLS)Z1?lTOAq?i$f$.-I$T(Jc$*FDOF'M0^[=bu+5Vf+9n/`?5IKZ"-&GL50'*_"88eS=>!RS9"bVR4YB<
%Gu=c><b3.]DXmf[c^\D,#n&QPYGo1/*4:c:4)n(Ib$:%\K%_?h4:[$#;rX1bC5K24oB^Ea=.H+SVcjb>$o,f%KCq&1_`X3)PD3J:
%\oQj_"3_Vg,Ss<8_e4#r)L?\/7B=W$ng%,2Z!iuO[LnY+Y3>F9("QNU>b39?455A1R>pBVOubnH1+S.dR^,>9B46of,,L!<%r\Vt
%`t_hhM7?Y[i,Y0!\8*:#=l%"1$8UO[8gILs.H0qD4^/kE3DS[r$&jTh%Hf,878)9RA3nYgB<^JG_]nIV[[]c_B]psdb=.plDQnAG
%**4p9@RU;YRM/laQ9uWbdXZA]=Wf'>`)"'Cm'A!UH)bh4M_-k&V$saOaXWu*%<H2C2Nq*7#./O=+jCYCe&92^'nPJ.dPYfbjY3.A
%Si:(tjg^pZ65fC]Dc@Ad]9'>@doa_q-6,+,ec/JjQ/_j=-^+Rr-_Ve")b`8tS<]J16cpW*h.7Jc@4LQ67?iQ2k[_E#Kc4j/J9!nM
%puR6+*_MZ2R8+g'(!s2,_aO$u##,SYr@[CHL0obAm067%C<%5F3<M3OB'!!43_1*4WDN0,\8r+C4H+E)Q&t(r98OrgSMLO^ZP/)*
%VlQE@&s#./WGi&3*]PLL<$Md41)am79+E0W'Q%AhjFPG91+[GOi\6rPUWE%&;\D*]e$7+P"uS22Lu<gcL`E>26t>A(qLF2sZDJ='
%%aC"Vo+Hf5Mt0gs;TM"=FJ9@>5gWBI0fS$*e2e9G+_2B,j@BsDJ^bg`JY3=72bjE7'EQo>8cWo&AfS):PKOT-,X?u(%n$"bQK[?g
%1m.fRi8aSrqK`TKS<Y2P,NNk(<f2S$^`^f0GMH.F/n;r\rXk3t;TFF>f]<i/%L4/ZX!QmfYiZp\"u)(L$5Km]";72,!fd@In&pJ@
%M%[Rm'O\MI+V9Z"&N1\tE!!oq7t8(9(t<d_.$DT<1E*b`BfpJoQ/-u16^(/Aif&YiOI>'dLF/S3@)bR9Slh_G1[@J?1rJ?A.6]"g
%N2(q`LPpt.g_?BO+cHNR_(:'<(_6^'I[9K_&B`d-^,Q8$Y:*]sCD0'f8p#(D?AMog\2Zf@C%O<&ER::&afEJuLBgs_G"%;oTgn5a
%Z8a0kh1m;\3.kHUn^oV=,>b.k`JXP)0.p,@&M$[gM?bJa^`^UEK:+A)`I/C1@t<R;B.LN`aqJE=>E+cdET/%&EEp%L#WYf=dB^^(
%<(p4:P.4:pX$kuHn*oR\P`-pBN.#&Ab=.@LL]_,$=,OM#'2T,W*5isYSL?;4,B^sCTu1rO-P-\L?,P?q74eiLELu[:S0/l@*(StC
%46f9dj23a42lDEml63M'E30%iGEa-9#\#MYLHBQgE&b3YpBWYsq]q%s>ASQ"6GJ[D+F0Z3\<]e3n:^N(E$AqL3s$\NOl<9cGKRkn
%<1T5-(s^T+NXNn2ET/%mmQD#(\$0g0o=Y2U*5tD_-XL27X'*fD_BVXdcUm(r:]c>TWSrN.C?dMFDjhs-3#BYQL2-ChbuC=DN::(K
%5_N@8+bY2#3S"2Ic*/bh_3"d2Os2K&E#c8f?cpa3*Ek\`i!:>CTAbKD@dr:WHjIA)%ur*a;VbnH\3kM<n)nrb=aC+$aNaP=i'##8
%@b^Ks%!kOaJ-1E/<t^:bK6me_?@mgi^eTB9@=tIWE5N""#06;!p_-0Ei6WR%"&Lb___2HUp&[i;'(</2e13*g*%FpL,R/=Pm?Ul$
%=O>Tm_*rL.32W2SNeC;l.<@1&SsQMJQ]=`G#1o3Hi1=Bu//?t7,\t:a_6KA!3)l"HNZaZZCMCkAN]9=YPt2s"W6n$[+?1OLO[b^1
%Ye+H?=WTO*N*n*n_!u,f-n6$R"V=?=Bq0_W*J\AQ/$Zm`9L`1fL"I:jegJmQ-:sBH)g`60&@duD%QFMLR"9*.i-\:;E.e9fLl<G=
%&9)"JZRc1u/SJiN+i#8_b:s-=6qoX\OorMI!KF&"ZTunE/m*l-mAE::[d\3iktq[;YeL8R<b0S78/U=MaT0#*DIW6-$2fbbMQ*XK
%C#g\gdi`5(TLAb(V$d/2;[jNtbjTI,nQ]/9_PGPq,4f%(1<!,9r+=.p',h>ORh:]T%4EF80m@>8YfLai'C`>b&d*WP-DVjURo6_G
%m?Y$FV&&jn10HPpNrZpLfLTL#>T$*J(^5B[pI)jG:'$t/9<>6!INu:">au#n/\tEc;;sMH)GIh%`,>j;dXGndhZP@TcX.lF;_79J
%-%>GK`DN!9^DV&Z='u@1bqPX6:Fu(+&N2If)<<`G\4T=G5l?^C5h!)+IPV>_#m6+`7KejH,YQ3sL@GYh=cqSoM9JYq:ujP>W1]#@
%aDZfOdhZ_\hiNpH@@?">UJffkTrOn=Fg`jl)pqUDcnrg^7RGSL>s`ur9TGuTKD]=q'Uj"Vq+Un1HjTU#!Hq=8r2'I,5"kg.KK5</
%j>XXr9Q#L\7RXhTfF@D@iDeeQ/gA&5Ze8#&-E5HF-@SQUI`'ME.TY26#J_l\A$H&`VkHNK>2D1F0hR;L!q/2[:#<>\^Y(*^ESpO.
%107,UmkcaP=CL)DkL%:c@,L/SA(Sl-Dra>)ZT_OLWN-/$KDHo>=]1D6kSn\HWL'TSDoCg0qR9qJ)6i.X8NWhtUF*WQ$WY8,"G0KN
%`](%.'EapO^0qV<XDT>3e*>"F$q'f%6$^$t98%5,gN1<$,!I_OMhP<N2q!>R+J't`^/I`,[X<!/EE@Vtl'&2&0C8'GmL>kn3T+Fp
%j)`06/8/r;Sp(<.C<><bj!\/$>=eE1K<$kCDqSd1G%Qd.(*K6QQ#'S,O6DI#5"pJYi(n=B0<r26esp_kHW,M/5DJQ"JY@\YCi>3!
%W+FW<r/)UO,]Do9FJu%X7%*EOj#1BT/_caD*KgVFZ<r[tcKS8ZHS^e;Z.]EMNPl6VV]!!'T9A9/(?+,QJ-44+$hn7EG?XnRgm^;E
%Nm`,l\2TUe//K:FDb=\J12q/(U^1TFm`d.a$*dC>2iC:^RWU)W,bT'DRU_cG]d<68*.5_PZQW1B#4IPb8h.rLnD;ZEUaW,"^%2e@
%KD1*G0Tb]BmgZNM-]7YqJ-Ji&pSL@$O;7<B[.?"r<pAI=`^KusKTH>s'plQGi1!4eL9qf7[nB],(,ld7%jXJS-ka6_bdjg.Dgn)7
%q$Q("!iadK,(-^H%Ke6jiEHd&b5@P-[3+R"r1*7.M.E:_#UY_djJtIP&DoV9,g&g%&`4!fQP'=Vph%a]9G0dA;^/QAaS;X"0d;AB
%/ZAcBZ4m@'^F9kkaS;&h!;Sl?PXB:Z[CQ>Mh_r9bN;07[ab&FTnVu]Yd?+Y'/[ge:KPqc",Rmlgh_^@4#;hBX0pb:c6a;Sg2_SO5
%N,Q,4,WXnS(7N2";"APLH7CtH@=2!b'R./LojS%&#4[[?KZ(SA`[?t0,ZC"bDkcc,/^9h2^1gr?66;$Z`eYk__[sQ<d*u;Q'#'c+
%`onO4ph'=m$#`_Y2q<E(%?;"6>oUmn#i?iJq;1##)[^3bXNQXGENjh/p`era1jEr*+;%,J;PFU%c:I5,M=4.n6_BY4NGjmaHNX%t
%7&'0DJ8^5i@U&Zb'Sps2!T,)pa/oXB`cn^`RGiM16V7T:_0a(jBL%G8hO>!PAo&@!G8b/uVkJ9DjYL5QSF.Ep`]pQQaHW_`D!qXD
%p1j?HdGBsGMVdL0"+_SS'^Ug(nO+p<q2'VJ=;ai9<:@o(j-jRWTH:HQdlZ!Pl5&V)]BV(+TPd_Fk6=leH4u()#.]sef0]jt-dLHR
%8i6!AW\Em02grm5#!PZmg57<I3)gj0D<;4-aHF3<TEOi2V8Db_,7U\2(iKsH#hLS(]Ihaj5eLOdVDlXO]HNBjL.-bSXtpo4R\UQ0
%ARketM5+Rq`:&^\br(.B"s?F99.IXp0Grc'(?sX#2QQM3()i*M2XKka(!L6Og^RDd!IR9e5nI][H4"+MBU>sZZ"(Gi9'qYH.[Gd3
%6bq4)'!jYtKuGgZ@:Nl'MEuF+Ael2Eh3MegLtr'kd7nJ.h#OuhTXb4u;sK:*E<<XF@'*&ec3+3//CD$R=8^FflA!uYi<BM:/Y*YC
%aWDrLEX(#&(VE^\;bhP<-f$PTS&N=p+K'<OEcA@Dm`6MI98IKB<KI<onXQ!NUj-eTm]/Yo(+p5eP(@[EL4a<pgkCg2akW"ud2F]_
%Ctr*H_JPWo&saIN91aD0.Q<Y[[trs;9NfUQP<4UXnD6&rQ,.Bpgk\<+'sqh/gdI2M6-eMF+OWbO*-Ykd>Y7!D`"9]nN>q+&F:T9,
%2lPc<i`\`iVmMoi3Je\&DS"X<`,0uWEO^(h@^s7t0t"$Lb*MhF:FnfA;o>Cd$uR%TAK``9DO5qP>4""VE'l13+(NZ-Qk29Uf%Z7l
%Q*Rgh>0mPo+p,t2\06]s4(/u]Cr<5Z?uTV:Q+b'h\C5sF#6Wo(H&*]?`8AkO86h(lDtC.,N"(6*3/#5sZL\JCBUS4tiGXp8O=87V
%.T!^RU3ha3c'QQU&`mqPE.j,DQ2kc'j"\aTD3bno]b%M21d`m7$K1na@p61le;j`Oe+-&@=:)c;0gdW'J6NGF^6\r2BkWa:+@QDl
%9jnHD1'hd1AGm!,E!)BIiDLk=iu(ApVBKpAk@-g:QC4>c2I!BcZYm#4>iOW39U]^0%AT%8/n*Ee.\I_Ri.aK@)@V1dBsppnUIa<4
%:F3Bn&@aG'Kp-'Zge\2$(9YU6c4s^(i9#8Ad3M'%+Q=U]-X+gR/r5e/c!&Kd2])`X,SJa1@W7O%_&+W=i-%[^<s!qPX%.t"Q^nbA
%)ad`f7?kX5^d:U-<X(M>Z_VQ,(u33c,>QK+\<4BM#^f??:US>D)8M6I3)_hfVZl;A>Z(u[)ZtiXRhC4?L*Nk`L;-I#OjG+j'qlo&
%AD'<?(r]Z-RN\[.0]nZ?r\hO@P9?V?^J/Jle$0=1)fM<k7Z6/!'8&n1d'o-;,]mjVD^Ve0S1T)W=[p(",'k2nJ-=u9jDBR#P'(0J
%gTa>-/9//Z8=*)(h2Y4L\"R][Ah"OpgGg(IMV+f&,utkf6#M<a8-P\Tgl=b>j&"ZW*,@ICijJl$U[=sEgIBF1Y2"c?c+"9n',7kq
%WI_D"g'/a\AiYLtNdRtCUnDQ[eRHWEcT0`2HK>EnRpEqpE&\cYG3#.P5t/k<A<Nfa:--9-Q"RqO;04(&"?)Ae[LkmCBLYAAL:`OG
%b5et:^8'CcibQGg8?B58CBMO@MjpDU#:<*Q"P6,==6uDq63JbV7FIj:8[M#_TW/<P7W9!n!X>aN&oaG7F1";_Ah[0jX,Uq,3FF78
%3t/NbJSO4Q`<=Bt;]AW+?OTjPYu[Q-Y^$4=1m[&MMb%^O+fmV1LtZ:13QQp?,k\Xbe)kY11^p5?fL(GQBd<P0]6O^\NF),O$r&fW
%o()>+BolsS+S6jO4,e=E)4#GZ2E-9:`Z=l4cHKScfQ3EY@n>>+W8^-kC7&[SP7g>(HG<PqPbO/L'BFm7Zk8Rg\7qA)SXP2&@;)R4
%.FP.#m5.^RG*/GW&8=]s<e,?3l.6l'[_O_Z+N^CNV6lT+ZVu!3=EZS*k1aou2E`TR=;Z.gnUXe_2F>m6;CR1'PLpSo:i:Gk!2p*k
%SJoCmOdZ_$Nsq`'3WTZ#_1ZOo!6'co&iH.f6,RIDT1a(,L't$$)(6Z*7*UHG,rNM8ZUs9,&L-``[eNQ'RU,\RKk<[rW%8%qG$RfB
%/46c*k`hr)1n,P*7aN&e[K%I-,-Fac!*UTl<"1[R?>&\O#+GLm_O6l&^G@].eIlD(Ap0UMZ,.]k_&ZouO<J4'cYsVmS]=7:+%3T'
%iFPA!);U1n`c^p:Q"\iE,S"iqG%u9RL4Ck1b5sb07lV\fR3HJ$!R"'qZQWlr*-anM2@gT4h(YX@*pa_N?qAs-W+rn\::mB'<TrBK
%b3$r?6,bgmT.4XGkbXEYPSp)]J`Jr4-EkD;Pa`jERn5/oFf([FG!0H'R<#U8Ur:BpPsUKcS8:kteo.d_ChR7.V!A^Tfapf5BZ%rH
%KE942PYK]!DlNr_VI&FW4*iE.]TAXJ_.9kQhcpJOc$Q5Mg0h3l>DgF.ZC(^1-+SiRVDQYG)oAt77!:E'A90nE&l&as9s)poS-33E
%,HdiS>>-q#P*Jn]AFi2@]8C('?"O9:'!3^oJMi.L)C8'8ce+3L2OnTRMjaBM0\PH!p4FTWC`6gi5V\XBT!>(HLgmXrW!bG:[:&1l
%9H^j]A.qe+BKNq;cVW7dQu%Mjd/Ko0C^PQD@adrj.g=L0`+6c:Win]Cfn`go@U98&NAg@W8sjE=0-de,d.Nj-NBT3bXAl;`,tKpk
%B$;a1%Du$6#n/+!Vb\1",t^')g;IqK8i@A^d7F`m)tjOl[$<&m6BXt#S<D.l7@B<2aej^t"!pRJ`.UTO:<=9a(b%%/al]F_CK@6A
%dk5R;kpaOG>s0bW8iDa*!eN('Z6^&=9l`iaHXK`t8]c^89Sal]82d:?SH?p1),9Nn+k`+,fMmH56S.juKk.N\4:m3Wo>=k9+d,3u
%GrcT1NBr[&WA=;aP+;tQOR.R$+kcVtZ.p2i2/Q2'>Yp)aj1m,?TP`oWiQO!]F$UD#D5DuKbql'3&L\gWNnlH6RiZR4)@RdYbQ%i)
%(d^,DRAO"W*r&<HWp6@\")qiB\0ZfEqBO7g2JG^6nb&_,EALR4T)iK/%?Jd\5dj'a-Z2]#<jPA\'=)<S99'(Z8QKsr;iedqcP-[(
%#*@*OBYk49jbs7@:CJ?bP/u8-"X2HOJS8D%5W3IS,W?Q*2C5ZP#p>]=M1[2hZM>:"8N2HAqVW6-B+W`M.nGD1$'@r^R$QYQMAQA7
%O]7ZH68hk0.=G8AA2F)#1\EK4/jMi<a1i7mBnl.`mg(*V@e/>,,+B4Z/&TH*KL(nM7Q*Jn0gpbY9l#^KTr4cgRaP/IA5`s2Zt>+4
%h@sm=+k^sFKX%Mk@@&2h2NV`mJ8#_YODI*?`9<L9fau>o1R)]H,eV;sZIst@>9um"`I)6OOtFJe36E]'N.dG</]I'@7X-]Ygeb9g
%B>g(T;R5O+U&nSoACF4I8:dIF1W,VXPQlRGSV-%mb*6]`^"e2r2'F1KRq`*Q7!:1_r"l@X$'e$^g#!bQI__Y0:YlD!TH0(45+f/C
%@I_uph0pR:>Nj_%etO\4Yp2]u=uLQ"k%Tan:6]lu-=\E<I^FK<:$p9KfSLJt,qsL/@pea]+W4K6G+r+sALKIbk8:M$9Pf`Ucne4/
%7(CT!?6Wht4L#'!,OUMKSY8`(RNYqq@7-D1,[79a7)Cu?0Pl'A;Z@"1gXE5IbJK!aL"6Y>S&kbIK[5KsA;oOW,UdJ.5`&FKE0$tY
%8/FSE8CSd)f5Rr'P0.7<I8`\L7);@6(G4&>K$D*o+NYMR5ZX^m!4Esf]i4aY^+&_knCMc'WCo.I?c,/^?8@4A,Q/cb82a1t^4K-Q
%k\CH\7l9:Bhh3Kun24H\YgScHf>n"K`L+1B_oEoA:`W5#[Lpr5&UGH7e>?Y\drLhq3V")N.J-r5LtD,<;-c,rCW+CaH3@Uu<2AK&
%A__Fh(eUXQY&PJAnHO/r:T!Zc`4?F9k0B^(6W:;@OKLt,aNC;o<'rJ`%?dk+EC7dAEj"@<O6,j+T$)2D,BF44kZIX^L2e5\P)EZk
%>iY&3R@#eSSQHJ7Q>_c+=9tgX[tZ2!4ISmOL'g5L^4BK57Sn,NMJR'M37?Rm12Rn''8dBoAhZVCd%4ME>>+Bh0O_NCN+u0J':lCj
%i'5@\lc9cl0hcB+$nt6<8Dtb(U,?`LnC&(bSL8P1ce?tRiA/\>0^MP%ZNaX%?;C[0%fIBlCK]5!fC6R#,_OI.`A8e*cii9m5h;%n
%UerY_RQ)6-IhZCPDdsNF'#luZr"D`.L0>rN7F`hZ[sBNZ\"$k9#7CF[#%7sI&EfT-=Sj!e<!HJ%[aq5EX-&VjXAd)>'.KgblC;0t
%EDHdFmDigW<#6\\,jUcCeJs/ZfZ%2%S3P#k)fW3=\!OVTaKC^H9MJ(K4l*N!>4'-RVUY!BPps+k).k`G`M#2RdZ9OK;G4f?09QGB
%bH$AJ"VLr>m?t8[-!GGg$o$]sLK+S:m51p0O=RFY4m&\X(=4a5CmN^9Qih.qeJR59d\_(^FbmCh-cf4<Z(At*;2V?-e]Lb)F\\o2
%l'lfC/>P>RRdl\@*D:SB&O^cMV5>0:-\uM=[r+R3f$N)*T/tps9VpCm,a;+Zf(@K=A2:4Wd%7ImAoUb+(akh7dDMW.;]F3`&N$lu
%XlX*YfMnVB0XYOC-C;9mOX-7R=DEi"ZrCf:*[Gs9!2ZR1`M@8.(p.aZ9;KT&E#"V""0%D$QRWf(4DG:B4ibX>iK>U%U7=^?X+k1n
%e=P&%%#^QGrON\I'K'q2,"Y.u;M@IMLSs61,P+Z=fL64V7]dU:F\&!SRmX-"/n5N4#sp5+0!V$9W*uUKc?`>_Tk8DH@jEs;MnuTo
%+YtGf#m*hjisYccC]FA]"0BbP3L:ZlFc^:U;?NUNO>tFV%QtIN>XVE+.,cZoPkmAL+Ug[m!,BqU!YsA#!5Lstr,c=\,!s+'o]a_$
%[pkI_*LcI&78Lf+bSXAJSqb]n@blt#kqH('P1o46!_[r4J^Pr`D7kfC4.Wn$m4CYFI=jM7:8b63--FGG8=;#<OOL2.g1#le@..i_
%>e<d;h0KNJ)JNnp+Ok#u"'pO*fQ<9i`GNM][U<Z6O9X]s3baF-*BU;$(b*=pknc1HBe(T?VN')'VISHI/NapPaui@a+Oc,s(*er6
%'3A&:Jsai5/J=q?e,lMha%h8W0-)!*9*m82?u)Gh.:"tEeX:==dL[Zr68%K-VQRR?9?/BVb(-;J:q`kTZ8=OJL.RB@Ss\4AL+A6d
%A?!Zd/"M?nL)[3N"b$J&9oHQ/"=frZC6gWO'.k#5OOC"$I0h;20W$hTPp_P>;gLVB-]N(C504F3g+peZ9UZ5\qW*keS`n9LUSO$W
%jXSR+,SNd%>XO[/^f-/>%[*\'S!Dr'K:g+r(WAqC^?UY'MKE%'V?upM_!]k"+k"S$oSt&i_*k%-bn-Z_?6C[H$BXDVFcn!IkerR$
%%6ci'PF87;1O#!AklNtNU#?b-NI+9m*#tOG&rp5Z7UuEPIF)As;j.Q!W6p=FadLP5nIQXMFJA1XbD.u+6Q$`#0OA0c.k_gZ[O<b9
%T]89Rfb,nu1?<$lKh%]rFT[P6E.&?=@7A(hj_.(uQr!4`X$l2?!_"rd]EjCLF3Gnu$_,QVGDF.*_p9*5?,Jf&-rT*:Kg\EXcd"5=
%Xe:?'cD=-hNg(Yt_8J;Q]8@cW!RW<@5k;0$BTUkX:mb3t!_lWF_kBB\&e]`#TlFTUN2WJEEL?=P,@G1)aBUsP\^3=F)1FDT?(g]t
%AL_f#d3BD6%?aX,k"+^gJBA6fBEVcVo4`a%4PskU+&fr]QM$Fd3,%SqDOAnGj\-ZU0PI&HA+'[2)COlNiR3,5&-rV/;:'m6R?gFk
%J9@9,kB&H836Qk:WY-n3GGT)J)!H%iS[6XLao8pAaT&cuhU52o+GA\5o1jWa]?u(NYHtPb?Yo(>hbs6ms8MK_!WV:Co#LFT&+2A\
%fgl#0s5r^p\F97&c^m>hCc2!/\P&jul.3es?i-sKp;bkQ#.r->_g\B$:1[4u><ghRF19iVl8I^+H5#n2gAUr1pfIL=6%aZWan55K
%KpPYQoLHT;W3(4^c(3\i$16I>I;,#'JSB@=W4VY6F0!&[Tf:\C:n?ieHtmKk(H[E>Xm@q^4+EgWZY^2Z=7'V7=.t,?eq<8L_P</"
%Xb5I+8,)B<27G(-$B58?R4>!#98,QW)=B,I1_P^PpriYUepS%_Rb0jkDB-)'mENZ(:I;3Fo3p8^+'=<DmRjt94)@o"jA!OCNR0[5
%4M*Zooj6[-\+08JH]_=*gl_;_lC<'Ace=0OX.0(a+,qacI'N47qUFr7pRD-+PIB75f6V9-ZIu8-[o2OLMp4gVE)5f9g&#[Ij]RL2
%iPnZC%g.)Gc1]gDVfU5Kf))"UKf>2S*RpH\mi6L0)\9OQKAG[%"jQ&&rg,I"p9:aZc1X`p8%B_u^urm=BE+XRC\Ff'QQL;ce:5fY
%JbeEIp;F*';/QZO1Hrqjj&%EG+6CL4\RASR\%D<,q/&:`1je9#gp*Cfr*ca[h.K.%EYXnVnQBaWQ5cIX`b2hl].lLmrFaGs_8SIY
%<U.kcSE7%Tc=5gp7VdF]^=E&N6Fa.0]aJf5WRcoaIGU*WP)&N7YYS<HT6pO=ji/B:%3;F@AJUaGWa?^I_io8DIs?VcU_`HmIb<sD
%lg;ZTHT0`+F+rS]<FlWp)X\j5<g=tMl`X`h*^d\gFgec+NW(B5@>*h?.f2,eZb-HA(t!`#SQ;Y8o?Z6VcRkuAk"Db4D,AsrC<T\6
%Ms)1)\*KNCp!%fj%[EKDQ\9k<NSZs2F7o$uGr(??gBsi#FS`4Amk/b:]mdY#V,uP\19ga<eN:;3f0Q=j3*-@V91JQhOWD$=s.0+I
%^/fJ,?O(h!FK9OofT3gVV-\Q,1[pIR1"JD1G5l86$eL@[G8oj/<M-;J0To&SKl[Q"hFWK/-TJ$GjubhYiI3SXG31fWQXeZKJ-t&J
%hFYjpnR\B@TS?L45+H-`.J4i$C5$r:arK:Xi"WBC#JWkQr5&'"hJMt1pDa&\%cri,))%Gbr#@fsd-lsrAq-r>4Rn(ahAf&W&:>Nl
%ms4'M+CF?=7X(b]-TR@D:A'He1#L"^]o-lpcT')1f^?6c.*C^;PHhCBl*M5<NQ0QW?EiB!A?%J]L>IelTaqr$NldimO9aUDD`&'+
%9Jt:<:bQpkfrA+n16:?Ro:go,<Tq?ApggG<O)ll5"4_]Zh1ONYX0Y`5aWA</aESRAqIT";/7',A+0\@Hb]r[SGBE'W&._tocYD+1
%G6NK>kfiMaS1c\>#sQ4'Ya&P4YYU2cR,,MS7:@1$\aEEoIn)?)^I"ah34E8lFu6[XBP5npCcipP-o`Y6Uc?/iVC)d30B"*kUQoH2
%n-<$2<#AX\ZZT=5bg:]H?;tlR/FD$Cm7(m)d;!JuZPe1<ae8L>:r1\(rr.=maaeT)j_!tS<SqWZ2qn4Con/C^Eh!I-cbqb,\tpLp
%I]*+KMV_h]%eV#$m(:_q4o;_rhY5DWhGpeZNQrU<SM?1X>iV-3%/fJ!Tf1]l>GZNulr1Si1?h@#4t7BW7VC:Rkfidmotr]B[O]?j
%D)Y\$C8#%;_7e2&;l\1jqrQ/WJM[1HV#:iX/_f+,I[-8=AqTA=[m=$,_L("jCA+-H<-h!Al(E?&@7f^-W[N(^_=aMXBifR3W-*9.
%8fU:a`=s4$Wa#/ITCjib*HoU&=23Uo\:I5pJW7)Fh:\gFY``%>l:.i-DU^1IS8?b\S'O,q&dJb<#Lt9$_RnJdKtSt-,&'!_P=<1@
%goiQfDu?Oq\,]pFfjl(Z1)'u#c&39m;Pc1E@_N]<8<c`M@FusI"cPk&]NC:E(V"!`'h6k9(.J*Y'X9&dk16JI4X2#+;F.]1O][hU
%Z&r(U)8dPSZ?_RA;6"_M*/cS47JSlcRgU*lir00l;(=.A_nJ3<W*#;/M\M(IV)+m@;3-#S8u6_dlr3kW`hI9UUf`j2SJd\qs#n%P
%UDQp.l!9ljeJRAZ*,Tq,V$O9pRi":J`TXsj+*n`U]RpU203iboELBLfO5JVW1lD03'oUt:oJ:Gofae*n%s25C+(]&sY+932MoP'd
%Kh!h'f>d.1G[28FF`!tE8]L&L`DY;+GcB_'D7lnI[o]uBZ?Dq+[IL7T?If&(X'3mqoPjm1m9t>e'ct1UFifZ.")pA^c9I<JnMI98
%#fb>,4H2sC-?LTO$IO[XknfTd&drO]V2bFdC-8UUs(\pl>4jNj#E\O:Ch($1f^G?O`>CIW9=)=^fP\,n0"b<olT/_/qob8G#)0L<
%lIoC!all*+/geeR$pkgH&;j\G[P7h/PhlFC-tda89L9WD31Fl*H-V'^B)d$$ZN%\)rLEi\<q_<*+-Y_?\.cr/LbHZC)I9G5IfI8N
%G;/QtPmWM39Fu]]medm=p]ko8\6qLeMW8L)=0lt[NeTbi^9`=9l"*B:e\dU%WIMFL%<<Uo1;+XK<M4rKDsnrU;Xn=kdD.U&$@OnU
%Vc;qK0L41!66E4$oXt:No.#/J.3,D<#Ch9%s),0X]AMgR=aESQG<Fb,4<hCJjV,j/m?'U=^3CeZa\d.JSFbQs9JFgQdr4UQ*W(>A
%e,MK0nDLO1jg"i0m/J+'J&hQGF*;?cruG;Cn$j"ME;P-a4i.<f3O^JQP%1-QOBP>4h#9,'q2Tm;A"W5#'nH^,5]_;LYh*"BZnnPT
%?"JtCF2brES>m68]cu[Re9Xs)qU0&b3e*aW[8q?]\">OFh#pcc6LTq@0JKW&_GYj8h9HL,<Sq#kq2he._nOUboY*S[;WSsZ/S*F!
%1U`ASo\<YZBcihdNpYQQ9K"em<Ri23"_5SbZ@>TD^U;O-1toDo/[9:GgUin9SQgS#40;!P<k#>VX4+2[:\8F`m:V&R*KgclbkfrR
%raGi&@WnS*gpA'N.#]WtVpWY9X(X^JZlQB=B":K#`)C>D"-$#XQ@m1U<Sp8dfOp,i"h$S(A)kI')]sA2NQk/EmJa?6JH>RV.uZOV
%q)Jkghd/(fdn9(Pjfa='KQO@,k*M#904VoCf^LXS]Sm:QA&HLBn1lo7S@MS7bT_cX[DL;i1,ccRnHj;RGWCiDAT2tD`JO1()?\F!
%*dC0.Joos:'B_,C%)%MZU1MdPE0JZl=/OB"9iM,rN+!C;d>).c9iUAp(cF+q4lqH`^DQNt_;X8n>L!.N]m6?cICqQMnU`[U*/?mQ
%)>;<p9O\q"c*@*H4S8O13D[L:ZT!mN9G`W&FH6)VVD!qn97n.[ru"SZqJL_^oB3VSbsfguY<\WsBB9Y`8hfi#lkKjrDH3W7b!q"%
%>#kE<dQULm_dC;F4beFYl>1D5)L]haDI]a,P!!K#I[,?Z0:i4DcJ-%"LOil\1DdH$p@s;aiD+'hmp&&'K^Lau71S"*KA,kNTLsG-
%Ci371XOD=pgV3\tVs!N-p`2nDB&0].!3Dp4%o@t`eqkkKr*Nqq`_`0.U9P_KK[)D!DoYC$J/tCW+3&J_TfqY#g708>0ueBq@='e?
%43#p50d:e"s3=cX?`t/0G1$94S)66uAMBBY](O<s^%K%eX:gFCf:CS<qsf;a0,:QJ,K$p/jsk=W2X7uqrGLZe@ACM=j\U#orLj!f
%L"Xp=ggA;1kT?)\_MaBYeZ!_)^#/0pSn-V.R6/d`A[>C9Dl)%&4LHg<Z9JO&<E_9c%N;@Q.#pK(W7([Lh<jQ1)2`5gW1I6f@ZiNK
%Tr_#(;am\N%!#8cF.YpSq_Z;VS^a8Ep1\KcTCZHCI[&gSj^EAnYa+U6UM1FTE:f>dCA"f8&q1tqA<<\Bo-J[A%Ad'br>.!BX&=/]
%!FPQ13tt0NHjfjs;V(Oi"asAgJjUUM<M^'>45d/hQ<H1]Q?[N86J:@hMee9T&8X23`G=@kg>W@:T8q6<_f_9G[cWQFF+]l4j3ufY
%1cIVC?0'I>"V#<rRN%8>>jTqp"cTOoE9Fb=UkfUGc;j)]pc(2rcAdm+j5\qi3&a%Hjl`9*@NFV]F_?)l)m85VRndU3Vd$@1R10$s
%DUuK$Vn$Q5\CfuTMcPA%_?jWZA/P4f[:049Lm3H0H*5)QO#c>pN$)22J=X;3Mq@\(A.6Hph9&]3.CjnKUK-4,]/:b+c9Zlbg&H*!
%OtF&ms3doVV:KgB)KuoHbE'k0Wn<q@R7?p*n4%F6>r_.^eWFtd\'YedSTCL4K-$/E9,DA\)sqrs'n@W7[W/:qAj,T4VhCgH$u3RX
%Y!BD/=g+X`PZeTt=+BX=9&=K#\b"M'QMb4TNa=E<r`+d;koFrVl^Nm6YH?T-I";/ch5FSuF_(3Bl@iq*39\<R/'P^'fB3'@-0L\5
%3N*`5<PT&$>1mg/c/")^KBa'cklEJ`I[']9gn]u"[$l47`fIbE/cngk'-'S\DQF_721kq4:$4!:4#5MUKgUOXpc6Vjhd/(Br`.Sr
%c/#Q#FjOh]cIKc/P-InA<f2@!;Dcs]^AEnklPps[V<GdanBY5jI`Re/*uLn<r,65t$:\9FA,"hOD2KtKN<V8Q.W!sg-i*F.I0bS>
%%oqcfh>jI!Ps1^k)(P<q+']oQh.D.\^JP=)5>jT(717nQDP/'MrNXo>YLT*i*[/Rnit*kWj3;R'Pa#V6*38^?]K$K#!^-,Pi]0fO
%j1TI)pVp(;+HMEi%]e%LA(JNEGoo9C/k0kL>c\Rn(Q_10-8&jDIEWKF1HVc82?jg(ADBm=qTj.G=io?8O?ZckH)BOK/<*$3Fm[ee
%O/p&X)2V)R6$@D>P`W8752!>)h.NY!XPmJ4/sa@u;%Xm74sOs,F(jVP)7((-f:dt1b[(EE`fIG]%AZ(ds&)&I+D:][6RFEjCu%)c
%[0o!=7_hRs<rtGUnqWp<08-*2"Q%DMcQK\hWU5htVi*4.68mf$c(^>%W%ZR_KX(5o]@"=LljhDA0l1d<?f.gQG"9E^j\8^Yn[$-:
%X4gHEXTuM-gcoUn^)4t'j<>&=\TkuZ\ELis_0D=VHC25ZIkb.IBQ+6<3(O@)fr_`1gJo^P%,mSgE2J]fWG+`'Fe1Z"A0_R*d]:3!
%dUUbHEGpUUD[W\upk86_a6P_'o#HDcrh)>4B+^r_$]eQUj%=[A(.4fIK]qIf:4"Si'JbDT<PI,<BsrqLq;;385N(E3q:f*=0`1So
%9B9VB['8*6BM9t#%sto%cg'oo:89nUg>0p>nZ4rMaBt;!X]BL52@OI!ZI<O4:P9AdrOId^Xa5KrlGT4L6?_,F)u'H)3T6!;chT_0
%AZSgtrI]?lPlIZ]I/gfQj_kO_r]5km]kkDGBm9Pmo/B@SR>'4Y?Ea@u_0S!rSnGr+k%(p[r6_a.k./t`[^Yh-=>NU^ok&P;RbZN"
%Khfj-RiBCT[be3+m[\@N@_LCK/7$`llnqPQaQ"qUeZLgEEFe%P3nNW2BP_jt6+"VG8jhuU+kH#IQiI#V1\!I%ku/r+F2E&HSk].Z
%_3rsP?hVMVpga$T/UT`ob!\/^AdY/AVc!0LQq%h]C\;TFfR>Dpg09?Wr^gBVrF5EmN9>G3s7$,8moQiVI+?4tYVi\O/^]Pqql5D/
%'nc")Fm%a4O?`640Qm?)_"3bHg!EOm3QFek%hf1m9':Glma28SDiTl7ldfN'O!\IFobo?11to!7>N^7Thu?8.F2%)g5r@QE3Dne6
%/q+(92o5gG7A5nlfmaYoN"WKhd_L!hM7<-Y5*aS=d:00(hYKagLnF/q-<$U^q+$t/NU3+!^D`Ss\/G+;.GK&gASYof(>`j2TAFtO
%gKP/*&'kUW2o"apZ7u9>iTU6-iV:+;p[9paI`,^YG`eJ+MuK4_Vi`'27>o%0M7M?:fc'$>(AmkK>&jK[k\><-7b#EAe+jdHa%O.U
%qrd8DlCXR+7=2[\Nu.2uZ"QX9P!UaC@lNrIK-,FM8&_!6Qg>i;n@(5YYao17A<3)D^V+/Bh:VMPro;NNLL3+&-%!:8O-f5)0A5#F
%*;HL'ZU,9O?6"cQSN*#OFp62&4fmoGms)Aa0@t]'\ULg5h0uqs/@CdNNL/u$E]ma3s-?e5%0N&Jh&o7&%!LD_oOZR-mFS7a,`&!>
%?cU3fp3>-e];tXpmH4ALHJa/(?5Tm"j&LH=CB'8ngWPmmB\%6"S0ehLmDMdudC&#MF^s^o^?`gA^6@1UPHcul]P@KF<Vr+IShC!;
%m.Kf'l^dRG4^PP:X7kFQ[DO83UP-Gu;%P'0*9I;/XN5j0iZu<[*QOSZm>dP!nT+T;Qg;rCmS`M!o).%\fTJC(Y/e`Y3LB&]o'XPV
%mXI)fn&p@^K6D;rfkN_j0=p14GJ*/=%3=+ZNl!&8OsF!I3DQ>C3G.beVBWo_*Po`-NcjF1>cn=6,;6J8)\^O:AEOBC1-M#tp'($f
%4=?.V`)O]^SGG;0U<&5p87OXEh*MIa_U1C,B!9V,?6`4Rfp`D1]L_dDXk!I21C9U#AsBM9HV*:T?d)*jnrZ'B?t,t32>,bgPXjb?
%S4=5]=gue*57D&RQn`tuFUkZU#Pk*Bnh]gu0$5DqPDE^Y0(?O+0tWa@,bC&7'Z0d.0bd:-ilR8"TCX\X1J)'5:U"Ygft</?m;2KP
%1p\U"?="J?ngoC]q&i.!$^PMh7rZAlq0qPV$1Bj6Y0M+&$%<?&<1#gcW(l+t:\0>OX7*2:A6o+QVn/!3(1H8O.:0^VpgI\klTk.c
%Wu#CN63?OL*Y?_T%1"U,O,.:96kCW#6r`1(`+KgRbrEjF3%b^bUZ>2l%IpBVL4<bg%!/`GJ8CJM60$hMDRYh#&K`oTG$EZ"pP8Li
%3!_%]l-p!Q^r#1h-T%?o2\34W._LS=H,Dc'@kPjV]kmCHNPDrW5$6Y9oHJY02^aJFMi"e:0jd=OA-6[<DrjHVMijc+QCGR?<rIsS
%C?F3-7Qm5R0C[WKNLmpq;Cc*fn*$,JNG,kj4U8\+q#J91f^;0Qqn?n5^$L.D\)kUq2?eE-mIL#BDm/K_+pdu=o1\@m['F7U\A[P@
%Nos!"Q)j*OkEt)DbYZ6C#&_S?HN$Y#gZMPMB@BlXk7bFBT&&p<S%k7B*nZ3ZiW9&?*UR4a>XQir+ZW<H0]in>j'm8DJXCW`@o#,]
%_eDIi9X8I6ej0,+7n$QVKSL'VamQWRiM0H>Yh(7SDm&V3j7r;NoEk?1GPW74OK;7FrW0Vl$Zf$cACRU+g$T1,.km.b<ce9\1LRl\
%s+",,)sF<*PKW&PVbK-8nrd\![T?\f4kbfal0.sGgj8/Xcn0-C3`qhL2E/+6NU53,N[)"hS*!g#q=ikY/mhj'(&&aY_W-4;h$/T]
%[rW_47JHu2^&K]rm/+J)5P^XPn:/g'nMjGr`q[IQKHCYe7I_4Bie2M,5S;qm+J+t^^RYZqn<,drN[EQ2O0YDU3;jBG'-0#(km)E1
%:L&$VRN6BR)+Sa>Pl2+gB8fO^GLs--1O8r'ec/HNc.8B]#H`A21U)brM2/;!]9p?nmBLH`lWU`1p.IOkj*%94<?U(gNQPP-[i3p>
%Q#<[?<57mi?XI?qe*`;\aq%SL"Q"UHP:Q[lJ,d!dH/)>eH*[ld])K8*e#IK%ALkN%3:l.<1[uUbs2E`QMUiR7Nn`um%hALo]Dp:r
%-q/J'B?W$qIfCp]KYMpeo%AL+@dH/Ha7V+_)k@a.lMhUpe46;^I=q6:\[-RkTBSbeomZU:07TKN!fV!o>*uW-fOJt\f,@jh)r(>C
%(93o_07_c;\bK_%H.LW"ci:,.q+fgf&tf*ma&Dg)QTrbh[sK4sW-<Ttc@jARNU_c[Mm_3Ll'6`=q+%j?Ci<n@G,ma)m#eG0qTnt2
%.QjkCoC"\qs*eV8SbCb0#-rEScK8GCX&:<>e*f:FrqV1+(#aZ<A$pO:7!54r1S`+I*VdfBs.XK(O6Xmig().G7mApCHi;7h&1i;q
%FGSf?eY+^,LWpU'l6GuZQoF>D=76'sn)n.Sjkf^'6SQ5E?mY9LR[Y++)3<TmcAR,:'0WVT]+'`%3r?mcVF.V;-[mlg7ELtrqm3h%
%DtDZ<e!<AK]@k8^&N1Z%ftT2*qY"K&qW6/(G4r0<X4gH.,i*L#*UCZCCioNAVLddmC:C`pG,[+NbdSAtNDdUC;Q>p4_BqGd>",mQ
%%E3b^2u<3L9\oOT2j=7$S!hu.Mb9g#=(k<j%Ej"W\eEXQPGq-/#89o!m@D/k:1Ib8F)ZA37c;\Ik=9-m+4Rd.nrK%RZX<1g*L6:-
%3rPhZHE1c"G\h!Pej4@PAV#^s40<DWR>"-E$]"]+`/ArFhrlu52NE59HY%LcZ.I8rWL^s+`(mdOqf>*YB!9[`pDXbb0_q.;R8W?m
%ih1bIkYCc=qhM:9YTmLKd%l^@Xp=XdI;aSV^:(S;2?2Ai1(_j;hX,6'lJ8S!XG7hF`R#"*jMXM$??UO9*1Y]*Vq\GNm``[VH^Kl2
%cjroil5&jIbdPK;34!UR%rUGU^27USku,4n8%lB<HCfgl\^kWi)VmUr'/(;Sod<eKRf3(PZdnDla^8VqdeL+h:c("ps7cYQ;=Vsj
%kk.6BZVbYSBH/##HMIif-fT-p$?92H7QVPM]Z'k<_)@O56=isR=eiHAa#6H?`/@)C/e8>BX`VDE@K.GhhIg)6h#;$4[+V)6=8k8E
%FBOiRTpOSBmn)Q_0i-GifX;e\0[I?%8#(D26ZDMKoqcn!Qa\sO7q8lt^$G"sf%Z\7c/.G;S#tg=2E5[,r@8g,4'<AG8+16,>sERt
%Xg!dtSNjCrn?LTt6+>-UG>Rbsp5Z43GbY&;n1K2SXCLlr4Dk#DBUs.Dfcnm[[MolCH<SPuca_Am1KQ-"]smLpraDj=T)S%F(S`DU
%lS5"R'gBChmPcN!gSsoshFKl#"(pmHG0I%!hfmG?p\[=c2LU6.ZLV']h]5I+b;iF7r9YZ,XK8K^=qBrtXKPD]S+RO$I?+ht=)Dd>
%ls2HZO-WFUMgp55JVpZ1G/SYJf<_Sk$1#^>cIVN,H]^p&EH6Oj8=$m\5P%%r`'KWIiS@7QXj]CL^o_6t5N];X]8\2h%hC@XH4tC)
%9rsf*A:$IHoOo:kinnuCo:>)Z2VT!hH%!'tGBa%S?_93aRYUco($3?`dSf7&A39?"b?JC;A,F82?GJfirgE6hQS@rrFQ1%pIc?j*
%X#f1j9/FmSWS,IB?Gp8\i1Q&\U[t[#NERm8;=9RTX%1dTZQGJpZ*LfeNi.T^B0@mCb_j_>)P?uDb3_rK@a_47,L]FNqTR`hEn0U=
%S&n()c%TNJ?WS0Cq6Q[=:Jp_U3ZE,F-uYRan=qr99fm`F^"#/!?]I&1m55D4ZB"@DdB8u+)r4hq_m6kO2pF0%.%fC1'1^dpQ0CEE
%1"R+5I&\gX5sOdR4DJeY-49)'=V'4=Vo<R:f\,/OgVE[>g"r<aK<EW!:2I[Pn*]k_Bn'BCarc,cCLl`I=7^h9WEXf19k.]4F`XV2
%R=Ef0oY3k8()B+Icb.)S(1uKEhqdV-k-j?gq+U214T9EL>h]ug@]-Rrf\4[FW`Hb.>o[[Oq5N?[a]ffFo!5r!gR\'!ZUXf)k'aht
%Z#;I7=>[S-l&!YWL;uFJj(Pd]IPu3/>+(C['X\T=;4@2?B'TefnFWU6_B$SRnO)"g/e--pCnPA*imu&fQ\jgAVB'eT(gskfI>k%1
%)MCVQg<$Hh&+,SllS'dNm#O6^m[H/]Aj"D2Z$L7EHHi#SE@9aUf;&k`0:hs-Ct[KZ[Mi-aepA@\rdOh(bQYBO5/-E)X#mdt;B1a7
%ZIrr)YItIQ`bGB:;nJlC0YYU:q.#n<\)o_W`"UbGkIkA0DJ+<FVL3j;&#dN,itcsbl1*L]hO-HR$u.$Imrb07S+SOr[p_Mgb_CV;
%dF6t76#6)8.8,m^g2-LY*R.`^I^<%[m$uGGm$5!D#8J;82E\)Dgpe8>**H$BMUAM<!tA$E_JCPlG%#-UdP`'9I:T4CY6M#dUtn"7
%je;/a=cH20MU-%Eg$KcLeHWTf1K-QaC=b%js./u!3<*jF]=l["?s06QCbc`/pP\u2X)W-WWLsS5m\E28r(\^u0&F]io4YblTA++O
%Z2R=iKC3pG>FWsdG.kd&4"(!ehGu;qDJi]><rM7,D)@rDT(^TZF7$sWEt;&bKd-b]gLlHg1s@kMp)0LREq+EtgVMq%\ZB4X\"4T@
%)Q,_MZtf5A`j&[6Hlg=WhN;F?EGPS]#BOH$)fP2TB&2lPH_DCMcueH?VC+4M%C0Ap3pthd%E3.,7akE0[+-F;!@(a\Hr`G)A`mIm
%Zk\?JHDeH*[b*XBG4n.@i>F[IG.R!>fJ2#pqlmbZg0g%4C2pH[k4h#JgNpJK>rAN:47gt+\R3j]ApQ*O/5A<2=c1ukMIsO^pS9Uu
%I\tF+[D(Z8afH(L=1OacKGuU'lHT8\V]F:q/N`pe1QUgqBRV`Lb,=M.F%u10>r9NR\H-TMq,a?!f'%!1ns9*&`7UP#QrLD<HV=;?
%7rP**!1BmZ_LSu>Q)j*aq<"^JGDW$Ugg;Cp<Va*$)0jHkc_+[15@U]VW42/c0u)?tL5L]XV+6T0E4N61a8u4H<i`>BVJD5/5M"]I
%\`5?hY<GWuh612RhHjIEIQ$lK^\,6?lb7@Re%rp<pMR.jl_i#)cea.G<o4qchOf8do\f&eYI3*7hj8,dCKDiu[@,(!fuGGue!8Ie
%q>[b(WHn6L5<j1p+"h^+lcY"W_bM`ZiUY=J^F#-LMt\,#jGp*]d3-*rqSVKsfah/enCNr_2]k3&YIF;mU7^5PMdKP^n]P8tDrTAC
%rjn3hllTb&bY7$6Ip,Co5&Fps?+l5)?Y3[:i6'ilNU3!IBJoVF_<&AnIeM6MkI>nNWS)VYO'd15iUYc^fj=BiXNSB8?YX[Ij4@B-
%F`um@4.g0T6Tt<J)D6?J)dWFm]h,PWMo,G*_>U4t&%B;C^I/==.iU.4ann:S+"ke5:[_W]([#G_(1)IX?,"(ZGg4F'pWSDXNCu3[
%?/E<dnFH.66iT)/2*Of#qfoi+lO-Y!?#TP$s3+]]o]o67pXehkY@"1</p6VOdGs@aoQ'Z]0A]<<G&_tTs3>cY:9r(5+22F$_H5Lg
%$Erjq,/V3(06OV!1Gt#%IJkCE\3,s>cFS>`a`!SpYA"nNhS^pJrL!QFd>RpW@h+sHT@`NYrqkl"mXrK&^V!ZnZ#t8:EFjSKi#U(d
%m<np#qXU2jgFLaD\(;ZP^5m_Mgq1+>j5/sCc,IPUb!1%aishVcGQ_7"H_2,J4$/5lJ%GYn22[uA^0YR2IX(J\b-S#6^!Cm]j6J3k
%mlum298B!D^Wu:2IT!e,Vr*L,.CC8T>Zea\YJ&H@fg=+X]`7uVgiB062dZ;kqu5TgS'O=dbs0mq*lRrj]!%.Lca-i:H4O(Y2Ok_A
%$W#VRD.i>/e+L]5o]KSJ+)O0PP'u+plX%bACk\37icr2Hm4WQ?+1^"tdLV]nP<V:W^ADVW@K!F=H[TnQgO?BbG%\#9>Iq,FONc!E
%/oT(MpQl\g4hGe-`TeE@b/+"`2KdQ@X\EB-GAVBdiMTjrq+Zq[hX4:DG5#tuG<2]Vm-:thPI7I;hgV_6]:!!c@$e?l2::)=o)ZU#
%h4NpWcI_:)D!Ur2hUS/"J"">!Y>*UqVa&t<:#/p#?G#9(hl'h@ZWTD=HSr_m\8p&D:n,#MqR(KhA\D$Sp>je0mJ>.mMmXM-IsYIj
%ID>?P2RbDf[5PeK]NoUPf7'm5]spr2Vtu`pro'oV(/Fo%\/*nfqQ1OF+1nrAhD;p4h@C[YDSE.L<kGcMM:Y_=4oH_1h7<-%[<D<;
%m@DtE[X5]rGk9X0D<]ZOO0t8;m\SY9[EnS^%kf$;Y<?&PR&W<;4^=pKX^D'0H[b_ce_8`!oVhKT`^7#?rodK]Hf_ng<I9/hBsRH@
%F(;'?bK&ALpmUqq?cBG1IVuj&rVeRb;;6?o@_K5Cp>AhcHgAu+g2<hFYO,%G%r;&$hgMYM<p(OR5&\12>jL;:*_t9-eIO%*%Mk[2
%:+o@::X8=@I5Q:ul)lg&gUmC\V":[:CXRF!m:Tc^)1K0mGVXPnAS1Mac1_%V4'1]3:#>3Mq`MErqdP!ErbkSaa[[Eo[3hN[J%.PM
%](IVAI*qf$4o),XqW6d"-i9S2$a%OmO6a37P8jDP=)ZuBj@qO>AKS-@Fmri1?nHYWYN]D>'hqE*G:uZb#BtBiXu85q9[0_1&#W\4
%>r!-iqq%a/rH`DIVr)E0:YgBfl'JC2kDr]B*j.U!Vk1WU]03Rqro[\Sjepk>;t$Td?CCYO*_]>ZfBV1k`m4G[e0j_,VsJ2rg+Sb8
%Vg?f"4-q9qmquLDEarhHde2K=ls=^M4o'1KXM*?&PeR1mq9kf]#IR2tbO1Wg&,h489@'cU#qs!%dCXhkc.pPKQep''?Fs1O3VD^7
%m:T4<0CA_p41o[^IkZ)WG3eX@p,/27h`cO9q>0'8pQs_!p%ILG^Ms/B:X>s->[DN\f.TA@rH\/.ZR<5c?=&]UmTk9#fmeAE\(9F!
%b?LU-dH+.GIp]g8Ye@S3?/)@adoZ7OI\*.#hERA;ilPER2qQhlVscJZB!SV.ILs2A1B$S,?@2P1oSqVS^\n";A%M(bKB\prq!3$K
%q9@^eiU#)R=/L=_B!9E:k20JO?@S?SEpMmmn#n9+klb'/XfcSJ=aPY]mZf`UR=d$)*UZ,'Z5pWjIV&QDUQ8LQHhZr;28!tmG&:i/
%4+01(V:!PUgRjZ.bf]lgDeGYQCZN^_pA4F*qtKd.RB=L7:M3jh:,LF,Hnp!?b$nlPlMT*'[B&iHVg#<#rN/#&otfhQhUT$E]re>R
%+"t=<qKo.6jD+;3975"7c`JJ*G'WoTokSWt^J8'm4tM2tG5#FLGO;)RWH%=gkt_32]2%CqCE'DPqeLQ'&&2H:G<Z"PrT_q(&(eLj
%oC;[ZLQ`\/Q[a4fY<Te,gq*LIg"YrfqIK'cohWns\a049(NK.+2eG6K/`-!b5C.e=VqKA!2cb8!Rl=A,HW)l[I9?)ZD#Wk+gt:N:
%HS[b:I^qC!Hhkt[g%a^r_X,/2cYmEf['i'&YJ^,6m-jE#4Ib/rHa,YZ\FYV7GCB#5B62Jm7VhGKmK(%6m`Fd_2fl0prcDkWroDVI
%\^oeaCOYiZs3po4M\d?(ajsEN^NB8?\,"RDI=M6_=-%j#c\>phs*="@%;09bi?uZq27;W&%I<bZa8NCpkOm-k)e\2D5BPW4(V?"U
%brj7b`c[n\STf"U?eoiHeX^@@X%r#l)t$VED*M9Pm9T_H>k#D\=0?mo3\)fNajP+r]XQMT*dCnKp"90>FR"a5Fa:[f8&<a5rMB#X
%=8lC9pt5V.?Fo<LHFf:CPAaKmlt_4KrmLJtp.t4#nG(i4al)Qo9DtORmSY_%q3QEdot>/>0RXU1L(BT9/r-Xm=0I@JZTCqWq8Tg%
%\oqr\DNqZG5E,"`cEB_k?`\a92Hho=k]?T<3kk;OLuS'lepZn(%t8lr2L^(pgP`PPSSN4`$_,DIeMkTG%j)i<:R2cKjHhs;SgVc1
%pHGEPX7s9VCHP`m(T1U^Ud)'LrfmE=\<P89jJNqUY;P59I.QM!a]c-#h0j86?"<WeB(P-Ojm6c#?$arag^9>ggqU80I&2&Qjmn2)
%\$k-U^2g8]GM`8YbY3^Th-9a*r+U"lo?gA,jSdW$5&^JlqsE(Kn!7kK\[HYRp@J.Kk3\5500Qjon2U(/gj&=aHft+n`eQY%T3Q_b
%kMn5A0Ege`1_6JPcH\'0h7`Emqr-u._:,g(p%p\6mrf6,l+QoC#P7[*@fOTaopO"2HX$Ao#7Irs53slroj=0r.pMIc(>eDjfj=Gq
%V7sQdjeodfMs8QCqhn5[SF5BTM[u[#&%\7^Z`dN#H[a4H>4A-?=^(:g+"qJL4F"Pel0[H\EkM7]\,:JnDJo9fS)&e[KAW<'YKTf"
%Bs'!6f<29hH='lYBjTPDGQ5gT:VHY7k',;OcPq57mVf3#HOjjMYMO^>c6g:hG]`U=^?37ebF?g!I(k';qp7p,/3R6Elg?o`]=W+H
%iVp79cD)=3TA4_!E:rLo8$@Bt>^H#kIF*Cip!A'bpeG>aqW%78],r*_^2D_O1:-gmn&as(IXD#=4-ZPoin<Z_SOpE]T&0J1+a*PD
%qNZbM:]Goin(K*iEMSMAp[e/E1nMr#f^AIUH_qZfTY]K0ME:kDCueWr,rMX52(coYkJR,_-f0Zl`2ZuRWmV>9qdR-CXh7)77RT^8
%7,Ib+X)HjAh7W=3H[e/)lhJ.hYFXA@^3T%(=5NsO\p`c?2rcu,^&NBQ\+ecEs3JHprP?m.IsL(,\%eO$#@IGpiGUsUT6J$JNt:WK
%PCNK!h*:l:iJ6#,I/Vuu=8m4*iCE\sQbWC\KC[`seBCFlIM6)gppK"-3.:]PpJ(MZZi%F"I=2%n[D..\]@28Ep;pZkp[O5=^Ad'`
%H_8%CX2"\se,8I&rq"SLJ,e4-TAG$9lc->>Y<VonCN"Xo?baALjX5QWkh=RbDg_Fbq"bN`ZhNncn\*7drVJ\6I/`tHT6P,5o/CUF
%](Yrdq:/i#IWat;msG`Imm"P^ie-.$p;RoX^O:&!hnT!Ms%37hp-5_9q!W][Ab27lS=JF3o(R?/J,8`bhu<WGbO]pa?[ZL'h>d.L
%s5e-JrRK/rDuB.oYQ&&0b287e4o=g=J%p!lO8jId+%Q?+c2?U]pO@\Q+4i^QAG)#,:[b0arCQprY<R9nb?J>GV-dTAIWXu244iA<
%c(s[k0CJc#T<J-9+9(m,_L27,YJ5Cf55@G3hY?uiTDncAk9jX9q86!'*kqO17lT<"pqmV\I!5+f%rY_OqSpSAr;M>pW1!<+pWZe*
%bPun_jC\>Wm;Hlk[%=F<Sq$Ial_j`#;`OaF%q!%nHM@2oO)MT/q`jCN++4(,_cu$TqQmg$XF'^8#G:qkp"SB\^O5.'qrm%!4!4Ii
%r3JJ/^V.3>o7)8gNO+\KrVik(Mt^:L9YZE+Y2B3?PJ@.[r0r&Bhu1I%jkoO`r:[J+hb;qas5r1[h>_lcUO;gN+.C[M?[Zqna7DOq
%k9oHU?e`?nmG^?:/,sVZc@;4r?`\`9rSd=Vl0,tFhu9hVr:8-m5Q9h/4+6U:pHJN9qEOFSroTK\;)A69s7s_)5G,];nuJfmgsPB:
%T9'!Ag"#b&Vn_)<rRG-6s8Cu^(0G\Z(9>Klg[&H%-Z%guA(oA?99,+':0[3SHLbkM/VD*s`OC'[5<)hR5#a^;Eo;HAinFP<KceN%
%Z.eIAPEUKe^A%-bK<ooK:Z'ss5kq%E]_7W55'W_u-9Tg95'm1dgOHcjgdG-]n.hdWO&,2#a6;4@@r88.\2GsD?!CCe]=bXYF3ssA
%Qeu(><8Wk\A>oWg$H2rX%W`EslEUC)5.nOTp=L=j<rS9f-Pn^UAfc/cd5p%Bo,h>Ca1';Tj"\!LeqHo':@?s8TeEqYm+1p^\CPr\
%,]A"W4mlMlf\'d5H.o`WTt11#oYtNVVr'Adk,3E:4WU%tSK9o'F*^Yg,nB@85/<>mJ+29bdu/kU-h%p734V#aWdA#fU31nU?9Yo\
%J!>nQe4t3\5<?;tT.?f=]eAJZ'n:`/nDG?>\:_t_K2Yplg^U7T2KBq2>tDL.[GZO]5RmGp/nk.f%k^`,qXi^)]rt0@m[ct[n)6N-
%F$rYnr/:#.>i.i&hn=9(0E+IQdW02cf$QkMp#W='TsOV$%kkXc8sH)@m,k`+W93d'ftAK=\XlOSa$4OV2:doF!YJX_Jf4U`o_*XA
%5^VL.]VV/fIe`M1++$N3RF]LIdrum`:"hf0o]kdJpXoKG.;2UlDXri5h-[?\^)sHA^WnIC_u=0Aga<VNd!kc5ji)k5Z%SQ_5K"XW
%l;P4=cD!EBa[Ts5Yj),8N@XuumptD7T;m-q-QrILrlKfA:[^D.^N"76G.1?ELPBh3Xr\>2*mqeGo)*rqCh(499`M"`0h"a"X,1u5
%J,b:oe^WG$5'-:*,'UB39JeoH*>*2168nFCH%ZRCk48QMoSM6%M3Z%Kr<Q$qJ@kd?QSl7\Z*#0=3r],GDb9D9P&Km5^Iph8n+mD@
%(W>LN]=du@M/L(Q_5ju,6'$6K!Vb`9bC6p<QG)CO1k'"k]@)\@9)gLrdq[G3+K:_%h=;$L17*>cL$T*j=*@d=n(o<1i9]#t^QmSk
%b+Do_c7)a<?eU+?O&1EELpaWo*[cAjqYQ(OH3,\tc1TWKNKXUJPOD;NmdET?+b1Y!cj`1D2:<k?fI]hr#tDLJ89j-j][>ua?/og?
%jsQ'=q]Th8OfRaRG0t>,eS__jedm%l[gB'uo'XJc[,aqV98?jM7_$ca5B+&BUMds'+h\tC5Il!DVF?%Lmp]8Pi]6hZ]6?J"73a;"
%de5CuA`qf=](RW%[c+7aQR_YID\:+a2fdChd[rGjs$%M,i2[g3r5EI>on1cu+4mK!9Be.5^&'^.emJGakH;RK+Ei>#3dlCXLE*"G
%f9)tlo+?HAh(O9JYl-e-nE.EMm-n\o-1F!fPOZ@TH.&u$Gu:_tR/*#X&q-5<O%!C7*SDs8kg@s`;\b6r%-PD'78I;Fd$6qW!omdp
%=m9/*r5H'Nrh:CFpA2TATC\4OC0;iYR$C^^RDDP`0@e>:"Xkp?It)inF_gY^5/-pf[6I3CQEj0KA<H!3ck9i]:7A0]]rHQDq0Vg:
%rV'NW=tHit\g-60-r(*F\))FP9oJ`*bF,h\>qj8e)O0RDYkn)drN;\FO8AhA]67j]-$\h3U&M`'^Kpa88Dr1qc5#'^cK:m<Z:FB]
%$s6NF/&3_<]#Z\oT8a>A[*JR4[_S.0Fk>ti_<9>2Z+*c*m1uXeV='q#/GPb3>ir_bXfL1]TKBOZo/ZJ;D$SV-__"^R,X2AQO$9IZ
%o;5(@aCI?&[sceU[r#[ji"c@dqg%NXeNp[$krkm?AKM:DT+:VWY<$JY0tj9&hooTHkL8BFlRM?Eh)KlLhJE4>52@.#?M3`*'@U1-
%beV8oc_o)"U$u45j:YeYSl3[m'u'$TiJbuNWBCi^n\>ns^RXdeon(&Y\,hl$-HY+4^@O+aQ,Y@4<UqIe=TV*-dHI1X@d9E@@fP]B
%]J'DHNpb2mGQb,6GbdgDa!Rtcjla+urc7VkJbertbpV!o_nrF5$`bm4Xj?K=n2W;WWq/7L>;Oj1in6j#ISLegm?V[?2h=qtGFO(H
%qeh&rXZ14^\8akB%ZgJbr43Z`fdgr*\q@AJBKFtN;[Z]pSbJ`?CjOW156KWP"pMM*^d#m=rJ8c95BcmW-07'<l)o"tbmf^;T+aph
%UC0.s7]6f3Ee_Vdc\]s-TW%_R[Qr*KFnb64_<9>2EDTV_[TfD*Mfnd<A&7?Xk;)M.*%Q1/!-F")Im0d%.K)bZn8N*t*A4J@;19C2
%:>P@3dHN'6>hC<j9ZE8BP=p(.2<r9$*+>ur<OkfoS4Uhd?Vlj-JLO+/q90d#*SJMP+UPMR:cO=Z=dbKLO7Da];hJ_rI.d>&58?.=
%`s"DNl6=P?g&9[1ZZj.\i;A5relCDb\I(@DSD\sd&:JmYq8a@5ame?,;p$-dR?XFAU([?BA.'DmeB!h86?,/E%ZOojJd]p5R&bpi
%^Nt=%k6f^;[*\^;3hP$jIJL(snTXGMG3@W+DX5t3Eh>V[9KHbI:hMGH-r3'39HHDCKQCkcfurM+'V@2sLt<[/8@q]X@UN]U^$#Oi
%!p4EpkO@B^m^ks]A1dG']@Q.&KAZ_%r8,EGg\L!NHYNbi`FoI(PW?*B$jicTCU>]r0N7tSn4B(lUKhW*9qdV<L<@i>Y[_1UU[/We
%![_odo7S`<?__qaQA2V?n+3!geVtO*>l<pA^E.iRWH[?4,8=8H\J"_'oc->dP"]MTH4Kr[?NlU>17Q,/2D/DrS(SkY&BnrK4/QVm
%QX.I7`,%&JT$W2ZCNMIQ$U\$ppNb$GS"JU1hgGG'I/E<c^<WUi!#:4Mf=XuVde>.ce18`gM2,!E>(a;s6%/IJ&e#MQ?M<*eGDS=a
%^L0el(>UkRY0b<FKr;XO2Nir.X"&GV,LKm"C'@\nFku.ns7J86596t#N:+J.l5rTLF+t[;XJoC_4J)Sp7#Ts=e)Ian.(Esemkkh7
%7lc]:C_14!jE,q4>I<G"UZo!0U.C'<G*8&k#3odiNZ0-)d.Q:0,TYj[a8SL3M7H#&Zp$/Vl7[Uu85leUObA[eVk[.Qf\bphRZ@P@
%K:M-UqFqqeicf@;a.V8Y$[(*s@`%naRd*3aTMnB0;]`\fA>r,#'s\"O9d5HX9%J#]=<c5rc$F7l;'=:h^$?ci/lM.0""X."Z:s2k
%1bJ7UG^J$(F%Y4"b`TJ)qR'b$JKQ@!)1UQb9ace99UDM?po2PTrOlepg6c>1jSVk1,WBF6L-"(=Wu::9WO4oXr\*.&BG1TN/XEB)
%;X]Z_c>e50HVPk=NHAYQCEB<4GT1;NUG,hb514`8>X?i$b;-ua'FJN<$^&hHDoVbiXh2:Oj9nc<R)Y('4Iq-$Db%C/0=A\!d3PU-
%Pk;7d&ljT3Lq39;6H;bVmniIaUgoLo#FbfucXq47=9C"C.EB0IcNg8SGmL40PA6a6g)5"\l?1"95r7m^2hm?=.31fD'9II[2UYd*
%hdqtq<?1sD_ZW;I6TkPdMASdB;U/Mq(7JY/p@PVrR.)k[e*IhoP#NXPkZoJ!]?)TiMP3I\'RO=TFA-6hM.PY%ZN?"SYqAZ6f`BJE
%3BFeaEG]e5^Sd#b9F'?TGTm/kl78M]q+<r*j(Oo#r!qX]T#?gi^M0(SeOg\+S_KO5q9C6WB95P[D9W9m]pT50-mD19G_oB?[8j3V
%7/Xtk2nksH3i1K<B)A^=Ar#[&Uae-1;;6:$2O0HuetdcA_-u]]hY"H=2i"+c-e1DG'(tDR:u.X`OG]7f4-/+)SgI'Hc3/G!Rq*r-
%bR*uL2eW.R2J7g1k+j0Ip)\PkX[(]?gQVKmF)p<)f$Co32M\TB4U\Y18IeTfSXim3.3r.@W_'W%64+#sRs8)bq5YJL>'nBErgPAh
%<'RMrq^7-pQ$N"V1lHuQq\."iaC]45JoX0/%&ViJ;W`qc4)Aa9.o-+-\djP[N&dCJl(Z\MPaOgM]UhgqnkM(ls$jaI2LcU:A4US"
%1'(EeqAiMohon=94F!>HDmhDq]WXu.m#(dVU9CNHA8&*oDrR@%(*C[Pe3Ft3L=H3j1oHS+;o8AbIac6q/enO>"GuGYmna1p6$NH%
%!#r:QEp5f">f?Brpk%#r__RQ^_/H1blU"VjW=ZL&m<TfinXJn4,/fcK)1>d5$W(%`F"UlJ)QFT*/qdI_k\8oh4#eW?$Y"aN59b6%
%ZtDGR7Z=nZ:pQ%2C)t>bU^]dqE)8EK7fm?/=J:2<dtj7ZZp5j3!7?e[,/?PMd%%\((<uo9ED.^g;M'1Wg<julI)eVWpRYIjHGe5Z
%HBfIklX@hI9'"cATs$2jV`^u8O5c7)+UPs.!R+qd6hNjjR(A^h+M,?^L?;2k:&K"pb?PC#gZ3!.1n$qGh7!-HBX+cIADRQAkeIRd
%[!UO4!lA![MVm!2*eYd&Ja#ai@I`=?%k^4j81`J:Co+A(<aQZ]'%Ri?h8+V3]u4Nra;MF6\EH#_P!5(U?93glV24e2['N'sN^AW2
%O@QNC90GZa.37;$1JtYBn5(9`Po>W7PuqkC!76`^FdJ.A'+FR/G[VG5\%/]I%P+"p$a4M5.a`f&PqXGLL%ZDHA@4_I#d_uXP3[:N
%@8>'P#r.fnCZ\QIV<@d?bA*`#HCF'pM,$4$IcI`h2rN1SVq`oC<e:JoH+,(&irFVOSn:6R\rHBA7gmhi^&g.Ed%EGT1)2unq1L1>
%+I9rl;TsuIHOjg]D9H)%=?:Aui-H2@$f,-X(/1L,HmU.J@J%#8'+:!l'd"8'W@!.7-Vl6A:3.1?.^h4VWK2k]311p#fjnK+SLf\c
%,an]U3jnMAN?eE3M\0Y_^)]/QD\D]faB1Mn8j9248rD_/CZ-j=!/XG,68T-H$:-bD;W$Wd?/hn+Hm$$MnsDrfgCA0G=Fm2H+$k$h
%bWR`,h>iA8)?@acVCJI0>bgm'enD7R>d'K=1Q=muKM]fRo4aq@k/O`'[NB6=L8Jdp;_A8HeCPcSc\Rm4LPaS1JERhtCuc51Wo@9C
%c`EAY&N%QI.&&7H0V__LL_X*%*d$aGoZE7U_EKlu]!P6.BMeWNdaGCHIK<1-*5ZIY,,SHG*FYh4as*_GW0LZ*BIRM*K,EuZ?PY>$
%QHgN-34"G*^2/gR6hA(s7hF4XSM`J5/LU<SFR6[McC(X.@Epj3.,0"A$kjNn1[F6/a)R<9CH+Lh3>d8Hpr#hMj$QL)6,CLlZ'A^5
%7R9$:D'K5*J#d;oU3=#s\L(L'--kmfFA/@FA!gcE;M^UF'<QjCJN'PcLoHAff>N+(MjngW*>[(Ypn(pbs)Q0di]s-eM"p9."iK:!
%<S)4(Z=Q-<TH_?uSTb,*"nAe"NBo*4&fKKTPXpLO2^VEMG;^fmC&P1=739jR8WbOWc)?H>]Nrd>#g:rLYXh3+2D&gmjRR\:)]:`G
%K:.iT_07an;PDo@NRYRGNK&)1/3*/jjHdnbJPU*(UjhZJG3$s;Ap@k/mV7&QR-.%1^L2^7i/Cqm(a9:A2FY?+I1Kg5hJ1_#7l%NR
%5uJ&,Qm<!n2G+Hu`[Vc5P;LL#dj0K+)^h&0S*!9HG;N,gR10hkp1,fEn-*=`!2&%OM:YRJ2HWkNh+a2[TkA#5ja<7FQnB-K`5YG"
%Zb-$rLqC8"PC6>P2.8[pRkGU7$/F4(8S*'(B[Z["2ec0`SW0)f]A:`#9SQ9Z-@rds2Q=Kp`_@qgZ[%a)\>t1E#IA.(,]MMZWPDrk
%*/eGA<2RrpjgSdk"M0ZA'0[N8Qp";a+2b"@gYMKNrS05Y!o:cl.@o,I!/bgO-ICJ'SW0:b83<8+1""a1:k`eW;7;IX$O^XLZc_!g
%N2"iGCr7eRUY+6R.R`%I1b)eceMt,oT]N:U3W"u5'^3!)'^3!1'^3!9'^3!APgBSt.DFUrRKD;'RkF>WHU8OmVa.^#W.OGP6BtFf
%7T:PKY%CXtg,>`Z%,p_T\6r8>\rTu/:3:h"<`*ZDe#KqEm;-#rYs$=3.(51f<Q]0I=;BYY;.X@q=J-&A<^Cpg\&s*cDK$='mV['q
%1u-(6\hNEiYNZ2mX@@uUQ-][ZX@?h2BYb7\d.p?f(h7^%_t9sU[YW4E=>7lIFPa>-_sEPXZs]P,W%ub0!8BtHI(NsePmTDX[0#c2
%W^Wn(A$)E9Rqkl=gL(D2gLL\6b@iuQq%P@sDJ-o%2B5"95;L:Rhp:auHfsr)*'lf6p3rZqc2Mc$1##+r6OU$<YXgu(I2aQhNia"-
%T^5;+oO0*:9&7>4<HLuGMp*?,eWG0+5^FfK1D&SBVhg3%!93&cEUj6n"-#Od:pL.\KL7e.MPE9S]F:bPLfie<'9lmHiK2@UUn?/X
%(<=)]0S4(<]5Z(+,Ye@/ab4aHS.in\g[-0eUOJ?FM2E>QJ0c@bZt+/q@o_2X_UT02"\b_jMOKbA;,'A9AKqs.3Xd!?&dfDPR0oTd
%`[SBqNs[_4^jE/ug2]_S/67.sETV<jKqiZ[Cj@5=)he&U"ur:9aM9%F1h8g^;=8)uT`#!$63FaLUp,B<r?E4!kpL:m-5Pa35i+3h
%[jb=O7No/!e$c#i8E5Kf6:r/5ZCh3G<(1Hg&6;;]7)VXU_m4fdOj[,"0IANi6'q=d_F3\n-_#c&o7Wr+jCMnn<*<mk+>`2r3eW@s
%XdBD_qqm+ECQTFTC'4+R8^`@-\f5m<C!!PjpK*-SGtq3!^q'S?gd>BU3&Xe'&?9(g:u#`IcugnE6AK`O>7_p0Ng^%@8NMAML&'ek
%(90sQMWju$-9$HB<tR(95Z4UKEThk&MMK%D3X9KuO$'WqeqM#3."GEe3f/9=#nZXe`1,/d6`=F%r'iE(gr'3c7jRI(X]'*`(Gt;p
%r3MY79L\*[e+@(FTKUSsE#<EI6b$aL*9HAqTHHTm=Ulqh%+L@E^r(])+,!0QIWPZ>Pp1jV@hI]X_*kBK-gbPLH_cOp_D>PZke)U'
%AJ.d&7n._@ePXqj-j7Xib4riJCc9^B@?O'iB0muZSC3hjhIGCnN_>LimK.Q0V?&KP3o]7s_rW@+EBokU[9"[pm]#XY^KHi0`$HE1
%P9ctYlg=a16T[`/8]N/pH'4UN/39Yo%PTd8VCdgh8118Tl"FLWd[7E&Bo4bAV.jETh9)g0E\km>g@\ChJO6\Hpe\8L+UhJu^1`[i
%U1oW63DpIN89a3k(hQN\k?OK9S2s4-p2.7K(Y:>=G'$Sj'"f>C'rn&VTaPn)d(L\Pb3^E80p"PoV\IlgI\N2+85RZJ*uPF.DbEs#
%qoDY,ILf!W>4!J+;/@=g.T<[/49\k',jGThA?+Je8uaL\N7HqX@nFB9h+,=+U!I%#('XGrZ;bj/3D0PMQ*_sNVlZ_h9@=UFT(3Yf
%fgFb.MYE7DT_En5(FAg<]-t.Dj98h4QbAcBD<WPa^+"QZZ#'fKd33F*_mU6`\h/\K7X(3;5J?)0mW>\^+bLo+i0jkqT$5".PXQ7X
%+J9ZC":hrj+eTr&)gm9O7PU_blR(M`r(%Gsm=?&o8OVocRXdb1/+Dq0!ttC@j(6[oilotcp;g\*"QE(20+q]"[oe@RX:ea9`<?Q+
%!b?b7>CjWh94>WRVheooP:pC0b6<m1>Zl&@Hl\*X`I*nR@h0@U*aU85R"E@Z`m&f<[EkS@(i1E@PQbiF7Q>#]_)`.#lM+P_@L5N/
%aQ.km&GA>PfA`70EaiAbWmnl,$C>f\E%6cR_9Hr6J6e?a[($!?O'/X,h<fJpBlDQIinT6eRrJ6SCP%e(4>9nO;lR+=R"6Xh,:4O8
%cUe1#D"WRrO__TYK!uou_3&.WR`+K9#^\Z4T`Yk=0"0\6_%L@Qn75;(Z)!)<'=K9WZC!LH9>n6)(9R>X%>_"gbR1BZ6AG8#L13Qg
%MBSesXOZeZG'AK_Q!>?LrM+W92?_0'c(Rc#CJ&#qd@VkemiXP5duHCPWETAT\IWJ.moG)MHiXW!-=XDGT+9DuYT_Bu&;2&rWJ\O,
%bA\p!H!3<Z%[N;5Yf_aOM\HFj#3q;fVSal:U3a*180+dGC7b?.Dc(#Pm2$1p3kPaP3^e?ECkbsL'e_L*Cub/5N`gJOM'Q_(+'b=?
%WQRVD+a#5EeqtfRP.K]s#-r'!m,`,OI3)KUA6:OZ]>sGgc,%WjjZ'uJ70Zm"+@;M_.*!g]99:`[l`&f1hHSc`'0s]tbU>.$!>+LC
%.o`2B9oM4o$e,SYeMN+UB9qG^k<nWCJ@ud5j"MelbsCQb/76_ZZ3"EsRgr[BGcYuh$[_E/c5e^J;<O<t$]0+^"BICaoP&gc\$8&*
%fT_CfL3o_4GuJ@LZ]X'<5YNGE626VI^)J3$j!HJ2L0=Et$7Hp]*4m^rOa0<&'lV>_g3!p"1'p'KP5p!EJPQDMCF6Td=`Z8VnRlG`
%`/Q>Z'j%JUN&jA(VJ-[H,1cI.eYfCKKOc6]3"HepB<\lP08u#-Oo&.P(se-%9=0Q@)1W8Hn_WIOOk`W469)E8?GSRF0]Ad^?B1>3
%p2If2J?*K!k;G@A$U==NiQqV[DZr3\R/Q0];p=)mim2_f'#*M]L)rIRJ`1q$fIE3>lcHHfj\p\rAOuum\=S?e!8m<.S6`t"`&44j
%\C_N+4YSO\N%8e:PqtFAe:bc(>XpQ(bWG<*ZHONNHm-55=Uo%7&QEr]m[#qDEKKcNqs/:QZ0p!LUjei](cq`5\VD%GDO!#iCA=0d
%*;8:p/59\3$&+P5q!@J5m&+O,8a,h*J+Q=p^3AaFA+8`W55QV93ge;/Os(m!O[B9=&mb[Mp%@!;N^_.8K7B+JGT&>;)Ad"E&"^_P
%E#T!OXf3A?P')/;aaT;pFJh^]>Jji+J_:.s72n6_10>/CmXS&"`9>_7WI<2VdYo.ebB,N),EH&>&Hjrj8HH3=X*9NB-?t0YWL*9:
%*(iBoAiF$3OuB\+"$U;4=K8(^=@A=Xj![ZEhT0a!HfVT12Q.0kNBCH"]pp=8hDEFh-K4-0J8pjS?m0K$8tPK!]dQI4r>6N]>ja3o
%(C*l?PlbdfKVL2I"n5$$D/s]*9"'utXPa6jRB;"55dd&nbbrM\5K)BaE!tGb_n?+&/qKMPes`F,j&@('/t5T?3s/'Z29&.OC8`Ih
%?-t-5#=35WM>H4IkQ1")ob,`kqo).)d3T=;-k_%IR`"S#$`F0+a4.Fcrs7;JWX,9HEgd$J4'tK]0q?Gq:DUtan:@6?&;H7u9OuR+
%C/ZCGA1%']R&3!Od,:*H<<maG_E,=Cc],L]iP#[Ni5jj8SXa8SER*N+CTT9I)oXMi_'if)Hj62@bQWZtZ*k$58?$b??hFm>e!?1d
%aaW&u@Gm5)q1C9%1?UcAXQEG#oMI!8:lkCE7qWk]%fM8U#t.%/"TW/$8PTc6\]*_a9\")m=fD.K!#7&i;(]-'%SSC(',t!QV.^eG
%'P8Fq$&i%Y/V+nn/_-XdXZ$:+HmOjAG+]:8$8jB@>BR-'A;,U![C$\k]B!YX3YPnT/DN8M/`K'P(%i0hha.MbFo.tsV:Et-VqUD-
%D1--i+^LYbNm&KSD]2gq2&`kj"g&IA1IX'^Pdlupf\PrKk'DBEi+_P59L,0`W$khE"N7ZHe_?::I1Y=R@&l%f/_B?%04NERnQPEk
%[H;T==6fm3fq9bC1&.,7ER`uNoq'fX7P2_:TWiO&69$"%m$bn@'QR3U)RkTCIOfK*(9JQt`^atVEXZK:I'/T;0T>4RE_)((q@R##
%2u8C^$J%f[l0RgL-NVPo_s.tr`[B_Oc#oI985#q(L^(X6Jlrh.o^U[o<[!*s=?s;cSqLXL-oW$\P%qDXMb;!_=40t^*gajJ2:*fZ
%ofe+IaUr7966<pGP1@LMW/hq8Mo7751'U0`bS]:n7!`1=*OFB'8J9?/;3,su+<1_G5oF3-"e14ea"FO-*/cej7k6J<??"J9.#OXu
%;J3G(l(#fU+SqZfF*4Q)McUfAAt"OCfo+<5o1iI]fiQH"A^JT12nN[J,#M+Y/jj$PoS.af[>O_bpcGe4A:uo[Ek<A\C"NG`$1("1
%8!(%3Pis:Lri9]i/jU$b))nZuNhZ#jc=61F[+%"B\57#M2#;lp!&$tk6@]PrFX8Zi+Cu^*-R<>k0do#$'+:PU_,!W2%$>3lgGT5?
%[E@2;Z&Trn@"^o"L_u%LNQ-A4TJ_kimi16dKTNDW%1IONP*'<OXJ%&XM[/C5o)f<M7WN]]Oj#goVI$g$TWCZt4W-jA%UN-ndI69W
%,\=+Z/7$9W,10P!#\M`.2C'Tc3g,enL"6#s$Qa[LF%KO(^k%Z5oUF?',q1pKKT!]8r:F0]FD<BV$._/dUg3A*'n^p&6W3VT[ndoF
%=rj/WWguoBesAQFdasHb&e9EmpmK)-eWe`i\04I@[UMj(DUc&I81oOql8WRX'KL<9&foDtoj2_P,fP*#2*-*$Wl8CU&T$Ti<Qtn\
%SU2%VG@0MlMD'Rc;hfRY.X$#Ee/LflWBRhfM#uT54Ll>0'ZN2":gb!?i8')*2]B'RM-"IC"ucS:jC_jS03*<XL_qE'p7WDsXE?C-
%:D+&&=?1%`)4W+-YH"utp="S;Z/B]>%cYis;)$+/)=%S_pdodN5+9#eA*2,kQbi,Gb=a;iZR,#H\l*#48gWVfl2iV`%\ZgnKkbOX
%NLo2oI-sEbTX/%4g*+N[R;18b>8fWe7@cc$73TWC+k=DP/\+J'8=Qf=23H"LA(^o.b=410;C_a3)!WD(DW3ClaJP.HGGo;F1[F?.
%`"PBuE)V=HkT%fh2=jhD;M(\+e7XT:$J"+R799Qt]W2[_W5L;g7P]meL^,BLk'KoTaK72Bb&tuj#UO+%R:UD1Th8m$iPROkeB]>a
%]7tt1D7udFMCU`WIAgr3^cNM<P3_VGHFMK#>3EV6b6)K"DHQ3/aE34Z+E%S;88'cKX-:>=NiZ;p&N]u<iNnfc)kO^\lOc2o\(a$[
%bc$f/RE%3s"g/"#Kr;qH1'#7MWelp!mUn4VQm:jLl)WQ")&"$t9jeTe0KD:hc#GC=fAMb:7g.(s?mDpt[QZAT4K=`R"#Qb2Ehn;F
%V03r):l&P=]Ie(8'WhRI&0HddNS+</WOc5oY_@]7gmZXk\6+jc5!JOH"-^tJi6:7m*<O>l@PJjTb;Y5:YB"]cNX@^S];n8s8f2D\
%5lihdLd.b,@7j]A`74<dh>hg1+!N`WoN=aA;\5Gu%.kkMEF(nT)i(V-Yo^1IKAd(j_hYFPrPg=H3.?sX:"<6u,\->d(_7l>5Ne@C
%3A6n3U55s+flHbOh3p;u"6&KH;1&PZQ5)7HeT_0t!kKS"$h,cf*;NI%N/*c:a,o4Y"'G[iP3R"@L_2h'U&/k;$7hp[;0OQJ(H0fn
%(t)g5;4f-qLpDdUo`=s;^i`*61(o?aEB+j;/U'E]`sn>XStR#[DMGBL\<R_$XTQ"44UTXWB7OjZT_kJ'[uH$aj/u]7pPf9M=ibl)
%*7tU^d2U+nlGiY>iC"548*qgsaQr4F?UFp`C_8jpmF3LB3%%d7_ufPH?l1_l5XJ^#:@b$\(\l.-;F1W[!ff<?8cfKiqVi)I\Cm-e
%BI/5Zq8ee!=p[l&[b_7F<W^GY44A;RA0=Jp).:ocJuohh>q65ag243#K&ki9A>PSgk9F:o)!_^`M!R(/=[4;8X"M(ZS0StG=%d"t
%\Q2AUK&XIA9+YKAPu?%Z/!Znr9)#!=P?o?>5k`PD)G,H$V(G:a6*^q[d4:J-J@3l7*)T95.<=P)P`:co\!GH6?usH?H;ZtC$>A$_
%iZt\%=s]$P!K9l*$*n%tZ]"#md5H0OFHR,KSHOd0g3sd-,f5V<.ds*q:lCkB@A]6mKuc9NP@-Y\(qk)OQakU<qV':W$.=#?f?=fb
%fF_`$8gbe#A_4;?WfmRGF=]d,+[GInRnA8Mp;YEY&e*#Q"g0=79j+G@&K6]<8gV;YGus,X$%\;,+]Xe\B]=VK>dX$;%XUbnJJW1W
%3$BSW/Z,OqNO*d:S@."R!TKCHY%dBC20D035QkPo]#@$2)Mt73bTWCZ_Lj8QF0^&01Z:&oJtKC#"RcYdeRoI!H/"Prg'`.gS3?^:
%.B+1F,M$WE)*g7fTAeWgb(*s`V;)ZZQ#ojM+sJbZUG/g#:gmMP)dk`5%0_DM%a(;o=[H`4<YF.5Dq@T*]3`%Y<g)rgBf&F48XKsf
%pg>jd7FBm'mbmq6D6/`Z))VsORl=EqL@E<p?ZL258j0QPhM!>Wf#&2S[&n<PPN,HWTS]+V1%LV,1l&(8ij\tWLg?F#gcN\j1I>LV
%$-ceG,$6-7Au[cmHjdELDFE7'\rI.bs&!UNA0clNF1\T+mBkT/jXUHd(,fV<8P#Nd(rL,Afa\cmiDcAS_u\m1+>T7mC(s5sU74;1
%@Wd7>!&:nN:X<(5"G(PIZ7ke^W#&sH;45V#mSPXO#\'#Fk7%t2#Vcf,GF!88?P:\n4Y"^c*U-7bW(<=$o8drHI^@ds=sKM0C!P'r
%0N$5s\PLg.QijGX$UBYU]2nq8;D.7n=EuTfip0l_F($1k!a!;9-sTI5d;3sTCbof<jm'_4g_`^[_]boQ0apl=18&H"l5"_%Qi[js
%WQ3"qF@/0mPqRb=%dI3JT=O76hRj^?1>EaZ+T!rK_WU[Ud/YGLShXIg!.(-r1\PM__PsZK;Zg^S(HC-L!FYR`XF:TqOgq)c^BP+X
%Y]?``)aJ+UWm\l#%>Idf=a/5_)aMlB`)X6+2ZTnMn^Y5PaHT,RZ$1g)RWh->RWei63HR1R#&`:TVV:qecq.lU*tAbt95l\19Ea;0
%2rhrt<@)L0L4Gh@b%2q*XCYHr`k%K=5*Oa9k2V!"/B4OOjM4D+d4=%*!>H?"0]hK54gj;L<^3A,AC4MZVo&pWXptf?^(*D#Y,31^
%G!P.AB$mWJ]*#k0l\UDq*RM(,ZtU!\k^7""@HI"ZC)(7?@)P!t(c8j>Fe8mM7de0ZdfViN38Nm$7%M9G=5=pJf]i^hg`Cu;Ue10)
%:opNT5&>;9oh,g]>O]*l:4[8CHbA:DO3]s:_;)roT$$H\GL)+7p[GiY]UN->pKZJ@hY5h"4oFcZg`@O3gs',QnAj;pa3<rD0I"G]
%\s$uLHsSO3rqO-8p@-/dWS$#S?Y48$YC'L*]DL\?;CKlh"Tg+cDY`I2Cj=tbGK%"O5'M)Z07>1k*e*rjD@]Nk:=HhMYPo;SQ6R&Y
%3gg/dI0(3IpDMfXh'[:tmsQ[pO8hCV%c5*UT??Q]_p?;Fp>VE$ah.H?1PN;#q<)G_jk&]KhY]KCHhd4(I-p@Lcaf24nEK*ubZeEP
%9\;N+qPi7VT)D?ah0o1"fO!G5S/ch'^OLTcDMaK%5CZ#onau!U[C`WWXN!tQJ*t4?^V?kGh*(a_.IH*c0?M4XpA3t7p@.s/1oFW:
%!79p>0`_,TnfCX.<,Sm!!1L6J8,u!NM?Vqngj;EkE4Ofb!P$c'&HS&=I-6jsVX^fd!DME7iW<Y"G)d!h540"%^nfa13^=>6DoN%O
%.c*0PJ4f2D,J[gG4\C6ogETHY(@1CN!_fUW@Ki-_lk(hRoMEA9e3JY0M&U^4qL4P/<,RcL!@kKQoDf]^4aqqY\8)3J'4ghS!iGok
%;$;#2(Es0]Y)QNb"Y*0Q.^/aq[qf85>:`2Y:t`Nk$YgIW?)%e+fKSg/r$&uF&I()QI:<W[V1bs!"0QIl3!1MrcB/;ngc]*U\@"Jo
%%HKC(h;\sCgd8p[PAcML""*LY;$T`i4tK)D-re/-BQT"8"=giU$j%0u.gk7clheXEn='s#7j:d7KieIE(SVKUWo=UI\k>Em%s3l"
%"=EIV;$m.3aAuQ__?*p'W7qmk*SVl0JICiWV8,kVll;ogV=oaFi*s==.W?JRNE4sb1j4p]?om]mYu#(U4).&2.iTl6KuesFGUAW`
%UDF^'MqF&!i3t$kitrIi^Tpt!A^IXg>QDDJc_+\]]MR)QDoOWXi"<aYX5jk3O)32A)mKh[e9D,D(8;f0Xb4kXLD`,s*G/<1=GMU!
%+45Y9W!C-8`BBmM4X2%FFMHH5Ph\(k6!aTE-iQE'=kG5+667#sMLgjtCdgVq]LNrpbi1gK&42Yq@NjG5%D,+t#XPrZ+mSY2qa<in
%0_UB\fR27Z+YlC*]2rg%4QitFFG.;LYn\?(n6Q\>6DV;(,TcQ1^d>D]4O:5L0;28)pcX7RMjZiX]qQiME3HbX'\kKb6Af[#:&s+1
%T$Z[pAhQVM#eUm>+Ur<X;$ag1*/.4+T1B<Wj1SnNA;+kh;[C$;4G>o[Yua>I]VMi/9Ee&V(KDV)2rcB`-_$55)P(fOIA8=RadG<O
%.k6hYM6N)Ph(-KSJKI$A)-Vp+OG?*pMRPju4X2RUFO-<^'\tS1!_)jA]7<u)*g%93rKhfrKa_?>qEj,Ri\+,McNjpnh(Js7A(rdH
%6`@O1LES>/lkP@#1V6^>`eH+Q'TjR2h('g>Ap'05$mG(?>XjGAM9HMLm1l,\(fb5m8jf2^fo4D,W/B)l_)oVNT]D]l)CW10]ET]j
%c\N#Eh2^.g\fJ2PdCIu;'Y,CV<pYRV>L=C4#^aL.#i531i/hT6p5%[0=CI7%DG/@s!q-lMJYEMa*J!mCl&a3W'@hYsqo*]jH@7NR
%j43IRYoO``d2c-,ApahE[1M9tGTk'o_t/So'^)1KH2j1>4Z'774_F19nK'*g=2`/-Z<W:bR)-DRI\>nrd2s4VT(*mN\e"lDGg@3<
%N+:0^&1P1l*/G<b.hVtRpPT1e]'g4?,#mGE*^gA'&J63mh('g?8@qr&#`<N>Kuc=4-SbfNpP]QDiU7L%,-C8J+!Qs(.mcWP[nhs=
%Yb8\(7.tuK@J(CaroUiOqE#KP=!umt?6((fi2tJ_B,:uM0)<8<3Pk`I%Dr(1`:\3`J?Eefne\L_f+1muB`<3o?9NQ1D#N;Yo&A`q
%qh*c^p;MBZC[\ucnG@jiY5b]3f3^aeK6m<qRBG#ZoFJ,Ir"bp<JcA#XbFA:!0>;4?9uoC0oo07Ac$21a50:DK_6B/W-NFASS0L\b
%**NdWmssoNh5aCn#ua924_j30_=-6oG]<0+-_LA1qBpJ^m[\h'rOp\UGTZX!Otm2pCgqU!;SV_A"Eu?b0Ut5i1DqQ22$m%lS5a/d
%7t(Y%"F)pW/-IUZ_dHQMgJJ&.qkZrG`J1W*"g-$H%3'$K6#We&7NiUKnG^l2AqDlaN`m?oRqc'o:TpYgG[j_=a&(@b0P*W,-;rPC
%;VEBo=s-_s,Z<>A;VWTsga#eQ,Z7ki;VWNqga#dF[RA9m6n4Zo.[rgU$UcJ66n4Zob1f>,RmbDg7*5m*b*tfARmbEFPXsE7T;gKL
%_7TDObg0Od]Y"0XpA"LWopq9Oj0,eIg[aD&jSo,,gSaW&rn6[s+6&S**I7EjI:;huh9c2XZ2UTp_ae+XSTkT`=85"`+8kPj#?NbO
%K@et+lco,!iVCN\%o2W]]F.L]Ymt4!5tmYbcQTR;P=qu!VU:.:H:C4O<n5-8;WXfQ[+lRmQ<_84kFW>@e]KP?\q4Q=^Xur'P7W?U
%%j@6o5/U#;2_i<iGR[$<na[Imau(mB4U++f7L*p+8&5Y5^ch[!M@(8p<<W]be0t0$be[rpnt#^uHWN7KX?568<#?8F@d(\.ScM=p
%$EAM7QD0!)I]kY,^?OiuF<YPKn+\V9R@Ze^d%Q3M++1qBO%]hkH#ZV0#_ZPVA0g)N06#O:irY+#N`J9LB"+XI-*6/or;J:(A]/hE
%3XoHk!b=bb)P07C_%'Hg_WG/&TpH$>VES5-1__2d(L?AUBNSZ@?YuN9UdNIA7$D%SXiF#$-QrGqPVOkL"F9<DrN6!?"$H.KbF/%b
%`Ik57]2e'bhE3m!,3QeaeV!$8F+jK.LZ>JZ'+s!Hm\BA:j+\sVKVi6a,aH6C7-C/6OH=5Ds6V1u!KI]#3R6<jLZb:^I9j2DJSLK7
%C03r45,7kD(_pE/HC3(;S;8mDN#$UD"2u+(e8.W<i\9'Vm:!,ISOl1bVN_<>'O&FS2l[87,fCSfG3E'&Z(pNB7mrp"V*/0fHJO=-
%<+cp!HJN<T6eeK^;t=mV,pV-4.0//,6mlb"e7VSa[;\9:PG&MsODmrkpkWVeYE]_n"N8hE`-r=A=bJT@&CSGcMoGl!Fi3M\VG1#*
%lGXS#Qm7`OK#(F@V,'t$-+o#f0K`l.]0@O;c-^?&lnmH>O;/A/lj5@0['<qaNp:G%S^bp$Qij**p6"qPX2<C@Rg3Y[eC+eG3$A!_
%L?dmb=qlZ`*cF/CT]&P$I`S:s!DZb,YSnPM&?c1;?i:uedQ.qL;SZiEmZ`+'m:"WoYaA8\.'mu)=!@VZCWd-<_,P1gBJqi<j8!oc
%aZS8W,aV-)(h2'WAYg6p-`P.rAm5Qg0/s43o\mO(6bFf?1^:MLnF(?5RT\lk&Gd"oE$k2Od*tmC;&pi"-DR$kU<O;eE&!>E'Z?U=
%#RoHon?S&7V5h8b_??_QfE1+sgH_/F:9:1W.Q65Vgp?AZF)(KA\O4"84^1lu+6"&@oYOWLK"Lh6WOL&EC1:b*5UZR-*V#t0R79c?
%"#%<pE(4QX6Slk)db+ETq<B=te_q"g749B"+856"3okukgTn86/Gp[]%F+*BLW0n68\FKUCOR61OfA3%l,hKPNr4>"o_s:7lg"-?
%nmD(:IIm+!l%@G$T`S@pdu#_@=o*'Za:fctOD0G_781(<$ZSZ4L\)6ZJY#.(Z.QRC+'2Ls&$7TJ2o)%]lRi:iHHrHt)1D>7O0c!d
%T*UWFC+_&t0+1o$PON\$)\3puZ=2<J_&aARiW+G3,q3Me(C"r/iI$#4q&7C=Wl)SC+@p;B(hMZV_L0"Q4Bm[[l57AU#7+[cKdk.^
%B8sqWOVbq,*`!up:t[*,@"KV$8.6g"0f(2M531;[#)X:p*kKRpF!a;47RtF%$DW+s*tsf]+==r6J-k/6bJ<l[iH-9;CLSA[Os44+
%glk.]R9B9K76u!&=WBMSJ[p_:.(WIcc/K''8LCBcR#`erk8;ac4+UD'=hDbljO:2_8;S'LdAislne"ck&!kdBe(`ShE!eKme'6kr
%1W0a.DkeGeKd2M4HIh$"S`b'0iB>/"6Y[25[<3[)Xe6,Hjr=bD@DtI-<pPiE"$MAM._(X(QdLZh!G.H`UZ9i>RH7[7icJgC.QbR!
%#a`oWkn!Y0mFBl&,aH\hpD=hmoHO\e#Eechf7Qg^KMuG21T3>EEEQYPI;papPn$>I@W6_1;F^h_*[`/E?$Z1\rrT5$[M3'5J0b+9
%&?-]6#FpWL<Y1Td4qLc3a+q`Q,A3-d`3*a'W\QlJ'PM4$ZILpg#S1F^]D'rEL#(cCrWi[$&\13??W+;np$[umNP1-0;6ZeICN/,]
%68&$ZqpmnQV*q'_iG>M4UE6O)p(LE#5:df(VMGI*S)WR0G&F=J>M<<^ad*`GRkR+LZ4U-^/5V@qkpl`>M1eJ8-LLLfIS-)l@T7;O
%TQ]Eo>e#QTXAHtH:7jJh?Q,ZR^tPi.W@1/6TrD,D=Y&YseS^!hK:J$[7t6o+PH1^d6b6QW[LS>_qCo@uqm7'u*(:N^!`.(_ks2#>
%j"`uD!V,A['P7U#fcaKrS>sgo,Q6?$/3jN0_0Ij^KZ%k*YZQsqeqD_BBb42bLK^`UCie1_>@k66\GrX-Mc`g7B=2eG`3f\7YXibH
%3B!,2<?#^*g<^sn.tH9UR%ZVc?XCSE.rl"gAL6dU(Bj0LG=b+9/:;E:*PR9jg!Z$7FGS*u59KQ,F6`nGrs8&VS9u'jJ`p3XO`p5.
%F$\6PaO\V+g!\)HIt`-@J\-:-SZSTkj(.85D5ta6d4A*c8^`C[O<)V(5uR<?+W"^/oAMan&EbeFcAV@#f,!<0C'Kg2eP1!/@#?D5
%):E</cJue$rXg$ID3>RaGA"D1g?Ith?YA^%j7`**mYa&\H."#',Y%,Gd\8\R`ZY<>%%Y*6r?Elti\eZLge[D^p8#-16rkVSG9#m)
%An_^._!F@XV$<sG?)*-coU2>kI_F'a$pN.'JMgOh-"b7UY>BD,:$aklWDWh4+*:[Fm*M>0dEjU'r8JnO7>6=_Uf$8&2St=a97r"i
%;2o7fp')M>URfT3F<?js?GgNF^Y#0!@`?`NQc/\(=L3-:d7`"Pb$M0Rjn><^aUKitiVFq?S;f2.C,ElR*D8si"(r@>6H_5L:prQJ
%-JIQhlULcbY1^_'X84%^NiGVngu.]8.>1I_0[9\<1E+M7)'*rR#P^1aYZnKud@Ethd[Wa#I>$)XZ\gThaje]UR:`CVXuF`Wco[s.
%e[mn,CL^7bBrI51Rj=8"n4:m"r@;'r:`3_WH$1)DOFAIq3NWnq*fBq&f-VFOBrKL\UGH)u:`3VYU(a5E7+8/[GC7u]V!?B)Vq![s
%<_mZ4PQtn^;2F#A#POBHQU`@GKF"FZ@cT8p9SgmME2PrH8X:qh5WcdfCcAR@$$dQmWckh^q)AR#IsCJ"\S.M`mis"#UW=\R-I-uO
%DWkhqH;4RRRTH^!Nq,sjNLm+r=MMA\s6]''G'/:\Tl&9Lp[+0F)^im/m(q5orAuZ!<H<2g->?(EqF"s237h<D[^V[Mcp$Ih)uM)`
%,ZUZgd#p04`l<uGHfSO"5kSC$)5pSkH3K5bb;WO5X,*NJ1N/i-"6o<K+5i#`8=)`O*CT`_cE.8';j&WK,6&Qs2Zp.*:FhDJ\1&=k
%'$$^3KHSYeo''^WRm%DW@BMnlj"lIpF&c-DC3/nBBi%*SH?J95(eh)dbAgi@7N>+)\813]JfWh9iM.ZRmfqdkPSRb"qFd/##r^Ot
%3(p#5WgO5B`<O2j59\IM=+q#@`;9*1)h7tBR[g*\1*DDdD]%nh3P.>&J=Hp%,_sm*;aI2[pU."*2304(mb#%.6uKM55fUN0bh!S4
%_`RBZDQkXE4G#c]>A/_0CU-2T1jMY7Z'p5'9*\d.['#$(51$s\RXBQ,a1S,m2+\$Sr.KEb@8Iu+kAB"SFJN+R;-BlTp+_I;2q"4/
%X_<(Np(hrYDB28,=hQ-j)b8S<k(pA#2TV<KV$;FW@]Vnb%j'Ij]#U=N@n<XJE+0d,=X']IN_luKCV[cTcp:nN>Og+)ME7E")dqu3
%YGlYlCN/TZK'Ce'@c5J%_N7<1HNgQ/LnG_@ToKJ5T5<I+MX2,(2G%?XZf+qQ(lQM;AG=DdNL]<7.AXC#>Hrd[DedT.clm7m>fBYR
%kA'P.QteU+7qOP:5`a8XJ'b4t7l/4aY1QW@FPf-hdbs'("2d#&8@[@:!E5e8:/@;Yf^=a-%I<*DoaGB8j+41IWGSFr\0m!+5U`Ps
%:=EpN&@DiafI>RUlI=]tC<&Oo5DC(?E:<3^AL<VUmTeV`GP9r_3H_K3M#@b]-:igU8YES(F.>q(:7`'le3m,2\cWA'q.K!6E%$S&
%[/P7Z1r5W!k??\,[/r=&=@QZ3??hj!QVeU!&\k\o60Zlsh$(bT%H1/aTSlV)*+?Uh@h]sI35Qb,KKmKKBQSJPc;AI.#4XoUh2.gP
%1$SX+j,kEfb(<BYKa>g'hg4paHOV-lP%^@(D7Ot%llJtu'T:$EfQeV*foXs$aYr&!?C-7YUJ*8or%`Wf;GG]:`iqTtcTq._6qZk-
%X+neX829dG_NQJg?-Q1KZWh_47A39$.h7\4kE4:T*$g_<]/mke_t?^SkTL'6S!N9qjIM=dZIAOe+j_cqRR8"f+*)eKkp"ah1e1,U
%X.e8-[?M]1*(5mg,)SYhR<Yqh$$%b&"kBnWFL1Eu;Gjr,D&O>;%Q)$b)Yc[>&B#Zpo4BAr7!O_X&H2V_Ri3(Qa_Mo0FpQV='3^Yh
%kkA*1+Z'O-:<oLj4q+m^C$BYB6*8%<GG'6sE#rDlrb4209rXLS['ZmQL)tA!>]J>s10m8gI:-SeF;20%p'4pKd870opI9aO62\DT
%*BKLo0)84&MAl!n"@@92E?lk%G1MJ$C2^W%LA%4B"DuF1D2<H-TV!*U&DK9B\[EQVQ8c-kMXrj^Z8(AdURmCFm(0p_)R:--b&0Q2
%ZQ=/9lV`i,M'FpV5HT[-RDr^hD-V-fAH&N#8>.9,C5rMl<f+mO?A#H""`!\>6,t16RVPnl=+V3U_d6Sfd+62FC2mT!XW?RC?%)Q^
%N,T?Cdp[ThIUq<?IM/4AiPjWr(,.TE\pq;?G]i`<q\PqudY90k.S^4aCPgq;?[ZB28'<WTKV\FmP]DdK`NZ!_:aJVf-G61&/@1!5
%"'j)K(4ZYEN<miV:`"UQ@@tNg[*(($/q#@N0IWT54pPOWeU"/i(N;c&5I&h6[=kSN%qj8BLJETY/"9']icOUj;3(W#Q8W^iHfU(U
%Yt"`s!<W0V&IZ\%&*K%M$gbi/)=Epf4bDO(JhnoiYij(L4@Tp8AF^Sa>(T@,TO!!0&PNh)9(gT)i:0JXX>CEQd8K!pOm%ubUc@Fq
%@iJu5eI0fZ./naJ3m.9_#D@74EktP$NXp+iKSsZ%A:eXhOS9$j=YDBca-%*%?6^W\L\cd=C_@_*Tr.mr[\d+C&0GZ<;Ke`(hTQDf
%$q@g64G,+>L,<m:K>_Pafe>J33Vs+OefAZ>k"s3aj/`^.33]-mb]269CU@n(!QsZ2!Q>IS5![&$Lnpu929uaQbL0micTkQ`9&c79
%]W^GR#2H"6d1[XdX!o!UI+XKfoX_9baT?J]1C[(<kC+sn.iOAV/?LhXJ35Zg&V=*e?J(H;kpI0QMs'_8%bAB=a\>'(3X'&J,/FG\
%*Hf_9nYT_#\Jk)\.^A!k(-!lmmmBE%[1sg(*<kNV^-.,$1OC]b#<Lg57RMEmQ343Y]28XeNb][Hb>3=I29p'X\`s8(e0F.=L?bjn
%ralW_)atbM.Xn'DEaj1X3a99p!@;7`"!e;U+ifak76E:dMU'#a-aVDtHWq:kDo0EUQ0QY7;,"&V-)pb)1m6Je2IK[,1PhCZZ';@=
%(pg9*g^5p%),W8CFbYAKPWV/TNLWl@a')tan:_Or#;m&DA<['<0+E#:/Mn"dIeBD8n"6Q4TW^*ISMf/).'dkf\Rlk4+#-Mf5hY#t
%&EfZqaA&22-F`_U)RPg9H",&`53r\`6^!1s[r<lIH0@NXUt_EN/b!O>bbsE"NlQucY'K+JZBdXd3T5;aN":l[b2FFWCMFQ?.E$u$
%BS3i@`'G9g!Jo4fB2I,bh;6XG,'Q?i7:#leo[_RWrAuU:lgElVc2'A@[*sce4$@j$JaUO>\2U4,AXbKX$VQAZr'O-YmkQ7QNgD-S
%nc($V7s>Jcf4s[YC"J6A$@a-YXGU[u!aiZNMpTX\R*BUVFg?$T2c(b,%PknPP#bZ<\.Ot`ZsGcm']Pp#d9()K.:$gR1>fDe%;Go.
%[<k)-;pU#LE,A23%lDkiG'UUMKd%+@Sf\]cBTT6@nhm!q*&7JI;:]aNBWM`$6WDI4c=mRY0pAD+<[b8',30"ap0rd\4-q<<?)^\.
%*Eqd]g$rL#@U`:q+Pj1e8J<b%^lfg`^)Z^j,>*l8c9dW`6H!OLHYnrJ<ru!ga&*bs087Q^%0``V%(&S<cd/.U/..R$a]+1n6#2<(
%(DFd_0Hu]<J!cEF;-$M/pK6FZVb'hr,:V&ffQgOW(KSm]g7Fq9Gd'D%nM$(2-omB.7ts^k2l*c\\O$7Nk(o$%fbh@R@)L;m4H,)%
%/KRC*Y@d5Q5'TU"(%Ss>^3oH)6;#$:8\6_jB[e6O*+rBh76Vc:B4%llU)tOI*TBW!(B:6qN"TZtX,HWgLX)<KFV#r2qWoF6BL91q
%@68#g<FqZd3S"dc0&f_7NoDQH(C2u@'"Vhr*S"4+22K3%;rXK*+(K_`'31!Q5U`B^LY?5g[t03E0j>c4N6c3c!oXsH8'FbaeiI8d
%HoU)YHSuEX)_b$$Le$Un!1+ocYW<(Jas-O]:2ir\bP>B(lrYM8iJ81jGau#[TRk8?d@c@b<_G+_#Y/ME_bla?)T`\bVA<Xp@]_@"
%S5NreBfjU`6-YJ[CFrtG`]CGk<<LBH)Q?c.3Fj%fHOMIVMM4k0,`_q67>57u4M:BJ'>pX&B6f.M.*%g;^f*LgX*I+3G%`JTXV/dV
%5)a_STaVZ';%la8f&q.+=q3.cb3sRY:34YNdl%6Da>gX]&C,?E/CA6eP<OWm]GN2+9?bd4D.LT%_(<BiHtulFVkRaRUuj+IoU<GD
%K*=:R/#*igQ@>-0.^pOELERgN0k+mgj3qF&BR*@ZQ!C"$]uFc!eV@Xu,+o!c#$2,>/T*Uge3GcO<5gAU+4idY,L$ES]fU[o^`G%G
%WMc!>C)h)EF,6i_Rui1Fgf(BDZ#KLb;?]p91;_G"--W`j32=q:Z;aY6`7)IlT?nPIopSqSVEnu(Qt7e)qJ^1NU8'aQeTQ3r3uX"C
%T%+5iKB\AS+`Gcj7s(E4bnp?;K*Rana6<*FXnkNkmTk9cHM'UBL-0;a3WtP51o5^MSEe?1D<XH$l&pnrHDHSm5GbHYqZlA"7;7G8
%BgkOGmL>^X7H5tN04.T9#=2J'PfPR.*:f9HrC$mP#JM8&E.&dcjH,_(RGbMF&oSoJ_m4-_@Pn:A'FcuOle8&62mC\hVqd\rk]?Zd
%?U+FZcd4#,O@$ZbNH&E[[2Nrc9PiL[K,'/>*t(g<V2KoqWretodlq*-RmE5@$J2QuD)Y4j3Ef]57dq;J+=A?RKP:^IRN\p>hZo/0
%>e>_7LbkN8W&Dhil"KDBC6&"m+C/,$ZOsg<J7V1g6m6P.#*:P0ZXTapkM-c@JWMKb]_J$.ON&:dh?in(B9o5LPH2[uIG>TaU(q1m
%Kb]og&[*^,d2<C69NN!hIA$Kl;$gE5eke4/A*O9PP[eu:afq's>6Rg:NFj-H1P_Gp(9e7MYuk"U="$O:YO6!NdOT"X_W,"KI'#I;
%;Z50[*?]*d33o`O@=a5!,,9gp+n0F,4h^..??`FTn&=C@ZWh'XQ6+Qij7;0Jbnh!)T7&W#Pi/GVBQ9+hgZ#u(LJH.CFHM$?l&bO9
%%.edC@G@Q_[&b9F?!::/#d>IQ7o\(Ap1u&BmU9Gm5Uh^NiaR;\0ekD9HISVj6A._=4G&K4/^$iCJsr>EGl<uo"5(F,WuhB-6m`GS
%$-8MPrf;(SgV*Re7QT`V2F'C_JFIoiKQ'I6+1A:1[Y>/\3#Y&;,XX`a#Di,mno:N7`[GB"U<N7BOq)Y7jljI,gSS/-:C"XO%<2u:
%Qgc$S,QVQ<4<N;CPsG+42a`N;7lpkY4Ra'r<)qrFTGjmQ&a0CgXa)tc8:pI7\AJ!NeqAf,EQoS-iR.'3Tg!;\3#ALU@#g-&02IH;
%bdbJgi>UuAf,%">6NS3%a0]12UM-$eip*kc$BJ/XE<'f3a/-<FW.hIL*e)MWjlSYPm)M)AiPA_Y\`5,U_pL-g$;tW3$`Q9Af2Fcc
%qN!YjN]uB$3Rpg+;-pmT?3ED0Y$:h/P&O<21BUm85\@[aQfS8fiFO;W^`V;8V\$dtD1Msf_2HU?)>(3lbRD:?CMW:F=K9I'bOB#%
%9d'rqML[4C:5aquk4HJ$>ES!:7c5qgREu;BAdDDe,UqobG5B[[0qZtX?Kr^(cK.L&XIikV34mq>Q;?t@Wde3Eh#5'.Q,h&'^!;mb
%?6htkOM6I':)ZZ_BVp1n$F,h3$LJWrBp\dW7GWbVdB[Z.Wb?+Ci`_(A;kY[6i3S\lHf][,0=;PJil0m:Hj5IrqU"7SDrr^+:o,-p
%J7M;B61!/38N:EKYLO%uXuD=5)Xt$[**$%f2TH[GFEAnml6)r93mNDhPBoI,!32W;eYs$5(S$>B701/4G:\jnT(t<5V?EWSn#@BB
%&1QpG+F[RV>=D:S=,hiWl<-RW9<C17<A24SKE];WX'(B5aGb-tcYtQj,65i4meoL<1o.5,iJo--R]/b],EHfZX)P)Ji$NJ>bU<u]
%Ec5c52+SnAJ5aKA1UFuDCp"#!A.Ak@S*K6`/3PUaY!tWb"Z"8r'e`$VG$*r%2n<YXNCn@8TS8$>JP%ON`'hXN5P2Gi!E>J/qs%9F
%eN6M0Nq@QZp8D1#hub&JZ#8%9X,^s?&uq]4;OSr;Q/caGD]m0C,9hmteS$-s1YuZs+Y;VnM6>5IdF;sa5](kc^-sB.rkN_1R'b92
%*p>FML^<Do9<?MaEQZ_86*Q$C,Mk#CZ3g=-jR0+sT7jKq,juDc!Ap=_1!Jf;j&O=e2l8g#>J%IG.U"Lgl\\T4[8f.(dE<3;<\AX1
%Nq"m)W"ONdj"8t-)k\*(NhqLN$oE,A>e!,I2LIbB`/RF*_c"`2o:66o3c"*%/k6tqe?%9G&Ltp6BI_SaYbf9E/@8@cZ;Kki'I1a[
%+sa?P(;(3a.'JW4AY+ga_>e,Gn4=VgZWnS/AdYkIQ51sgUCQ['8TX*HC2Q4MBUlhl0lbj2&eUm+9o^WtMOW=>N_UN@-.%4FA&B$]
%&Zi!KQ!T`[mBe_MNmhF:H(raq5;@RKRo:.b@:ichjr^"c8uU]N^-5#GD`L$p745Xm5XnFrq(gQdLAa1VFSKgT)=D`Vb4%p^81.MI
%?#p.77tSb+^d)mXGs'hq(`;.RO)<J9C%YP!SeF)Tm9QQ_X*47Ec`'D)FHupEZ5BJRlY(L\JG@(fL;YfkE2*'VYlnK8Q3A?fQJdD#
%_/\7)6$#;?f%&Fh^/S6H6PVt*<\Y%,;+R]2UN:/1dqoM/E:b%%\UUYg"!rN\]T0!4*?%77pDdCDc6J.]@"TV?Y[tfFfd>$uSYd6a
%VD2l/%aito5@eT$VrO1%el+UT\"<RBjkE\4BN58PQ.V8"5(qlr258^ccp7Fo*dUFcmR*\qqZ7#NaVhdCOMtdoA_;1Z:o)fHa"sPb
%Dr%+[l"rVK\],73>.))i41]0_$u'P&T7,3+;:dWd^ES?[S1(PKV/.6S\A^2-XmL2WG"Uo/L-/$7@&u-Rf>ak"dHVS-%^"p+XaQ#0
%<H3V+T`?!_Ys(b,%O*fs4j0g'dhJfmb&rbH:=/(W>/L;3imUbXlNmJ154^=ki.Y$[mVda/1=VCXe/uPgdn`"S7R=&h$M8QT>U$/*
%kA+TR$+:uV2MKc/,j+SfmuE$jl&RL`K4DAd:Tdk\i<-`:q;P3HJ])Pu$J%f>JX1)rnd;jR"(,jiYQuQ[9:bqDSb.,`/OZ=-[_h=^
%_@Gk`6?]R>od.UaIMpZN]EFEV*pEbGZ^r8AP/+q/CaGJ8\W/iT$@,Zq?(\4[32G5_@WDPb%Au"&o$eHe2PdP<Oi,%B83jjScqq11
%f"r!]qjr:kLfau1kS:smSDRT<Xhrn<E\eu!9t#5TTnnXN/r_iNjM<f,*k%foj@SA?QId:EKb9f,L;o"e\I>ipJr6@p`M:BcLIbV3
%KS(>hl]745+".bUNV=QHP^n9(*+[4eU]u.e',(@oYk"0Ya?i-=9V*?@jG+TX`.;5Hno9'@nLd>jlCu3m.`gX^\`Q\WTfa'j:"1%@
%!6e<.EM#Yd#9r\K*a[DWL39GLE(T\m7E?,)^;Bfank;l[cV4n*L;YOl0g(/Q9&atIP`6=aja\`?q!f,X2mtE:a7>t$KWK?]pHbdU
%FJ*IB%L$d/i"k(ah]HpC+k;p1ikcf#Ku!.hCi5s"#($-Hf-chJ2&PQPmcD@OhgP+W6%@tdnuAV5>iU_aN,=(,dKmYj[";14OoFDU
%j@pJ&fUGI7#`qlF'__QV`!'k;1a7IW8/\?A5GNsEo[sSJ]cr*u^]5a]+=9>\G`]uh'81K:PbUVD;)(h@JGd@@L7ePF>sWXslapXU
%>>]Pocb7>Q'"`400Q/f-E"L'BL8-[:3hH#WTdtBu;%c$PiYDbmPB8#VWkI@045,"pR\>.ce;+5j%RP!\nL5?5a+9(AA`0Mg`15$J
%IWCtC.#2%faV6d45W6c?Q!7uObE__)PcZ?=CCm;Pg-gk^-iJ?9&JrshU$>@)Nb:LnBFW1+aEX_B,L6d2-lS)h+R[LZPc\Wbq.bqu
%+c]#Q+h$Y1lt-G.;;p_$T:(GZB;VA[[#T41Ql1Re0hM,7:n1Xo8K0JGMaW9bksmd*4J/V(8VQ:_e'Rp7o\tM1]oa2N]p[2?lhPp?
%*8H\4Ch>^O[d!Ro1S]2HRMj(/eBB=1dlO;W;4AF,WL4X&Ss^HG6lV,-dZ32JR2J0>1GcOD00\#cDe'(FR8H(Ac&>!DbRAC?$*d4F
%B=DN\S/JA,bF,W*4*r!+^,+^KBfVr3P*.U.D'D5^bU+af%T[U>X\pHXe8fHGeY6uA-qMIJJSI2$cp#Cq812>6*M;/Zd;h^Y;C,u*
%Ec15d/GdYF'r9p75dd,MTcsP-,@+-)hIno*HEQARfJC59=S0:h):[cl5dd+ZBH,s`1S#*3FF;f1iS,oN(h\2m^Qgq91]<U$YuG[^
%C"e?JTE_4dbWtim;.s1ZUQN:S7rS$k)*QSuL2Y^r7KI)/;3+0\V"W"toq!%7+!UXO36HOY@[iD(DJ$8G;7'/?7M2c-=%1giB,%0&
%bWrS+R@tf+7O)28N8A5.1O?4cba=f)I#tcq15!0.;=gXFN'a#())K_JYt`8O2`$nl.9\-;VMNe]nK;]+l3^GECnR5dbtqh*UQNi^
%7W1+B)a2g.Cs5R+5"OEIR6dC5%9.C)Ksi.bRH]CWVW3`Y2r.IIrcb8!jH%&^SQ/V2IC*>\r1A`l=/Ye"6j/mHU,C"L*)k-N8lmgJ
%9K&^a@\O1E+,C-E5@]Vn#\qs,P7\M4m2Z;Z[ZOG)1A[0Ypu>(;YdLH(:*N/3jD.7el8?Tl3YjsI%)e/GF3%FPW'^$/E=:Q$-m!I#
%r%>HiUQ^8lqP8a741(<8:Gt56&#UgYn$k+lS=`*TeRNlc\=sHC,/-7&X\h4-!/-R'0iE$`r:":'m7>IJZ$oubUFUWT1\13d7kFeT
%fG=uU$Q0gF2!!U.0CO$5'\QD4UI(_!d:.+p5df>h*a\;F6gO7,?lH%7N'qb6`#46++mL;Q"2ucIe)WFnL7flB&S'#lEj18NPL(>e
%o^uo>ht<fWnOPKmXe=D7HmQ0Qc<!mc94+fL^ggA[HArr<l/ao'ZnCb8JG5;YS7lS0Sjr#sO4sHUg"pp+b[0ac%>;;q7Eia8G=sS0
%]_G]@;N@Mn"qgR)qG&Y;WB-("Bh2a8NLj0ub/rD1Z.'X'_HQ5`#\,GB#--e.W*pQlq0%&e/kV-qS7-(F=^mFr=>BT^[2d3oGA_tn
%JqQ1EfNB$cZE$8K[$C+T#)Y,[ID'&i3f;NCA^pu;HJ>]_40t4X%f%Y3NbII(6O4PO:`G"a135FNWf$B(!c!t$KGKV?UsS#:RlFP6
%Ql"Z?U=VdW$kN?k30fR!+?P85[(,2e*V*\#alqI:m$<WK(7d`d`kndMF`A_+/\+L2&-@a,[0DYZA&R-noTULNotA0[fSmGlM!X<f
%1;jn&3kD$K&RS!POXJ`2!2;H*XlW,B_<=;GqO6B#OG=h%.?4TOZEB,'L8)FMR[K=]AHPe(%^:(leC?Xq29<h#cFi(SfWZ)#Hh6=X
%p1a1>qX3G0Jlpfl97pji*u$)#Q=snY3e/K=OmUZWEm34c\V"1G6CPd;1a@:,=Oipk`4Kcu4]'D`HNf>c90R2<0Xb((?Yo6F#j^FB
%(DN6Qp%*hT$iaHl\(cjS?c9:G4hq;XM!c49f*/&tTLWberiVPVVBC(H[343=C:[LqC`LO;k%eF[$oS>4,QuD1G0NI'1DXj$>4Xgc
%R=f07M#Vea<)n#a0^LmT>EjZ^@U8Y8@@&9,S.SOB6pO'f*f+Ic,39^Y74tU/R]8Ce/0Zp228Q$-6aOF)+B-51-QPoj3<a&bjP]2I
%f7QEJiEc3rYZd'a8TL.`<[LlqQBPgp3E-p`;n]R_?<G"=YA3RsS^[</_I`]7K<p<f^:aB[,QQ.s%urA*G[<Jm!6Z%X\l':(JujZ\
%oK?"9aO'?)5=%KCH^pnoL*Im?F0gF4`]%X77UNkNN9>^(7t>]j^N8qkQhRI1VrEp'=@b&j;9^Fg%qA6c%Fm$*(5pa@3b*1Kns+GT
%bA2HGP]TNXNUQbS^D)BMbb7N74abDI.bqi8_&cKZn[PF'11m'8Gm55!R\:"9Y?#0:Q5!O=cn$LMA.Rj^76Ohn65X\4_sQ$IH9B+q
%bKP*mT*B&%m=UX2M8j:N,;fO/5TfT<4<(Z!Xb!qV?:bF['Nj@!4M2gLI$k'CqVp2ri6r0=9n9!+ATVbrN>!,_MQUQio9(GL-&Wn8
%ZAFV;Wq&YUC3@R&B`-Q.+;-\H3KGRT,+f"qf+)O?(lf9:O(i=[(\9(T2`)`Z@ZKT"2h;5rN#F]<3AiM9%[--k]8o`NM4B)m:VjS0
%Wc@Inq8<j0jlkDp5U=Ut#*c!BYj6-8Lhl_387uLelP/P=1$_C_r:WaS:FbAWXQ.d;?;Z@oj9=N%Eo#Ti3lf+j)Vn>q&u99B]>t].
%j+:sQ<+MI[8_T",(-2pDFg=L3MN:nIpXY-^`(%h'FRYCu`PaE>UChcJ!80-g:/S9P;,jk-A>HFf*fR^C/31aBA?'7M4c6.D7Un>+
%1Zi7*k#8Nu2=\a(M@gYbO"QkiO!U`,[,M3l5kOQc;-\7BbCQcZ5-r4Yf0aSX4MU?'"OHV53.oQ9=VX]JUP.(*Mo;ZA^,_^-ej.De
%8o1TG"%#O(Nmb;aN,YW1M=gZ!BOF+WkA,UVjbPD=e<(sjCR#RR>9pH3275<!V^2^1QkuB>72LV/Lm>9T9M?u]GMVIgjD^1);=rL+
%HoK_,)&#mg=<e.nF<jN,N2/UsE(3e&]/UW"N.`7KdH>@n+O?')RXYHhkeiGZM>2&1K^!iN+=#K5M?=u&._j%g=6V\AERamgdI/#Z
%Arp3&,G\+07U$"hr,GK&_;)IhnWZO%"E>b5_&H"5TYCj>o?B6ZmG<[AiuWfiqkJIHD:6D4UsUtQjC?Fl28g6R!rN>L%$I\l>&#2P
%<7:0[A0P@Ek)=Ulk,=t1_6cA:Vd;mCR%&6\I'34E/e1iZ1%9$fGr45g)t8;CZ$M(-NBd)T6I"pT'-F778ph%HMZEO#E9=5^gAB_1
%K,S/3%,7mKoltd-qK1b-c$_M9,MI6U/F%X_lb5q]O.2-=+h[Ha;A<$-)Bt^hdP;u;eJW%j'"%r"ULf3!MjQ<hNE13-pXRJlc*_$;
%")Zcc8n-cFknnujn=*?HkcVR:p[Lc7"(Z0KYO=*Imad<LgNP;hZs6obpZ.CAMphp/=7e^1+ua*&,t(B2<0o`<\Rh+3_QHR1L)9uo
%]BB:pS.e2LW*@R)R`d7H[p^d-h@$eM.joERZb)$nnh2;NQi8^K5N93R852MC_SD2TY7@;Ia@3njcnl;BQcrm_`,G(g&CN7ijGXou
%Ht&(+-3\^(#buk/i;\D,-$qj;FKE+0dFF%:*ejDemj[HI'ND]]olZLFm>J%<%CD+t2UTR[7CsB!`)3-=Id?QSCMY;dZ#@"A%kebZ
%IIYm(\/@:d%;%R3dd5YQd$D0o/TdU0nIKC;gc^,+9OgIZ.]+r;.b1\'&X\GAW2Rj-oU3"EIImA^49U78R"r[(VeLQo%Ok`Z:%41G
%jE3,$b%m$+)I5NoiN'rn[lWeK52tX%``Vbk;[=FBPaLV7OqJ^+I04A;<YFi!#4Qd^^Ss):d\((f@Go(T*G*9)plJ;J>MB(P+lf4[
%)Gs>u$str:[.TpEQm^!4WlBgL38"3iLp0TlQ0ZD9,hRepD".9sHWI;%%UNna`qsG6%Whq@6nne\>+<R?ULtc.LdR>eUn@PAd$:8i
%e%q%'\;0-5#JH*7_L:AM4'K80P#*VgL`="J<,+OZjDZr3?pP).iI)MXjUJeP>'\q"FkRO$CH(+RlO_2_<<230)'ARVV,<e8<4`KS
%*UN;j@i/FVFStdq@X.(q`BSerM*tAWoAI/K9?-#"SmN%fRDh6o[gl9_U*4;tatIbki;T,jq8`juH;u!M9lf#d7h+;[QS_6@$PT.`
%*eCa<<f9=j*2@kD8;].X(83bUbt+cVTdUVu;4aaF(7?bERm@).5jL0EBTsm9!6JG@Qu5iMk*:]\j^bs#ag=31TP-#m^i%O5H)_,]
%Vs0^=@1m3fKd,[*ec"[5UqD-jg1o8,V("P+b7E<e%M9u,C>Ekllg*6u]akZ%ehC6$"pJ"Qe]:*&4;UdQ,(;oRUm$:DSt=ddi7YY8
%):>YU?8`UNqkrb8=(`&X+8G*Fp@ms\(ZIC8lpPC).m8Hj;7J+q;0%K^GQTm.%bSiJI=I.-Q?J>?:`@pkb>8P0MVq=BQ&<^d6so@J
%D7J#\.*aqo$LWtR@C,I8X"-L3oeD!94*bYE,']R>5aOk#T4fM<J@GVe&/a_q)\m;M[E$l!dIJaq8RQ4eNqL#)*CWcf?t;Y=*6"*u
%a:LS6X.^XhgDrr?MA!BDXf9q)cm1OUj6\qgnC7B#e[p)I3gQ*LYmD,UP.)In@^VtU.?U69j[OLg2,npD/FPAq[.Sf(8*^`,Z]^jj
%J?hImAkbeYC;SjG*>(RKOD8,;LVb@<[7qF0OM"T"au(C-BaT:Z!=0Dk?HPX,IoW^*UZ80cpQQkH#<#eG@4,,XQSgb]iP"ql]Hd=5
%O0pV#fh]88Q4'\k`A]+_$QQ9_:?X@*ZcbT!OLPljTU>)%6;TdB"Y;'FWe(ctd?i$e/Y:mZIP=C(h\IIg'ePA!;qt6'-gK&r!/[hV
%Bi"61:WTB`1`=l?=+]SYVgXJE^Wd`c?o"m,ETV3oDegb^+97*b]Fg;::`URV=fJ:I#7]l^[7^`uIX6[B!*hD\RjgtJ/:(5+.a,JG
%U>q7E(e^"p[=#u)5?l;H0NM6o[$FdeWpVu5_uh-`[<(28V\(rrJMLK9K9Mh.7pXV*5?9PnCrffB6F-DF&7H!1R(1bEU!`!B/JCVj
%$n1U.3/Bt,]a,5tH%3c.8?2e.IE"6lEG[!TT1O@>IMOke;VX'$V\9Qp(CZn1[6hG3Ted9e,Lc!H4Sp)ZbiJ%.D@0:"@%`L/X6O@e
%dbI:IDM*07oaZumq_5+<pNP/4@C$:219$uWhE3++-jp:]&4h$#O7\ebmqe8\S:+N,Ws7)X`6LO23tB]<<Wmm/773:6%b)4m;7t#.
%#B3.L<QEeJb:h/K\7W[+n+>bq8IsjqC15nala)eef*D:q1:0f`3Zt^Pn_I_IFV+X`E8lJ-0c_VCrIRDPcWH_1cj1rB7V%2c7Oe[2
%afQ.XYlqdG=U$OS*36K$PHuLf_H/t[%^$YML[YNATF;5j_(%E3#[e+HK;='>(A3s4i+>=`0iG9_mfX^"-4,?e%d"fQ?o'<Q>O\JD
%Z'dprL`-ChCPEu97h+[\"/sJNFeiK[T;rE_LBB&6T"GssdX*>"jqWFS*35^7-5UJ\enT4c3.dsKj#q4N%Sr\nC=Pd7A?LoJDbLnI
%)2:IEW\:u8X)@L>+B";*M0I'!"V=EW*hm)^@2Th!_"^gC.)VcDB_'44g7g&S3eg&Z@V;k"7u1\qHC8TQVAFI.Q*q/)2_VqX(k:@i
%#sfJ.YZ!9-%X5Y>'PP5t>HKWi=%po'6=c/XbF/,]AtUB96?1?aNM0II$J\J%;?^P]U+_jgNg0)gA9]=2./gE/"s2c@@kUl%g;!R(
%dX^%'cPled"3oB`[GVcM^(u?^*BTVNEO:edl?KCY6+`]\&.]CA5%7[[$9shB:e>,B708KSSP,+0\SPN=_u#X>>UQP:2=5f%)DaV?
%ckW_O-9=L>\tML3i\=fD`S=GMY"V<&$M_d")DH:.kZD8+'jBo^,fYVL8E3*LK/<\YA0#?]5?4&JCt'_Ic/jj^#]72L5C"s^lLD:F
%-hm)%hX6t!B.r4X5!"Z@BIs])>12iCWF";*UeI@hLm`Kn8M5dj;X/sOlL38-oT*q))m6qsEK^WWGY#WN+.h7OrUbu'IX:\1?eiAF
%nupMpPD]fJH[:bPl/;9c.?[f**o+MOq&L"\l31LBoplWmo#kD<J)dLN>6~>
%AI9_PrivateDataEnd
